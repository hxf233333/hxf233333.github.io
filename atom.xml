<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>无情</title>
  
  
  <link href="https://hxf233333.gitee.io/atom.xml" rel="self"/>
  
  <link href="https://hxf233333.gitee.io/"/>
  <updated>2021-02-28T06:48:54.328Z</updated>
  <id>https://hxf233333.gitee.io/</id>
  
  <author>
    <name>hxf</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL学习笔记_day4</title>
    <link href="https://hxf233333.gitee.io/2021/02/27/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day4/"/>
    <id>https://hxf233333.gitee.io/2021/02/27/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day4/</id>
    <published>2021-02-27T10:44:27.000Z</published>
    <updated>2021-02-28T06:48:54.328Z</updated>
    
    <content type="html"><![CDATA[<h3 id="5-5-分组查询"><a href="#5-5-分组查询" class="headerlink" title="5.5 分组查询"></a>5.5 分组查询</h3><ul><li><p>语法：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> 查询列表<span class="token keyword">from</span> 表名<span class="token keyword">where</span> 筛选条件<span class="token keyword">group</span> <span class="token keyword">by</span> 分组列表<span class="token keyword">having</span> 分组后筛选<span class="token keyword">order</span> <span class="token keyword">by</span> 排序列表<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>执行顺序：</p></li></ul><div class="post-note note-danger"><p>①<code>from</code>子句<br>②<code>where</code>子句<br>③<code>group by</code> 子句<br>④<code>having</code>子句<br>⑤<code>select</code>子句<br>⑥<code>order by</code>子句</p></div><ul><li><p>特点：</p><p>​    ①查询列表往往是分组函数和被分组的字段 ★</p><p>​    ②分组查询中的筛选分为两类</p></li></ul><blockquote><p>  ​                    筛选的基表                使用的关键词                位置</p><p>分组前筛选        原始表                         where                group by 的前面</p><p>组后筛选        分组后的结果集              having                group by的后面</p><p>where——group by ——having</p></blockquote><ul><li>问题：==分组函数做条件只可能放在having后面==！！！</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#1）简单的分组</span><span class="token comment">#案例1：查询每个工种的员工平均工资</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span>job_id<span class="token keyword">FROM</span> employees<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> job_id<span class="token punctuation">;</span><span class="token comment">#案例2：查询每个领导的手下人数</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span>manager_id<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> manager_id <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> manager_id<span class="token punctuation">;</span><span class="token comment">#2）可以实现分组前的筛选</span><span class="token comment">#案例1：查询邮箱中包含a字符的 每个部门的最高工资</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> 最高工资<span class="token punctuation">,</span>department_id<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> email <span class="token operator">LIKE</span> <span class="token string">'%a%'</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> department_id<span class="token punctuation">;</span><span class="token comment">#案例2：查询每个领导手下有奖金的员工的平均工资</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> 平均工资<span class="token punctuation">,</span>manager_id<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> commission_pct <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> manager_id<span class="token punctuation">;</span><span class="token comment">#3）可以实现分组后的筛选</span><span class="token comment">#案例1：查询哪个部门的员工个数>5</span><span class="token comment">#分析1：查询每个部门的员工个数</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> 员工个数<span class="token punctuation">,</span>department_id<span class="token keyword">FROM</span> employees<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> department_id<span class="token comment">#分析2：在刚才的结果基础上，筛选哪个部门的员工个数>5</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> 员工个数<span class="token punctuation">,</span>department_id<span class="token keyword">FROM</span> employees<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> department_id<span class="token keyword">HAVING</span>  <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">5</span><span class="token punctuation">;</span><span class="token comment">#案例2：每个工种有奖金的员工的最高工资>12000的工种编号和最高工资</span><span class="token keyword">SELECT</span> job_id<span class="token punctuation">,</span><span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> commission_pct  <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> job_id<span class="token keyword">HAVING</span> <span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">12000</span><span class="token punctuation">;</span><span class="token comment">#案例3：领导编号>102的    每个领导手下的最低工资大于5000的最低工资</span><span class="token comment">#分析1：查询每个领导手下员工的最低工资</span><span class="token keyword">SELECT</span> <span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> 最低工资<span class="token punctuation">,</span>manager_id<span class="token keyword">FROM</span> employees<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> manager_id<span class="token punctuation">;</span><span class="token comment">#分析2：筛选刚才1的结果</span><span class="token keyword">SELECT</span> <span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> 最低工资<span class="token punctuation">,</span>manager_id<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> manager_id<span class="token operator">></span><span class="token number">102</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> manager_id<span class="token keyword">HAVING</span> <span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">5000</span> <span class="token punctuation">;</span><span class="token comment">#4）可以实现排序</span><span class="token comment">#案例：查询没有奖金的员工的最高工资>6000的工种编号和最高工资,按最高工资升序</span><span class="token comment">#分析1：按工种分组，查询每个工种有奖金的员工的最高工资</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> 最高工资<span class="token punctuation">,</span>job_id<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> commission_pct <span class="token operator">IS</span>  <span class="token boolean">NULL</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> job_id<span class="token comment">#分析2：筛选刚才的结果，看哪个最高工资>6000</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> 最高工资<span class="token punctuation">,</span>job_id<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> commission_pct <span class="token operator">IS</span>  <span class="token boolean">NULL</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> job_id<span class="token keyword">HAVING</span> <span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">6000</span><span class="token comment">#分析3：按最高工资升序</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> 最高工资<span class="token punctuation">,</span>job_id<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> commission_pct <span class="token operator">IS</span>  <span class="token boolean">NULL</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> job_id<span class="token keyword">HAVING</span> <span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">6000</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">ASC</span><span class="token punctuation">;</span><span class="token comment">#5）按多个字段分组</span><span class="token comment">#案例：查询每个工种每个部门的最低工资,并按最低工资降序</span><span class="token comment">#提示：工种和部门都一样，才是一组</span>工种部门  工资<span class="token number">1</span> <span class="token number">10</span>  <span class="token number">10000</span><span class="token number">1</span>    <span class="token number">20</span>   <span class="token number">2000</span><span class="token number">2</span> <span class="token number">20</span><span class="token number">3</span>    <span class="token number">20</span><span class="token number">1</span>    <span class="token number">10</span><span class="token number">2</span>    <span class="token number">30</span><span class="token number">2</span>    <span class="token number">20</span><span class="token keyword">SELECT</span> <span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> 最低工资<span class="token punctuation">,</span>job_id<span class="token punctuation">,</span>department_id<span class="token keyword">FROM</span> employees<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> job_id<span class="token punctuation">,</span>department_id<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-6-连接查询"><a href="#5-6-连接查询" class="headerlink" title="5.6 连接查询"></a>5.6 连接查询</h3><ul><li>说明：又称多表查询，当查询语句涉及到的字段来自于多个表时，就会用到连接查询</li></ul><ul><li>笛卡尔乘积现象：表1 有m行，表2有n行，结果=m*n行</li></ul><div class="post-note note-danger"><p>发生原因：没有有效的连接条件<br>如何避免：添加有效的连接条件</p></div><ul><li>分类：</li></ul><div class="post-note note-danger"><p>  按年代分类：<br> 1、sql92标准:仅仅支持内连接</p><p>​        内连接：<br>              等值连接<br>              非等值连接<br>              自连接</p><p> 2、sql99标准【推荐】：支持内连接+外连接（左外和右外）+交叉连接</p><p>  按功能分类：<br>          内连接：<br>              等值连接<br>              非等值连接<br>              自连接<br>          外连接：<br>              左外连接<br>              右外连接<br>              全外连接<br>          交叉连接</p></div><h4 id="5-6-1-SQL-92标准"><a href="#5-6-1-SQL-92标准" class="headerlink" title="5.6.1 SQL 92标准"></a>5.6.1 SQL 92标准</h4><ul><li><p>语法:</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> 查询列表<span class="token keyword">from</span> 表<span class="token number">1</span> 别名<span class="token punctuation">,</span>表<span class="token number">2</span> 别名<span class="token keyword">where</span> 连接条件<span class="token operator">and</span> 筛选条件<span class="token keyword">group</span> <span class="token keyword">by</span> 分组列表<span class="token keyword">having</span> 分组后筛选<span class="token keyword">order</span> <span class="token keyword">by</span> 排序列表<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><ul><li><p>执行顺序：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span>、<span class="token keyword">from</span>子句<span class="token number">2</span>、<span class="token keyword">where</span>子句<span class="token number">3</span>、<span class="token operator">and</span>子句<span class="token number">4</span>、<span class="token keyword">group</span> <span class="token keyword">by</span>子句<span class="token number">5</span>、<span class="token keyword">having</span>子句<span class="token number">6</span>、<span class="token keyword">select</span>子句<span class="token number">7</span>、<span class="token keyword">order</span> <span class="token keyword">by</span>子句<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#---------------------------------sql92标准------------------</span><span class="token comment">#一、内连接</span><span class="token comment">#一）等值连接</span><span class="token comment">/*①多表等值连接的结果为多表的交集部分②n表连接，至少需要n-1个连接条件③多表的顺序没有要求④一般需要为表起别名⑤可以搭配前面介绍的所有子句使用，比如排序、分组、筛选*/</span><span class="token comment">#案例1：查询女神名和对应的男神名</span><span class="token keyword">SELECT</span> NAME<span class="token punctuation">,</span>boyName <span class="token keyword">FROM</span> boys<span class="token punctuation">,</span>beauty<span class="token keyword">WHERE</span> beauty<span class="token punctuation">.</span>boyfriend_id<span class="token operator">=</span> boys<span class="token punctuation">.</span>id<span class="token punctuation">;</span><span class="token comment">#案例2：查询员工名和对应的部门名</span><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>department_name<span class="token keyword">FROM</span> employees<span class="token punctuation">,</span>departments<span class="token keyword">WHERE</span> employees<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token operator">=</span>departments<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token comment">#2、为表起别名</span><span class="token comment">/*①提高语句的简洁度②区分多个重名的字段注意：如果为表起了别名，则查询的字段就不能使用原来的表名去限定*/</span><span class="token comment">#查询员工名、工种号、工种名</span><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span>e<span class="token punctuation">.</span>job_id<span class="token punctuation">,</span>j<span class="token punctuation">.</span>job_title<span class="token keyword">FROM</span> employees  e<span class="token punctuation">,</span>jobs j<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span><span class="token punctuation">`</span>job_id<span class="token punctuation">`</span><span class="token operator">=</span>j<span class="token punctuation">.</span><span class="token punctuation">`</span>job_id<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token comment">#3、两个表的顺序是否可以调换</span><span class="token comment">#查询员工名、工种号、工种名</span><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span>e<span class="token punctuation">.</span>job_id<span class="token punctuation">,</span>j<span class="token punctuation">.</span>job_title<span class="token keyword">FROM</span> jobs j<span class="token punctuation">,</span>employees e<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span><span class="token punctuation">`</span>job_id<span class="token punctuation">`</span><span class="token operator">=</span>j<span class="token punctuation">.</span><span class="token punctuation">`</span>job_id<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token comment">#4、可以加筛选</span><span class="token comment">#案例：查询有奖金的员工名、部门名</span><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>department_name<span class="token punctuation">,</span>commission_pct<span class="token keyword">FROM</span> employees e<span class="token punctuation">,</span>departments d<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token operator">=</span>d<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token operator">AND</span> e<span class="token punctuation">.</span><span class="token punctuation">`</span>commission_pct<span class="token punctuation">`</span> <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span><span class="token comment">#案例2：查询城市名中第二个字符为o的部门名和城市名</span><span class="token keyword">SELECT</span> department_name<span class="token punctuation">,</span>city<span class="token keyword">FROM</span> departments d<span class="token punctuation">,</span>locations l<span class="token keyword">WHERE</span> d<span class="token punctuation">.</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span> <span class="token operator">=</span> l<span class="token punctuation">.</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span><span class="token operator">AND</span> city <span class="token operator">LIKE</span> <span class="token string">'_o%'</span><span class="token punctuation">;</span><span class="token comment">#5、可以加分组</span><span class="token comment">#案例1：查询每个城市的部门个数</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> 个数<span class="token punctuation">,</span>city<span class="token keyword">FROM</span> departments d<span class="token punctuation">,</span>locations l<span class="token keyword">WHERE</span> d<span class="token punctuation">.</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span><span class="token operator">=</span>l<span class="token punctuation">.</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> city<span class="token punctuation">;</span><span class="token comment">#案例2：查询有奖金的每个部门的部门名和部门的领导编号和该部门的最低工资</span><span class="token keyword">SELECT</span> department_name<span class="token punctuation">,</span>d<span class="token punctuation">.</span><span class="token punctuation">`</span>manager_id<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token keyword">FROM</span> departments d<span class="token punctuation">,</span>employees e<span class="token keyword">WHERE</span> d<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token operator">AND</span> commission_pct <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> department_name<span class="token punctuation">,</span>d<span class="token punctuation">.</span><span class="token punctuation">`</span>manager_id<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token comment">#6、可以加排序</span><span class="token comment">#案例：查询每个工种的工种名和员工的个数，并且按员工个数降序</span><span class="token keyword">SELECT</span> job_title<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token keyword">FROM</span> employees e<span class="token punctuation">,</span>jobs j<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span><span class="token punctuation">`</span>job_id<span class="token punctuation">`</span><span class="token operator">=</span>j<span class="token punctuation">.</span><span class="token punctuation">`</span>job_id<span class="token punctuation">`</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> job_title<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">DESC</span><span class="token punctuation">;</span><span class="token comment">#7、可以实现三表连接？</span><span class="token comment">#案例：查询员工名、部门名和所在的城市</span><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>department_name<span class="token punctuation">,</span>city<span class="token keyword">FROM</span> employees e<span class="token punctuation">,</span>departments d<span class="token punctuation">,</span>locations l<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token operator">=</span>d<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token operator">AND</span> d<span class="token punctuation">.</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span><span class="token operator">=</span>l<span class="token punctuation">.</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span><span class="token operator">AND</span> city <span class="token operator">LIKE</span> <span class="token string">'s%'</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> department_name <span class="token keyword">DESC</span><span class="token punctuation">;</span><span class="token comment">#二）非等值连接</span><span class="token comment">#案例1：查询员工的工资和工资级别</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span>grade_level<span class="token keyword">FROM</span> employees e<span class="token punctuation">,</span>job_grades g<span class="token keyword">WHERE</span> salary <span class="token operator">BETWEEN</span> g<span class="token punctuation">.</span><span class="token punctuation">`</span>lowest_sal<span class="token punctuation">`</span> <span class="token operator">AND</span> g<span class="token punctuation">.</span><span class="token punctuation">`</span>highest_sal<span class="token punctuation">`</span><span class="token operator">AND</span> g<span class="token punctuation">.</span><span class="token punctuation">`</span>grade_level<span class="token punctuation">`</span><span class="token operator">=</span><span class="token string">'A'</span><span class="token punctuation">;</span><span class="token comment">#三）自连接</span><span class="token comment">#案例：查询 员工名和上级的名称</span><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>employee_id<span class="token punctuation">,</span>e<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span>m<span class="token punctuation">.</span>employee_id<span class="token punctuation">,</span>m<span class="token punctuation">.</span>last_name<span class="token keyword">FROM</span> employees e<span class="token punctuation">,</span>employees m<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span><span class="token punctuation">`</span>manager_id<span class="token punctuation">`</span><span class="token operator">=</span>m<span class="token punctuation">.</span><span class="token punctuation">`</span>employee_id<span class="token punctuation">`</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-6-2-SQL-99标准"><a href="#5-6-2-SQL-99标准" class="headerlink" title="5.6.2 SQL 99标准"></a>5.6.2 SQL 99标准</h4><ul><li>语法：</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> 查询列表<span class="token keyword">FROM</span> 表名<span class="token number">1</span> 别名【连接类型】 <span class="token keyword">JOIN</span>  表名<span class="token number">2</span> 别名<span class="token keyword">ON</span> 连接条件<span class="token keyword">WHERE</span> 筛选条件<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> 分组列表<span class="token keyword">HAVING</span> 分组后筛选<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> 排序列表<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>连接类型：</li></ul><div class="post-note note-danger"><p>内连接：inner（可省略）</p><p>外连接 </p><p>左外：left 【outer】</p><p>右外：right 【outer】</p><p>全外：full 【outer】</p><p>交叉连接： cross</p></div><ul><li><p>SQL 92和SQL 99的区别：</p><p><code>SQL99，使用JOIN关键字代替了之前的逗号，并且将连接条件和筛选条件进行了分离，提高阅读性！！！</code></p></li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#------------------------SQL99语法----------------------</span><span class="token comment">#一、内连接</span><span class="token comment">/*分类：等值连接非等值连接自连接特点：①添加排序、分组筛选②inner可以省略③筛选条件放在where后面，连接条件放在on，提高分离性，便于阅读④inner join连接和sql92语法中的等值连接效果是一样的。都是查询多表的交集*/</span><span class="token comment">#一）等值连接</span><span class="token comment">#①简单连接</span><span class="token comment">#案例：查询员工名和部门名</span><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>department_name<span class="token keyword">FROM</span> departments d <span class="token keyword">JOIN</span> employees e <span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span>d<span class="token punctuation">.</span>department_id<span class="token punctuation">;</span><span class="token comment">#②添加筛选条件</span><span class="token comment">#案例1：查询部门编号>100的部门名和所在的城市名</span><span class="token keyword">SELECT</span> department_name<span class="token punctuation">,</span>city<span class="token keyword">FROM</span> departments d<span class="token keyword">JOIN</span> locations l<span class="token keyword">ON</span> d<span class="token punctuation">.</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span> <span class="token operator">=</span> l<span class="token punctuation">.</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span><span class="token keyword">WHERE</span> d<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token operator">></span><span class="token number">100</span><span class="token punctuation">;</span><span class="token comment">#③添加分组+筛选</span><span class="token comment">#案例1：查询每个城市的部门个数</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> 部门个数<span class="token punctuation">,</span>l<span class="token punctuation">.</span><span class="token punctuation">`</span>city<span class="token punctuation">`</span><span class="token keyword">FROM</span> departments d<span class="token keyword">JOIN</span> locations l<span class="token keyword">ON</span> d<span class="token punctuation">.</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span><span class="token operator">=</span>l<span class="token punctuation">.</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> l<span class="token punctuation">.</span><span class="token punctuation">`</span>city<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token comment">#④添加分组+筛选+排序</span><span class="token comment">#案例1：查询部门中员工个数>10的部门名，并按员工个数降序</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> 员工个数<span class="token punctuation">,</span>d<span class="token punctuation">.</span>department_name<span class="token keyword">FROM</span> employees e<span class="token keyword">JOIN</span> departments d<span class="token keyword">ON</span> e<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token operator">=</span>d<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> d<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token keyword">HAVING</span> 员工个数<span class="token operator">></span><span class="token number">10</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> 员工个数 <span class="token keyword">DESC</span><span class="token punctuation">;</span><span class="token comment">#二）非等值连接</span><span class="token comment">#案例：查询部门编号在10-90之间的员工的工资级别，并按级别进行分组</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> 个数<span class="token punctuation">,</span>grade<span class="token keyword">FROM</span> employees e<span class="token keyword">JOIN</span> sal_grade g<span class="token keyword">ON</span> e<span class="token punctuation">.</span><span class="token punctuation">`</span>salary<span class="token punctuation">`</span> <span class="token operator">BETWEEN</span> g<span class="token punctuation">.</span><span class="token punctuation">`</span>min_salary<span class="token punctuation">`</span> <span class="token operator">AND</span> g<span class="token punctuation">.</span><span class="token punctuation">`</span>max_salary<span class="token punctuation">`</span><span class="token keyword">WHERE</span> e<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span> <span class="token operator">BETWEEN</span> <span class="token number">10</span> <span class="token operator">AND</span> <span class="token number">90</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> g<span class="token punctuation">.</span>grade<span class="token punctuation">;</span><span class="token comment">#三）自连接</span><span class="token comment">#案例：查询员工名和对应的领导名</span><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span><span class="token punctuation">`</span>last_name<span class="token punctuation">`</span><span class="token punctuation">,</span>m<span class="token punctuation">.</span><span class="token punctuation">`</span>last_name<span class="token punctuation">`</span><span class="token keyword">FROM</span> employees e<span class="token keyword">JOIN</span> employees m<span class="token keyword">ON</span> e<span class="token punctuation">.</span><span class="token punctuation">`</span>manager_id<span class="token punctuation">`</span><span class="token operator">=</span>m<span class="token punctuation">.</span><span class="token punctuation">`</span>employee_id<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token comment">#二、外连接</span><span class="token comment">/*应用场景：用于查询一个表中，另一个表中没有的记录特点：1、外连接的查询结果为主表的所有记录如果从表中有和它匹配的，则显示匹配的值如果从表中没有和它匹配的，则显示为null外连接查询结果=内连接结果+主表中有而从表没有的记录2、左外连接，left join左边的是主表   右外连接，right join右边的是主表3、左外和右外交换两个表的顺序，可以实现同样的效果4、全外连接=内连接的结果+表1中有但表2中没有的+表2中有的但表1中没有的 */</span><span class="token comment">#案例1、查询编号>3 的女神的男朋友信息，如果有则列出详细，如果没有，用 null 填充</span><span class="token keyword">SELECT</span> b<span class="token punctuation">.</span>id<span class="token punctuation">,</span>b<span class="token punctuation">.</span>name<span class="token punctuation">,</span>bo<span class="token punctuation">.</span><span class="token operator">*</span><span class="token keyword">FROM</span> beauty b<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> boys bo <span class="token keyword">ON</span> b<span class="token punctuation">.</span>boyfriend_id <span class="token operator">=</span> bo<span class="token punctuation">.</span>id<span class="token keyword">WHERE</span> b<span class="token punctuation">.</span>id<span class="token operator">></span><span class="token number">3</span><span class="token punctuation">;</span><span class="token comment">#案例2、查询哪个城市没有部门</span><span class="token keyword">SELECT</span> l<span class="token punctuation">.</span>city<span class="token keyword">FROM</span> departments d<span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> locations l <span class="token keyword">ON</span> l<span class="token punctuation">.</span>location_id <span class="token operator">=</span> d<span class="token punctuation">.</span>location_id<span class="token keyword">WHERE</span> d<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span> <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;5-5-分组查询&quot;&gt;&lt;a href=&quot;#5-5-分组查询&quot; class=&quot;headerlink&quot; title=&quot;5.5 分组查询&quot;&gt;&lt;/a&gt;5.5 分组查询&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;语法：&lt;/p&gt;
&lt;pre class=&quot;line-numbers lang</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://hxf233333.gitee.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="MySQL" scheme="https://hxf233333.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习笔记-day3</title>
    <link href="https://hxf233333.gitee.io/2021/02/26/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day3/"/>
    <id>https://hxf233333.gitee.io/2021/02/26/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day3/</id>
    <published>2021-02-26T11:42:30.000Z</published>
    <updated>2021-02-26T12:04:47.028Z</updated>
    
    <content type="html"><![CDATA[<h3 id="5-4-常见函数"><a href="#5-4-常见函数" class="headerlink" title="5.4 常见函数"></a>5.4 常见函数</h3><ul><li><p>概念：类似于c++的方法，将一组逻辑语句封装在方法体中，对外暴露方法名</p></li><li><p>好处：1.隐藏了实现细节 2.提高代码的重用性</p></li><li><p>调用：<code>select  函数名（实参列表） 【from表】</code>;</p></li><li><p>特点：</p><p>​    ①叫什么（函数名）</p><p>​    ②干什么（函数功能）</p></li><li><p>分类：</p><p>​    1、单行函数</p><p>​    如 <code>concat</code>、<code>length</code>、<code>ifnull</code>等    </p><p>​    2、分组函数</p><p>​    功能：做统计使用，又称为统计函数、聚合函数、组函数</p></li></ul><h4 id="5-4-1-单行函数"><a href="#5-4-1-单行函数" class="headerlink" title="5.4.1 单行函数"></a>5.4.1 单行函数</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#一、字符函数</span><span class="token comment">#1.length 获取参数值的字节个数</span><span class="token keyword">SELECT</span> LENGTH<span class="token punctuation">(</span><span class="token string">'john'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> LENGTH<span class="token punctuation">(</span><span class="token string">'张三丰hahaha'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">#utf8:汉字占3个字节</span><span class="token keyword">SHOW</span> VARIABLES <span class="token operator">LIKE</span> <span class="token string">'%char%'</span><span class="token punctuation">;</span><span class="token comment">#2.concat 拼接字符串</span><span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span>last_name<span class="token punctuation">,</span><span class="token string">'_'</span><span class="token punctuation">,</span>first_name<span class="token punctuation">)</span> 姓名 <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#3.upper、lower</span><span class="token keyword">SELECT</span> UPPER<span class="token punctuation">(</span><span class="token string">'john'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> LOWER<span class="token punctuation">(</span><span class="token string">'joHn'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#示例：将姓变大，名变小写，然后拼接</span><span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span>UPPER<span class="token punctuation">(</span>last_name<span class="token punctuation">)</span><span class="token punctuation">,</span>LOWER<span class="token punctuation">(</span>first_name<span class="token punctuation">)</span><span class="token punctuation">)</span> 姓名 <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#4.substr、substring</span><span class="token comment">/*注意：起始索引从1开始！！！substr(str,起始索引，截取的字符长度)substr(str,起始索引)*/</span><span class="token comment">#截取从指定索引处后面所有字符</span><span class="token keyword">SELECT</span> SUBSTR<span class="token punctuation">(</span><span class="token string">'张三丰爱上了郭襄'</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span> out_put<span class="token punctuation">;</span><span class="token comment">#截取从指定索引处指定字符串长度的字符</span><span class="token keyword">SELECT</span> SUBSTR<span class="token punctuation">(</span><span class="token string">'张三丰爱上了郭襄'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span> out_put<span class="token punctuation">;</span><span class="token comment">#案例：姓名中首字符大写，其他字符小写然后用_拼接，显示出来</span><span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span>UPPER<span class="token punctuation">(</span>SUBSTR<span class="token punctuation">(</span>last_name<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'_'</span><span class="token punctuation">,</span>LOWER<span class="token punctuation">(</span>SUBSTR<span class="token punctuation">(</span>last_name<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">AS</span> out_put<span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#5.instr 返回子串第一次出现的索引，如果找不到返回0</span><span class="token keyword">SELECT</span> INSTR<span class="token punctuation">(</span><span class="token string">'三打白骨精aaa白骨精bb白骨精'</span><span class="token punctuation">,</span><span class="token string">'白骨精'</span><span class="token punctuation">)</span> out_put<span class="token punctuation">;</span><span class="token comment">#6.trim 去前后指定的字符，默认是去空格</span><span class="token keyword">SELECT</span> TRIM<span class="token punctuation">(</span><span class="token string">' 虚  竹    '</span><span class="token punctuation">)</span>  <span class="token keyword">AS</span> a<span class="token punctuation">;</span><span class="token keyword">SELECT</span> TRIM<span class="token punctuation">(</span><span class="token string">'x'</span> <span class="token keyword">FROM</span> <span class="token string">'xxxxxx虚xxx竹xxxxxxxxxxxxxxxxxx'</span><span class="token punctuation">)</span>  <span class="token keyword">AS</span> a<span class="token punctuation">;</span><span class="token comment">#7.lpad/rpad 左填充/右填充</span><span class="token keyword">SELECT</span> LPAD<span class="token punctuation">(</span><span class="token string">'木婉清'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">#左填充10个a</span><span class="token keyword">SELECT</span> RPAD<span class="token punctuation">(</span><span class="token string">'木婉清'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">#右填充10个a</span><span class="token comment">#8.replace(字符,被替换字符,替换字符) 替换</span><span class="token comment">#二、数学函数</span><span class="token comment">#1.abs 绝对值</span><span class="token keyword">SELECT</span> ABS<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2.4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#2.ceil 向上取整  返回>=该参数的最小整数</span><span class="token keyword">SELECT</span> CEIL<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.09</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> CEIL<span class="token punctuation">(</span><span class="token number">0.09</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> CEIL<span class="token punctuation">(</span><span class="token number">1.00</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#3.floor 向下取整，返回&lt;=该参数的最大整数</span><span class="token keyword">SELECT</span> FLOOR<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.09</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> FLOOR<span class="token punctuation">(</span><span class="token number">0.09</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> FLOOR<span class="token punctuation">(</span><span class="token number">1.00</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#4.round 四舍五入</span><span class="token keyword">SELECT</span> <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token number">1.8712345</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token number">1.8712345</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#5.truncate 截断</span><span class="token keyword">SELECT</span> <span class="token keyword">TRUNCATE</span><span class="token punctuation">(</span><span class="token number">1.8712345</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#6.mod 取模</span><span class="token keyword">SELECT</span> <span class="token function">MOD</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#a%b = a-(INT)a/b*b</span><span class="token comment">#-10%3 = -10 - (-10)/3*3   = -1</span><span class="token comment">#三、日期函数</span><span class="token comment">#1.now 返回当前系统日期+时间</span><span class="token keyword">SELECT</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#2.curdate 返回当前系统日期，不包含时间</span><span class="token keyword">SELECT</span> CURDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#3.curtime 返回当前时间，不包含日期</span><span class="token keyword">SELECT</span> CURTIME<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#4.可以获取指定的部分，年、月、日、时、分、秒</span><span class="token keyword">SELECT</span> <span class="token keyword">YEAR</span><span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 年；<span class="token keyword">SELECT</span> <span class="token keyword">YEAR</span><span class="token punctuation">(</span>hiredate<span class="token punctuation">)</span> 年 <span class="token keyword">FROM</span> employees；<span class="token comment">#5.str_to_date 按指定格式解析字符串为日期类型</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> hiredate<span class="token operator">&lt;</span>STR_TO_DATE<span class="token punctuation">(</span><span class="token string">'3/15 1998'</span><span class="token punctuation">,</span><span class="token string">'%m/%d %Y'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#6.date_format 将日期转换成字符</span><span class="token keyword">SELECT</span> DATE_FORMAT<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'%Y年%m月%d日'</span><span class="token punctuation">)</span> 日期<span class="token punctuation">;</span><span class="token comment">#四、其他函数</span><span class="token keyword">SELECT</span> VERSION<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token keyword">USER</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#五、流程控制函数</span><span class="token comment">#1.if函数</span><span class="token keyword">SELECT</span> <span class="token keyword">IF</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token operator">></span><span class="token number">9</span><span class="token punctuation">,</span><span class="token string">'好'</span><span class="token punctuation">,</span><span class="token string">'坏'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#案例：如果有奖金，则显示最终奖金，如果没有，则显示0</span><span class="token keyword">SELECT</span> <span class="token keyword">IF</span><span class="token punctuation">(</span>commission_pct <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>salary<span class="token operator">*</span><span class="token number">12</span><span class="token operator">*</span>commission_pct<span class="token punctuation">)</span> 奖金<span class="token punctuation">,</span>commission_pct<span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#2.case函数</span>①情况<span class="token number">1</span> ：类似于switch语句，可以实现等值判断<span class="token keyword">CASE</span> 表达式<span class="token keyword">WHEN</span> 值<span class="token number">1</span> <span class="token keyword">THEN</span> 结果<span class="token number">1</span><span class="token keyword">WHEN</span> 值<span class="token number">2</span> <span class="token keyword">THEN</span> 结果<span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">ELSE</span> 结果n<span class="token keyword">END</span>案例：部门编号是<span class="token number">30</span>，工资显示为<span class="token number">2</span>倍部门编号是<span class="token number">50</span>，工资显示为<span class="token number">3</span>倍部门编号是<span class="token number">60</span>，工资显示为<span class="token number">4</span>倍否则不变显示 部门编号，旧工资，新工资<span class="token keyword">SELECT</span> department_id<span class="token punctuation">,</span>salary<span class="token punctuation">,</span><span class="token keyword">CASE</span> department_id<span class="token keyword">WHEN</span> <span class="token number">30</span> <span class="token keyword">THEN</span> salary<span class="token operator">*</span><span class="token number">2</span><span class="token keyword">WHEN</span> <span class="token number">50</span> <span class="token keyword">THEN</span> salary<span class="token operator">*</span><span class="token number">3</span><span class="token keyword">WHEN</span> <span class="token number">60</span> <span class="token keyword">THEN</span> salary<span class="token operator">*</span><span class="token number">4</span><span class="token keyword">ELSE</span> salary<span class="token keyword">END</span>  newSalary<span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>②情况<span class="token number">2</span>：类似于多重<span class="token keyword">IF</span>语句，实现区间判断<span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> 条件<span class="token number">1</span> <span class="token keyword">THEN</span> 结果<span class="token number">1</span><span class="token keyword">WHEN</span> 条件<span class="token number">2</span> <span class="token keyword">THEN</span> 结果<span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">ELSE</span> 结果n<span class="token keyword">END</span>案例：如果工资<span class="token operator">></span><span class="token number">20000</span><span class="token punctuation">,</span>显示级别A      工资<span class="token operator">></span><span class="token number">15000</span><span class="token punctuation">,</span>显示级别B      工资<span class="token operator">></span><span class="token number">10000</span><span class="token punctuation">,</span>显示级别C      否则，显示D       <span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> <span class="token keyword">CASE</span>  <span class="token keyword">WHEN</span> salary<span class="token operator">></span><span class="token number">20000</span> <span class="token keyword">THEN</span> <span class="token string">'A'</span> <span class="token keyword">WHEN</span> salary<span class="token operator">></span><span class="token number">15000</span> <span class="token keyword">THEN</span> <span class="token string">'B'</span> <span class="token keyword">WHEN</span> salary<span class="token operator">></span><span class="token number">10000</span> <span class="token keyword">THEN</span> <span class="token string">'C'</span> <span class="token keyword">ELSE</span> <span class="token string">'D'</span> <span class="token keyword">END</span> <span class="token keyword">AS</span>  a <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-4-2-分组函数"><a href="#5-4-2-分组函数" class="headerlink" title="5.4.2 分组函数"></a>5.4.2 分组函数</h4><ul><li><p>说明：分组函数往往用于实现将一组数据进行统计计算，最终得到一个值，又称为聚合函数或统计函数</p></li><li><p>分组函数清单：</p><p>​    <code>sum</code>(字段名)：求和</p><p>​    <code>avg</code>(字段名)：求平均数</p><p>​    <code>max</code>(字段名)：求最大值</p><p>​    <code>min</code>(字段名)：求最小值</p><p>​    <code>count</code>(字段名)：计算非空字段值的个数</p></li><li><p>特点：</p><p>​    1、<code>sum</code>、<code>avg</code>一般用于处理数值型，<code>max</code>、<code>min</code>、<code>count</code>可以处理任何类型</p><p>​    2、以为分组函数都忽略null值</p><p>​    3、可以和<code>distinct</code>搭配实现去重的运算</p><p>​    4、一般使用<code>count(*)</code>用作统计函数</p><p>​    5、和分组函数一同查询的字段要求是<code>group by</code>后的字段    </p></li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#案例1 ：查询员工信息表中，所有员工的工资和、工资平均值、最低工资、最高工资、有工资的个数</span><span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#案例2：添加筛选条件</span><span class="token comment">#①查询emp表中记录数：</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>employee_id<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#②查询emp表中有佣金的人数：</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#③查询emp表中月薪大于2500的人数：</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> salary<span class="token operator">></span><span class="token number">2500</span><span class="token punctuation">;</span><span class="token comment">#④查询有领导的人数：</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>manager_id<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#count的补充介绍★ </span><span class="token comment">#1、统计结果集的行数，推荐使用count(*)</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> department_id <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> department_id <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span><span class="token comment">#2、搭配distinct实现去重的统计</span><span class="token comment">#案例：查询有员工的部门个数</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token keyword">DISTINCT</span> department_id<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#思考：每个部门的总工资、平均工资？</span><span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span>  <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> department_id <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span>  <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> department_id <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token punctuation">,</span>department_id<span class="token keyword">FROM</span> employees<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> department_id<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;5-4-常见函数&quot;&gt;&lt;a href=&quot;#5-4-常见函数&quot; class=&quot;headerlink&quot; title=&quot;5.4 常见函数&quot;&gt;&lt;/a&gt;5.4 常见函数&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;概念：类似于c++的方法，将一组逻辑语句封装在方法体中，对外暴露方法名&lt;/</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://hxf233333.gitee.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="MySQL" scheme="https://hxf233333.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习笔记_day2</title>
    <link href="https://hxf233333.gitee.io/2021/02/25/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day2/"/>
    <id>https://hxf233333.gitee.io/2021/02/25/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day2/</id>
    <published>2021-02-25T08:58:41.000Z</published>
    <updated>2021-02-25T09:01:14.873Z</updated>
    
    <content type="html"><![CDATA[<h3 id="5-2-条件查询"><a href="#5-2-条件查询" class="headerlink" title="5.2 条件查询"></a>5.2 条件查询</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#进阶2：条件查询</span><span class="token comment">/* 语法：select 查询列表from表名where筛选条件分类：一、按条件表达式筛选条件运算符：> &lt; = != &lt;> >= &lt;=二、按逻辑表达式筛选逻辑运算符：&amp;&amp; || ！and or not三、模糊查询likebetween andinis null|is not null*/</span><span class="token comment">#一、按条件表达式筛选</span><span class="token comment">#案例1：查询工资>12000的员工信息</span><span class="token keyword">SELECT</span><span class="token operator">*</span><span class="token keyword">FROM</span>employees<span class="token keyword">WHERE</span>salary<span class="token operator">></span><span class="token number">12000</span><span class="token punctuation">;</span><span class="token comment">#案列2：查询部门编号不等于90号的员工名和部门编号</span><span class="token keyword">SELECT</span>last_name<span class="token punctuation">,</span>department_id<span class="token punctuation">,</span><span class="token keyword">FROM</span>employees<span class="token keyword">WHERE</span>department_id<span class="token operator">&lt;></span><span class="token number">90</span><span class="token punctuation">;</span><span class="token comment">#二、按逻辑表达式筛选</span><span class="token comment">#案例1：查询工资在10000到20000之间的员工名、工资以及奖金</span><span class="token keyword">SELECT</span>last_name<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>commission_pct<span class="token keyword">FROM</span>employees<span class="token keyword">WHERE</span>salary<span class="token operator">>=</span><span class="token number">10000</span> <span class="token operator">AND</span> salary<span class="token operator">&lt;=</span><span class="token number">20000</span><span class="token punctuation">;</span><span class="token comment">#案例2：查询部门编号不是在90到110之间，或者工资高于15000的员工信息</span><span class="token keyword">SELECT</span><span class="token operator">*</span><span class="token keyword">FROM</span>employees<span class="token keyword">WHERE</span><span class="token operator">NOT</span><span class="token punctuation">(</span>department_id<span class="token operator">&lt;</span><span class="token number">90</span> <span class="token operator">AND</span> department_id<span class="token operator">></span><span class="token number">110</span><span class="token punctuation">)</span> <span class="token operator">OR</span> salary<span class="token operator">></span><span class="token number">15000</span><span class="token punctuation">;</span><span class="token comment">#三、模糊查询</span><span class="token comment">/* likebetween andinis null|is not null*/</span><span class="token comment">#1.like</span><span class="token comment">/*特点：①一般和通配符搭配使用通配符：% 任意多个字符，包含0个字符_ 任意单个字符*/</span><span class="token comment">#案例1：查询员工中包含字符a的员工信息</span><span class="token keyword">SELECT</span><span class="token operator">*</span><span class="token keyword">FROM</span>employees<span class="token keyword">WHERE</span>last_name <span class="token operator">LIKE</span> <span class="token string">'%a%'</span><span class="token punctuation">;</span>  <span class="token comment">#abc</span><span class="token comment">#案例2：查询员工名中第三个字符为n，第五个字符为l的员工名和工资</span><span class="token keyword">SELECT</span>last_name<span class="token punctuation">,</span>salary<span class="token keyword">FROM</span>employees<span class="token keyword">WHERE</span>last_name <span class="token operator">LIKE</span> <span class="token string">'__n_l%'</span><span class="token punctuation">;</span><span class="token comment">#案例3：查询姓名中包含第二个字符为_的员工信息</span><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> last_name <span class="token operator">LIKE</span> <span class="token string">'_\_%'</span><span class="token punctuation">;</span> <span class="token comment">#转义\</span><span class="token comment">#--------------------------------------------</span><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> last_name <span class="token operator">LIKE</span> <span class="token string">'_$_%'</span> <span class="token keyword">ESCAPE</span> <span class="token string">'$'</span><span class="token punctuation">;</span> <span class="token comment">#自定义转义escape</span><span class="token comment">#2.between and/not between and</span><span class="token comment">/*①使用between and 可以提高语句的②包含临界值，不要调换顺序*/</span><span class="token comment">#案例：查询员工编号在100到120之间的员工信息</span><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span>employees<span class="token keyword">WHERE</span> employees_id <span class="token operator">BETWEEN</span> <span class="token number">100</span> <span class="token operator">AND</span> <span class="token number">120</span><span class="token punctuation">;</span><span class="token comment">#3.in</span><span class="token comment">/*功能：查询某字段的值是否属于指定的列表之内特点：①使用in提高语句简洁度②in列表的值类型必须统一*/</span><span class="token comment">#案例1：查询部门编号是30/50/90的员工名、部门编号</span><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>department_id<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> department_id <span class="token operator">IN</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#-----------------------------------</span><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>department_id<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> department_id<span class="token operator">=</span><span class="token number">30</span> <span class="token operator">OR</span> department_id<span class="token operator">=</span><span class="token number">50</span> <span class="token operator">OR</span> department_id<span class="token operator">=</span><span class="token number">90</span><span class="token punctuation">;</span><span class="token comment">#案例2：查询工种编号不是SH_CLERK或IT_PROG的员工信息</span><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> job_id <span class="token operator">NOT</span> <span class="token operator">IN</span><span class="token punctuation">(</span><span class="token string">'SH_CLERK'</span><span class="token punctuation">,</span><span class="token string">'IT_PROG'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#--------------------------------------</span><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> <span class="token operator">NOT</span><span class="token punctuation">(</span>job_id <span class="token operator">=</span><span class="token string">'SH_CLERK'</span> <span class="token operator">OR</span> job_id <span class="token operator">=</span> <span class="token string">'IT_PROG'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#4、is null/is not null</span><span class="token comment">#案例1：查询没有奖金的员工信息</span><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> commission_pct <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span><span class="token comment">#案例2：查询有奖金的员工信息</span><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> commission_pct <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span><span class="token comment">#----------------对比------------------------------------</span><span class="token operator">=</span>只能判断普通的内容<span class="token operator">IS</span>  <span class="token boolean">NULL</span>        只能判断<span class="token boolean">NULL</span>值<span class="token operator">&lt;=></span>             安全等于，既能判断普通内容，又能判断<span class="token boolean">NULL</span>值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-3-排序查询"><a href="#5-3-排序查询" class="headerlink" title="5. 3 排序查询"></a>5. 3 排序查询</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#进阶3：排序查询</span><span class="token comment">/*语法：select 查询列表from 表名【where 筛选条件】order by 排序列表【asc|desc】执行顺序：①from 子句②where 子句③select 子句④order by 子句特点：1、asc代表的升序，desc代表的是降序，如果不写默认升序2、order by子句中可以支持单个字段、多个字段、表达式、函数、别名3、order by子句一般是放在查询语句的最后面，limit子句除外*/</span><span class="token comment">#案例1：查询员工信息，要求工资冲高到底排序</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> salary <span class="token keyword">DESC</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> salary<span class="token punctuation">;</span><span class="token comment">#案例2：查询部门编号>=90的员工信息，按入职时间的先后进行排序【添加筛选条件】</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> department_id<span class="token operator">>=</span><span class="token number">90</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> hiredate <span class="token keyword">ASC</span><span class="token punctuation">;</span><span class="token comment">#案例3：按年薪的高低显示员工的信息和年薪【按表达式排序】</span><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token punctuation">,</span>salary<span class="token operator">*</span><span class="token number">12</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>IFNULL<span class="token punctuation">(</span>commission_pct<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 年薪<span class="token keyword">FROM</span> employees<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> salary<span class="token operator">*</span><span class="token number">12</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>IFNULL<span class="token punctuation">(</span>commission_pct<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">DESC</span><span class="token punctuation">;</span><span class="token comment">#案例4：按年薪的高低显示员工的信息和年薪【按别名排序】</span><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token punctuation">,</span>salary<span class="token operator">*</span><span class="token number">12</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>IFNULL<span class="token punctuation">(</span>commission_pct<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 年薪<span class="token keyword">FROM</span> employees<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> 年薪 <span class="token keyword">DESC</span><span class="token punctuation">;</span><span class="token comment">#案例5：按姓名的长度显示员工的姓名和工资【按函数】</span><span class="token keyword">SELECT</span> LENGTH<span class="token punctuation">(</span>last_name<span class="token punctuation">)</span> 字节长度<span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>salary<span class="token keyword">FROM</span> employees<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> LENGTH<span class="token punctuation">(</span>last_name<span class="token punctuation">)</span> <span class="token keyword">DESC</span><span class="token punctuation">;</span><span class="token comment">#案例6：查询员工信息，要求先按工资升序，再按员工编号降序【按多个字段排序】</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> salary <span class="token keyword">ASC</span><span class="token punctuation">,</span>employees_id <span class="token keyword">DESC</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;5-2-条件查询&quot;&gt;&lt;a href=&quot;#5-2-条件查询&quot; class=&quot;headerlink&quot; title=&quot;5.2 条件查询&quot;&gt;&lt;/a&gt;5.2 条件查询&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-sql&quot; data-langu</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://hxf233333.gitee.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="MySQL" scheme="https://hxf233333.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习笔记_day1</title>
    <link href="https://hxf233333.gitee.io/2021/02/24/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day1/"/>
    <id>https://hxf233333.gitee.io/2021/02/24/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day1/</id>
    <published>2021-02-24T10:06:32.000Z</published>
    <updated>2021-02-25T09:01:38.873Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-数据库的好处"><a href="#1-数据库的好处" class="headerlink" title="1 数据库的好处"></a>1 数据库的好处</h2><div class="post-note note-warning"><p>1、持久化数据到本地<br>2、可以实现结构化查询，方便管理</p></div><h2 id="2-数据库相关概念"><a href="#2-数据库相关概念" class="headerlink" title="2 数据库相关概念"></a>2 数据库相关概念</h2><div class="post-note note-warning"><p>1、DB：数据库，保存一组有组织的数据容器<br>2、DBMS：数据库管理系统，又称为数据库软件（产品），用于管理DB中的数据<br>3、SQL：结构化查询语言，用于和DBMS通信的语言</p></div><h2 id="3-数据库存储数据的特点"><a href="#3-数据库存储数据的特点" class="headerlink" title="3 数据库存储数据的特点"></a>3 数据库存储数据的特点</h2><div class="post-note note-warning"><p>1、将数据放到表中，表再放到库中<br>2、一个数据库中可以有多个表，每个表都有一个名字，用来标识自己，表名具有唯一性<br>3、表具有一些，这些特性定义了数据在表中如何存储，类似“类”的设计<br>4、表由列组成，我们也称为字段，所有表都是由一个或者多个列组成的，每一列类似于“类”中的属性</p></div><h2 id="4-MySQL的安装和介绍"><a href="#4-MySQL的安装和介绍" class="headerlink" title="4 MySQL的安装和介绍"></a>4 MySQL的安装和介绍</h2><h3 id="4-1-MySQL的安装"><a href="#4-1-MySQL的安装" class="headerlink" title="4.1 MySQL的安装"></a>4.1 MySQL的安装</h3><p>原文安装教程：<a href="https://hxf233333.github.io/2021/02/21/%E5%AE%89%E8%A3%85MySQL/">安装MySQL</a></p><h3 id="4-2-MySQL服务的启动和停止"><a href="#4-2-MySQL服务的启动和停止" class="headerlink" title="4.2 MySQL服务的启动和停止"></a>4.2 MySQL服务的启动和停止</h3><div class="post-note note-warning"><p>方式一：计算机-&gt;右击管理-&gt;服务<br>方式二：通过管理员身份运行<br>        <code>net start mysql</code> （启动mysql服务）<br>        <code>net stop mysql</code>（停止mysql服务）</p></div><h3 id="4-3-MySQL服务的登录和退出"><a href="#4-3-MySQL服务的登录和退出" class="headerlink" title="4.3 MySQL服务的登录和退出"></a>4.3 MySQL服务的登录和退出</h3><div class="post-note note-warning"><p>方式一：通过mysql自带的客户端（只限于root用户）</p><p>方式二：通过windows自带的DOS命令<br>        登录：<code>mysql 【-h主机名 -P端口号】 -u用户名 -p密码</code><br>        退出：<code>exit; 或 Ctrl + C</code></p></div><h3 id="4-4-MySQL的常见命令"><a href="#4-4-MySQL的常见命令" class="headerlink" title="4.4 MySQL的常见命令"></a>4.4 MySQL的常见命令</h3><div class="post-note note-warning"><p>1、查看当前所有的数据库</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">show databases；<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2、打开指定的库</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">use 库名；<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3、查看当前库的所有表</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">show tables；<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4、查看其他库的所有表</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">show tables from 库名；<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>5、创建表</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create table 表名(列名 列类型，列名 列类型...)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>6、查看表结构</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">desc 表名；<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>7、查看服务器的版本<br>方式一：登录到mysql服务端</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">select version()；<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>方式二：没有登录到mysql服务端<br><code>mysql  --version 或者 mysql --V</code></p></div><h3 id="4-5-MySQL的语法规范"><a href="#4-5-MySQL的语法规范" class="headerlink" title="4.5 MySQL的语法规范"></a>4.5 MySQL的语法规范</h3><div class="post-note note-warning"><p>1、不区分大小写，但建议关键字大写，表名、列名小写<br>2、每条命令最好用分号结尾<br>3、每条命令根据需要，可以进行缩进或者换行<br>4、注释<br>    单行注释：#注释文字<br>    单行注释：– 注释文字<br>    多行注释：/*  注释文字   */</p></div><h2 id="5-DQL语言"><a href="#5-DQL语言" class="headerlink" title="5 DQL语言"></a>5 DQL语言</h2><p>DQL:Data Query Language  数据查询语言</p><h3 id="5-1-基础查询"><a href="#5-1-基础查询" class="headerlink" title="5.1 基础查询"></a>5.1 基础查询</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#进阶1:基础查询</span><span class="token comment">/*语法：select 查询列表 from 表名；特点：1、查询列表可以是：表中的字段、常量值、表达式、函数2、查询的结果是一个虚拟的表格*/</span><span class="token comment">#选择使用的库</span><span class="token keyword">USE</span> myemployees<span class="token punctuation">;</span><span class="token comment">#1.查询表中的单个字段</span><span class="token keyword">SELECT</span> last_name <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#2.查询表中的多个字段</span><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>email <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#3.查询表中的所有字段</span><span class="token keyword">SELECT</span> <span class="token punctuation">`</span>employee_id<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>first_name<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>last_name<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>email<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>phone_number<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>job_id<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>salary<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>commission_pct<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>manager_id<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>hiredate<span class="token punctuation">`</span><span class="token keyword">FROM</span>employees<span class="token punctuation">;</span> <span class="token comment">#方式一，依次枚举，''为着重号用于区分关键字</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span> <span class="token comment">#方式二，使用通配符</span><span class="token comment">#4.查询常量值</span><span class="token keyword">SELECT</span> <span class="token number">100</span>；<span class="token keyword">SELECT</span> <span class="token string">'john'</span><span class="token punctuation">;</span><span class="token comment">#5.查询表达式</span><span class="token keyword">SELECT</span> <span class="token number">100</span><span class="token operator">%</span><span class="token number">98</span><span class="token punctuation">;</span><span class="token comment">#6.查询函数</span><span class="token keyword">SELECT</span> VERSION<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#7.起别名</span><span class="token comment">/*①便于理解②如果要查询的字段有重名的情况，使用别名区分*/</span><span class="token comment">#方式一：使用AS</span><span class="token keyword">SELECT</span> last_name <span class="token keyword">AS</span> 姓<span class="token punctuation">,</span>first_name <span class="token keyword">AS</span> 名 <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#方式二：使用空格</span><span class="token keyword">SELECT</span> last_name 姓<span class="token punctuation">,</span>first_name 名 <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#案例：查询salary，显示结果为out put</span><span class="token keyword">SELECT</span> salary <span class="token keyword">AS</span> <span class="token string">"out put"</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#8.去重</span><span class="token comment">#案例 ：查询员工表中涉及到的所有部门编号</span><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> department_id <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#9.+号的作用</span><span class="token comment">/* mysql中的+号只有运算符的功能select 100+100; 两个操作数都为整型，则做加法运算select '123'+90; 只要其中一方为字符型，试图将字符型数值转换成数值型  如果转转成功，则继续做加法运算select 'john'+90; 如果转换失败，则将字符型数值转换成0select null+10；  只要其中一方为null，则结果肯定为null*/</span><span class="token comment">#案例：查询员工名和姓连接成一个字段，并显示为 姓名</span><span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> 结果<span class="token punctuation">;</span><span class="token keyword">SELECT</span>CONCAT<span class="token punctuation">(</span>last_name<span class="token punctuation">,</span><span class="token string">' '</span><span class="token punctuation">,</span>first_name<span class="token punctuation">)</span> <span class="token keyword">AS</span> 姓名<span class="token keyword">FROM</span>employees<span class="token punctuation">;</span><span class="token comment">#10.补充函数</span><span class="token keyword">SElECT</span> IFNULL<span class="token punctuation">(</span>字段名<span class="token punctuation">,</span>表达式<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-数据库的好处&quot;&gt;&lt;a href=&quot;#1-数据库的好处&quot; class=&quot;headerlink&quot; title=&quot;1 数据库的好处&quot;&gt;&lt;/a&gt;1 数据库的好处&lt;/h2&gt;&lt;div class=&quot;post-note note-warning&quot;&gt;&lt;p&gt;1、持久化数据到本地</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://hxf233333.gitee.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="MySQL" scheme="https://hxf233333.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>安装MySQL</title>
    <link href="https://hxf233333.gitee.io/2021/02/21/%E5%AE%89%E8%A3%85MySQL/"/>
    <id>https://hxf233333.gitee.io/2021/02/21/%E5%AE%89%E8%A3%85MySQL/</id>
    <published>2021-02-21T13:56:42.000Z</published>
    <updated>2021-02-28T06:43:59.148Z</updated>
    
    <content type="html"><![CDATA[<h1 id="windows安装MySQL"><a href="#windows安装MySQL" class="headerlink" title="windows安装MySQL"></a>windows安装MySQL</h1><p>安装MySQL普遍采用解压缩包的方式，然后通过命令和配置来安装，这里我在window 10上安装并配置MySQL 5.6。</p><h2 id="1-下载MySQL压缩包"><a href="#1-下载MySQL压缩包" class="headerlink" title="1.下载MySQL压缩包"></a>1.下载MySQL压缩包</h2><p>所有平台的 MySQL 下载地址为：<a href="https://downloads.mysql.com/archives/community/">MySQL 下载</a> 。 挑选你需要的 <code>MySQL Community Server</code> 版本及对应的平台。这里我选择<code>mysql-5.6.26-winx64</code>。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="mysql%E5%AE%89%E8%A3%85%E5%8C%85%E4%B8%8B%E8%BD%BD.png" class="lozad post-image"src="mysql%E5%AE%89%E8%A3%85%E5%8C%85%E4%B8%8B%E8%BD%BD.png"></p><h2 id="2-解压并添加环境变量"><a href="#2-解压并添加环境变量" class="headerlink" title="2.解压并添加环境变量"></a>2.解压并添加环境变量</h2><p>解压下载的压缩包，然后把解压后的文件夹迁到想要安装的目录，如：C:\web 下面，可以重命名为 mysql-5.6.26;</p><p>然后右击 此电脑 -&gt;属性-&gt;高级系统设置-&gt;环境变量，在系统变量里选择PATH，在其后面添加: mysql bin文件夹的路径。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="%E6%B7%BB%E5%8A%A0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png" class="lozad post-image"src="%E6%B7%BB%E5%8A%A0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png"></p><h2 id="3-创建my-ini配置文件"><a href="#3-创建my-ini配置文件" class="headerlink" title="3.创建my.ini配置文件"></a>3.创建my.ini配置文件</h2><p>在C:\web\mysql-5.6.26路径下创建名为my.ini的配置文件，然后编辑该文件修改或添加配置；配置修改说明如下：</p><pre class="line-numbers language-ini" data-language="ini"><code class="language-ini"><span class="token selector">[client]</span><span class="token comment"># 设置mysql客户端默认字符集</span><span class="token constant">default-character-set</span><span class="token attr-value"><span class="token punctuation">=</span>utf8</span> <span class="token selector">[mysqld]</span><span class="token constant">explicit_defaults_for_timestamp</span> <span class="token attr-value"><span class="token punctuation">=</span> true</span><span class="token comment"># 设置3306端口</span><span class="token constant">port</span> <span class="token attr-value"><span class="token punctuation">=</span> 3306</span><span class="token comment"># 设置mysql的安装目录</span><span class="token constant">basedir</span><span class="token attr-value"><span class="token punctuation">=</span>C:\web\mysql-5.6.26</span><span class="token comment"># 设置 mysql数据库的数据的存放目录，MySQL 8+ 不需要以下配置，系统自己生成即可，否则有可能报错</span><span class="token constant">datadir</span><span class="token attr-value"><span class="token punctuation">=</span>C:\web\mysql-5.6.26\data</span><span class="token comment"># 允许最大连接数</span><span class="token constant">max_connections</span><span class="token attr-value"><span class="token punctuation">=</span>20</span><span class="token comment"># 服务端使用的字符集默认为8比特编码的latin1字符集</span><span class="token constant">character-set-server</span><span class="token attr-value"><span class="token punctuation">=</span>utf8</span><span class="token comment"># 创建新表时将使用的默认存储引擎</span><span class="token constant">default-storage-engine</span><span class="token attr-value"><span class="token punctuation">=</span>INNODB</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-安装MySQL"><a href="#4-安装MySQL" class="headerlink" title="4.安装MySQL"></a>4.安装MySQL</h2><p>前面的工作做好后，就可以开始命令行安装了。</p><p>首先以管理员身份运行cmd，通过命令<code>cd c:\web\mysql-5.6.26\bin</code>，进入bin目录；</p><p>然后输入命令<code>mysqld --initialize-insecure --user=mysql</code>初始化；</p><p>最后输入 <code>mysqld instal</code>l 回车开始安装。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="%E5%AE%89%E8%A3%85%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1.png" class="lozad post-image"src="%E5%AE%89%E8%A3%85%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1.png"></p><p>输入 <code>net start mysql</code> 回车，启动mysql服务，</p><p>输入 <code>net stop mysql</code> 回车，停止mysql服务。</p><h2 id="5-本地连接数据库"><a href="#5-本地连接数据库" class="headerlink" title="5.本地连接数据库"></a>5.本地连接数据库</h2><p>在cmd输入 <code>mysql -u root -p</code> ，回车，出现 Enter password:，由于刚安装，没有设置密码，直接回车 Enter 进入；输入 <code>show databases;</code> 命令查看默认安装数据库。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="%E6%9C%AC%E5%9C%B0%E8%BF%9E%E6%8E%A5.png" class="lozad post-image"src="%E6%9C%AC%E5%9C%B0%E8%BF%9E%E6%8E%A5.png"></p><h2 id="6-设置root密码"><a href="#6-设置root密码" class="headerlink" title="6.设置root密码"></a>6.设置root密码</h2><p>依次通过以下命令修改root用户名密码：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">mysql<span class="token operator">></span><span class="token keyword">use</span> mysql<span class="token punctuation">;</span> mysql<span class="token operator">></span><span class="token keyword">update</span> <span class="token keyword">user</span> <span class="token keyword">set</span> password<span class="token operator">=</span>password<span class="token punctuation">(</span><span class="token string">'your password'</span><span class="token punctuation">)</span> <span class="token keyword">where</span> <span class="token keyword">user</span><span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">;</span> mysql<span class="token operator">></span>flush <span class="token keyword">privileges</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>输入 <code>quit</code> 命令退出当前登录，用新的密码重新连接 mysql。</p><h2 id="7-远程连接数据库"><a href="#7-远程连接数据库" class="headerlink" title="7.远程连接数据库"></a>7.远程连接数据库</h2><p>MySQL默认只能本机登录，如果本机使用，就可以不用设置远程登录，使用 localhost 做为主机地址登录；如果想远程登录，通过以下命令，设置允许远程登录：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">mysql<span class="token operator">></span><span class="token keyword">GRANT</span> <span class="token keyword">ALL</span> <span class="token keyword">PRIVILEGES</span> <span class="token keyword">ON</span> <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">TO</span> <span class="token string">'your username'</span><span class="token variable">@'%'</span> IDENTIFIED <span class="token keyword">BY</span> <span class="token string">'your password'</span> <span class="token keyword">WITH</span> <span class="token keyword">GRANT</span> <span class="token keyword">OPTION</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>your username 和 your password 改成 MySQL数据库的用户和密码</p></blockquote><p><code>MySQL 默认3306，确保 3306 端口是可用的，在要远程的电脑上安装一个 MySQL管理工具（如sqlyog），通过 Windows 系统的IP、端口， MySQL的用户名、密码远程连接数据库，管理数据库。</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;windows安装MySQL&quot;&gt;&lt;a href=&quot;#windows安装MySQL&quot; class=&quot;headerlink&quot; title=&quot;windows安装MySQL&quot;&gt;&lt;/a&gt;windows安装MySQL&lt;/h1&gt;&lt;p&gt;安装MySQL普遍采用解压缩包的方式，然后通</summary>
      
    
    
    
    <category term="教程" scheme="https://hxf233333.gitee.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="MySQL" scheme="https://hxf233333.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>linux基本知识图</title>
    <link href="https://hxf233333.gitee.io/2020/12/26/linux%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E5%9B%BE/"/>
    <id>https://hxf233333.gitee.io/2020/12/26/linux%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E5%9B%BE/</id>
    <published>2020-12-26T13:49:51.000Z</published>
    <updated>2021-02-05T06:25:38.905Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux基本知识图谱"><a href="#Linux基本知识图谱" class="headerlink" title="Linux基本知识图谱"></a>Linux基本知识图谱</h1><a id="more"></a><img src = "Linux-base.png">]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Linux基本知识图谱&quot;&gt;&lt;a href=&quot;#Linux基本知识图谱&quot; class=&quot;headerlink&quot; title=&quot;Linux基本知识图谱&quot;&gt;&lt;/a&gt;Linux基本知识图谱&lt;/h1&gt;</summary>
    
    
    
    <category term="思维导图" scheme="https://hxf233333.gitee.io/categories/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
    
    
    <category term="Linux" scheme="https://hxf233333.gitee.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>利用Github Page+Hexo搭建个人博客</title>
    <link href="https://hxf233333.gitee.io/2020/12/26/%E5%88%A9%E7%94%A8Github%20Page+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://hxf233333.gitee.io/2020/12/26/%E5%88%A9%E7%94%A8Github%20Page+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-12-26T13:30:57.000Z</published>
    <updated>2021-02-28T06:43:01.691Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、准备工作"><a href="#1、准备工作" class="headerlink" title="1、准备工作"></a>1、准备工作</h1><h2 id="本地环境"><a href="#本地环境" class="headerlink" title="本地环境"></a>本地环境</h2><p>首先在<strong>Ubuntu 20.4 LTS</strong>系统里部署本地环境，需要安装nodejs和git工具，由于<code>Hexo</code>是基于<code>Node.js</code>的一款博客框架，相比<code>Jekyll</code>框架部署更快更简洁。<code>git</code>是一个分布式版本控制系统，用于项目的版本控制管理。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> nodejs <span class="token comment"># 安装nodejs</span><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">git</span> <span class="token comment"># 安装git</span><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">npm</span> <span class="token comment">#安装npm</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>可在命令行输入相应的检验是否安装成功，如果安装成功会有相应的版本号。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nodejs -v<span class="token function">git</span> --version<span class="token function">npm</span> -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><img src = "1.png" style="zoom:150%;" ><h2 id="本地安装Hexo"><a href="#本地安装Hexo" class="headerlink" title="本地安装Hexo"></a>本地安装Hexo</h2><p>如果以上环境准备好了就可以使用npm命令开始安装Hexo，也可以查看<a href="https://hexo.io/zh-cn/">Hexo</a>官方文档。</p><p>在命令行输入执行以下命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli  <span class="token comment"># 安装Hexo</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> init myBlog  <span class="token comment"># 会在home目录下新建一个myBlog文件夹</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ~/myBlog<span class="token function">sudo</span> <span class="token function">npm</span> <span class="token function">install</span>  <span class="token comment"># 会在myBlog文件夹下创建所需要的文件</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>新建完成后，使用tree命令查看myBlog文件夹的一级目录如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hxf@hxf-virtual-machine:~/myBlog $ tree -L <span class="token number">1</span><span class="token builtin class-name">.</span>├── _config.landscape.yml├── _config.yml   <span class="token comment"># 网站的配置信息，可以在此配置大部分参数</span>├── db.json        ├── node_modules├── package.json├── package-lock.json├── public├── scaffolds   ├── <span class="token builtin class-name">source</span>      <span class="token comment"># 资源文件夹，包含文章Markdown文件</span>└── themes      <span class="token comment"># 主题文件夹</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果以上过程没有报错，运行<code>hexo s</code>命令，在浏览器中输入<a href="http://localhost:4000/">http://localhost:4000</a> 回车即可预览本地效果。</p><h1 id="2、创建github-page"><a href="#2、创建github-page" class="headerlink" title="2、创建github page"></a>2、创建github page</h1><h2 id="创建一个新仓库"><a href="#创建一个新仓库" class="headerlink" title="创建一个新仓库"></a>创建一个新仓库</h2><p>github给用户提供了与用户相同的静态站点，相当于一个二级域名（http://用户名.github.io)，可将同名仓库映射出去。</p><img src = "2.png"><h2 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h2><p>要使用git工具首先要配置SSH key，为部署本地博客到github做准备。</p><p>首先使用git命令全局配置本地账户：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">git</span> config --global user.name <span class="token string">"hxf233333"</span><span class="token function">sudo</span> <span class="token function">git</span> config --global user.email <span class="token string">"1244792997@qq.com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后开始生成SSH key</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> ssh-keygen -t rsa -C <span class="token string">'1244792997@qq.com'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>按提示回车就行，通过<code>cat ~/.ssh/id_rsa.pub</code>可获取到SSH key。</p><p>然后确认并添加主机到本机ssh可信列表：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">ssh</span> -T git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最后将刚刚获取的SSH key添加到github设置SSH keys里。</p><img src = "3.png"><h1 id="3、部署到github"><a href="#3、部署到github" class="headerlink" title="3、部署到github"></a>3、部署到github</h1><p>首先打开本地 myBlog 文件夹下的  <code>_config.yml</code> 配置参数，在末尾填上以下配置（注意冒号后面有一个空格）：</p><img src = "4.png"><p>然后安装一个部署插件<code>hexo-deployer-git</code>：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最后执行以下命令部署上传：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> hexo g -d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在浏览器访问<code>https://用户名.github.io</code>就可以查看博客。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1、准备工作&quot;&gt;&lt;a href=&quot;#1、准备工作&quot; class=&quot;headerlink&quot; title=&quot;1、准备工作&quot;&gt;&lt;/a&gt;1、准备工作&lt;/h1&gt;&lt;h2 id=&quot;本地环境&quot;&gt;&lt;a href=&quot;#本地环境&quot; class=&quot;headerlink&quot; title=&quot;本</summary>
      
    
    
    
    <category term="搭建环境" scheme="https://hxf233333.gitee.io/categories/%E6%90%AD%E5%BB%BA%E7%8E%AF%E5%A2%83/"/>
    
    
    <category term="教程" scheme="https://hxf233333.gitee.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://hxf233333.gitee.io/2020/12/21/hello-world/"/>
    <id>https://hxf233333.gitee.io/2020/12/21/hello-world/</id>
    <published>2020-12-21T13:03:55.643Z</published>
    <updated>2020-12-21T13:03:55.643Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
