<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>无情</title>
  
  
  <link href="https://hxf233333.gitee.io/atom.xml" rel="self"/>
  
  <link href="https://hxf233333.gitee.io/"/>
  <updated>2021-04-13T12:41:32.885Z</updated>
  <id>https://hxf233333.gitee.io/</id>
  
  <author>
    <name>hxf</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git版本控制</title>
    <link href="https://hxf233333.gitee.io/2021/04/04/git%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    <id>https://hxf233333.gitee.io/2021/04/04/git%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/</id>
    <published>2021-04-04T07:20:52.000Z</published>
    <updated>2021-04-13T12:41:32.885Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-git介绍"><a href="#1-git介绍" class="headerlink" title="1 git介绍"></a>1 git介绍</h2><p><code>Git</code> 是一种分布式版本控制系统，它可以不受网络连接的限制，配合github或者gitee，是做项目版本管理和文档版本管理的首选[1]。</p><p><img src="connect.png" alt="图片" srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="connect.png" class="lozad post-image"></p><p><strong>工作区</strong>：就是本地能看到的目录，本地项目文件夹就是一个工作区。</p><p><strong>暂存区</strong>：本地版本库里存了很多东西，其中最重要的就是称为 <code>stage</code>（或者叫index）的暂存区，还有 <code>Git</code> 为我们自动创建的第一个分支 <code>master</code>，以及指向 <code>master</code> 的一个指针叫 <code>HEAD</code>。</p><p><strong>本地版本库</strong>：工作区下有一个隐藏目录 <code>.git</code>，这个属于工作区，是 <code>Git</code> 的版本库。</p><p><strong>远程版本库</strong>：一般指的是 <code>Git</code> 服务器上所对应的仓库，由master用户创建。</p><h2 id="2-创建远程仓库"><a href="#2-创建远程仓库" class="headerlink" title="2 创建远程仓库"></a>2 创建远程仓库</h2><p>创建远程仓库的方式有两种：</p><blockquote><p>1.登录github网页版手动创建，github犯病容易断网</p><p>2.在github上申请Personal access tokens，使用git命令创建远程仓库</p></blockquote><h3 id="2-1-git命令创建远程创库"><a href="#2-1-git命令创建远程创库" class="headerlink" title="2.1 git命令创建远程创库"></a>2.1 git命令创建远程创库</h3><p>1.在<code>github</code>上申请自己的<a href="https://github.com/settings/tokens">api token</a></p><p><img src="image-20210404132936072.png" alt="image-20210404132933036" srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="image-20210404132936072.png" class="lozad post-image"></p><p>2.这个只需配置一次，点击<code>Generate new token</code>，进入权限管理页面，勾选<code>repo</code>，<code>gist</code>，<code>delete_repo</code>三项生成<code>token密钥串</code></p><p>3.本地使用<code>git</code>命令创建远程仓库[3]</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#创建新创库</span><span class="token variable">$curl</span> -u ’用户名:token密钥‘ https://api.github.com/user/repos -d <span class="token string">'&#123; "name": "test","description":"This is a test repository","public":true &#125;'</span> <span class="token comment">#本地关联远程仓库</span><span class="token variable">$git</span> remote <span class="token function">add</span> origin git@github.com:hxf233333/test.git<span class="token comment">#查看远程仓库</span><span class="token variable">$git</span> remote -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4.本地使用<code>git</code>命令删除远程仓库[4]</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> -XDELETE -H <span class="token string">'Authorization: token token密钥串'</span> <span class="token string">"https://api.github.com/repos/用户名/仓库名 "</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-git入门使用"><a href="#3-git入门使用" class="headerlink" title="3 git入门使用"></a>3 git入门使用</h2><h3 id="3-1-本地创建一个新仓库"><a href="#3-1-本地创建一个新仓库" class="headerlink" title="3.1 本地创建一个新仓库"></a>3.1 本地创建一个新仓库</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#创建工作区目录</span><span class="token function">mkdir</span> <span class="token builtin class-name">test</span><span class="token comment">#新建文件</span><span class="token function">touch</span> README.md<span class="token comment">#在当前工作区初始化本地仓库</span><span class="token function">git</span> init<span class="token comment">#将README.md添加到暂存区，如果想添加所有文件可用git add . 命令，这时候可通过git status看到文件当前状态</span><span class="token function">git</span> <span class="token function">add</span> README.md<span class="token comment">#提交文件变动到版本库,通过 -m 参数可直接在命令行里输入提交描述文本，可追加多行</span><span class="token function">git</span> commit -m <span class="token string">"first commit"</span><span class="token comment">#强制修改当前分支为master分支</span><span class="token function">git</span> branch -M master<span class="token comment">#本地关联远程仓库:</span><span class="token function">git</span> remote <span class="token function">add</span> origin https://github.com/hxf233333/test.git<span class="token comment">#将本地的仓库内容改动推送到服务器master分支</span><span class="token function">git</span> push -u origin master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-2-已有仓库进行修改"><a href="#3-2-已有仓库进行修改" class="headerlink" title="3.2 已有仓库进行修改"></a>3.2 已有仓库进行修改</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#将远程版本库拷贝到本地，同时也将分支都拷贝到本地</span><span class="token function">git</span> clone https://github.com/hxf233333/test<span class="token comment">#进入工作区目录</span><span class="token builtin class-name">cd</span> <span class="token builtin class-name">test</span><span class="token comment">#使用vim修改文件</span><span class="token function">vim</span> test.cpp<span class="token function">git</span> <span class="token function">add</span> 文件名或目录 <span class="token comment">#添加到暂存区</span><span class="token function">git</span> <span class="token function">rm</span>  文件名或目录 <span class="token comment">#从暂存区删除</span><span class="token comment">#从暂存区提交文件变动到本地版本库,通过 -m 参数可直接在命令行里输入提交描述文本，可追加多行</span><span class="token function">git</span> commit -m <span class="token string">"描述信息"</span><span class="token comment">#本地关联远程仓库:</span><span class="token function">git</span> remote <span class="token function">add</span> origin https://github.com/hxf233333/test.git<span class="token comment">#将本地的仓库内容改动推送到服务器master分支</span><span class="token function">git</span> push -u origin master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-分支基本操作"><a href="#4-分支基本操作" class="headerlink" title="4 分支基本操作"></a>4 分支基本操作</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#将远程版本库拷贝到本地，同时也将分支都拷贝到本地</span><span class="token function">git</span> clone https://github.com/hxf233333/test<span class="token comment">#进入工作区目录</span><span class="token builtin class-name">cd</span> <span class="token builtin class-name">test</span><span class="token comment">#commit之后才会真正建立master分支，此时才可以建立其它分支</span><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span> <span class="token function">git</span> commit<span class="token function">git</span> branch develop<span class="token comment">#查看所有分支</span><span class="token function">git</span> branch<span class="token comment">#切换到develop分支</span><span class="token function">git</span> checkout develop<span class="token comment">#使用vim修改文件</span><span class="token function">vim</span> test.cpp<span class="token function">git</span> <span class="token function">add</span> 文件名或目录 <span class="token comment">#添加到暂存区</span><span class="token function">git</span> <span class="token function">rm</span>  文件名或目录 <span class="token comment">#从暂存区删除</span><span class="token comment">#从暂存区提交文件变动到本地版本库,通过 -m 参数可直接在命令行里输入提交描述文本，可追加多行</span><span class="token function">git</span> commit -m <span class="token string">"描述信息"</span><span class="token comment">#本地关联远程仓库:</span><span class="token function">git</span> remote <span class="token function">add</span> origin https://github.com/hxf233333/test.git<span class="token comment">#将本地的仓库内容改动推送到服务器develop分支</span><span class="token function">git</span> push -u origin develop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-管理分支"><a href="#5-管理分支" class="headerlink" title="5 管理分支"></a>5 管理分支</h2><p>获取分支，某次提交等 <code>git</code> 信息[2]</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 显示暂存区和工作区的差异</span>$ <span class="token function">git</span> <span class="token function">diff</span><span class="token comment"># 比较暂存区和版本库差异</span>$ <span class="token function">git</span> <span class="token function">diff</span> --staged<span class="token comment"># 显示多个分支之间的差异</span>$ <span class="token function">git</span> <span class="token function">diff</span> <span class="token punctuation">[</span>first-branch<span class="token punctuation">]</span><span class="token punctuation">..</span>.<span class="token punctuation">[</span>second-branch<span class="token punctuation">]</span><span class="token comment"># 将其他分支合并到当前分支</span>$ <span class="token function">git</span> merge branchName<span class="token comment"># 在合并时创建一个新的master分支提交，这样可以生成 merge 提交变化</span>$ <span class="token function">git</span> merge --no-ff branchName<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="merge.png" alt="图片" srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="merge.png" class="lozad post-image"></p><p>默认情况下，<code>Git</code> 执行”<code>快进式合并</code>“（fast-farward merge），会直接将 <code>Master</code>分支指向 <code>Develop</code> 分支，使用 <code>--no-ff</code> 参数后，会执行正常合并，在 <code>Master</code>分支上生成一个新节点，保证版本演进更清晰。</p><blockquote><p><strong>reference：</strong></p><p>[1]<a href="https://mp.weixin.qq.com/s/Q_O0ey4C9tryPZaZeJocbA">https://mp.weixin.qq.com/s/Q_O0ey4C9tryPZaZeJocbA</a></p><p>[2]<a href="https://mp.weixin.qq.com/s/bZS5c2oKkUipqN2xV1EVVg">https://mp.weixin.qq.com/s/bZS5c2oKkUipqN2xV1EVVg</a></p><p>[3]<a href="https://www.cnblogs.com/zhoudayang/p/5510729.html">https://www.cnblogs.com/zhoudayang/p/5510729.html</a></p><p>[4]<a href="https://www.cnblogs.com/yifeichongtian/p/12716767.html">https://www.cnblogs.com/yifeichongtian/p/12716767.html</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-git介绍&quot;&gt;&lt;a href=&quot;#1-git介绍&quot; class=&quot;headerlink&quot; title=&quot;1 git介绍&quot;&gt;&lt;/a&gt;1 git介绍&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Git&lt;/code&gt; 是一种分布式版本控制系统，它可以不受网络连接的限制，配合githu</summary>
      
    
    
    
    <category term="常用工具" scheme="https://hxf233333.gitee.io/categories/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Linux" scheme="https://hxf233333.gitee.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习笔记_day10(完结)</title>
    <link href="https://hxf233333.gitee.io/2021/03/06/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day10(%E5%AE%8C%E7%BB%93)/"/>
    <id>https://hxf233333.gitee.io/2021/03/06/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day10(%E5%AE%8C%E7%BB%93)/</id>
    <published>2021-03-06T07:14:52.000Z</published>
    <updated>2021-03-06T07:50:00.941Z</updated>
    
    <content type="html"><![CDATA[<h2 id="12-流程控制结构"><a href="#12-流程控制结构" class="headerlink" title="12 流程控制结构"></a>12 流程控制结构</h2><ul><li>顺序机构：程序从上往下一次</li><li>分支结构：程序从两条或者多条路径中选择一条去执行</li><li>循环结构：程序在满足一定的基础上，重复执行一段代码</li></ul><h3 id="12-1-分支结构"><a href="#12-1-分支结构" class="headerlink" title="12.1 分支结构"></a>12.1 分支结构</h3><h4 id="12-1-1-IF函数"><a href="#12-1-1-IF函数" class="headerlink" title="12.1.1 IF函数"></a>12.1.1 IF函数</h4><ul><li><p>功能：实现简单的双分支</p></li><li><p>语法：</p></li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">IF</span>（表达式<span class="token number">1</span>，表达式<span class="token number">2</span>，表达式<span class="token number">3</span>）执行顺序：如果表达式<span class="token number">1</span>成立，则<span class="token keyword">IF</span>函数返回表达式<span class="token number">2</span>的值，否则返回表达式<span class="token number">3</span>的值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>应用：任何地方</li></ul><h4 id="12-1-2-CASE结构"><a href="#12-1-2-CASE结构" class="headerlink" title="12.1.2 CASE结构"></a>12.1.2 CASE结构</h4><ul><li>情况1：类似于c++的switch语句，一般用于实现等值判断</li></ul><blockquote><p>语法：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CASE</span> 变量<span class="token operator">|</span>表达式<span class="token operator">|</span>字段<span class="token keyword">WHEN</span> 要判断的值 <span class="token keyword">THEN</span> 返回的值<span class="token number">1</span>或语句<span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">WHEN</span> 要判断的值 <span class="token keyword">THEN</span> 返回的值<span class="token number">2</span>或语句<span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">ELSE</span> 要返回的值n或语句n<span class="token punctuation">;</span><span class="token keyword">END</span> <span class="token keyword">CASE</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><ul><li>情况2：类似于c++中的多重IF语句，一般用于实现区间判断</li></ul><blockquote><p>语法：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> 要判断的条件<span class="token number">1</span> <span class="token keyword">THEN</span> 返回的值<span class="token number">1</span>或语句<span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">WHEN</span> 要判断的条件<span class="token number">2</span> <span class="token keyword">THEN</span> 返回的值<span class="token number">2</span>或语句<span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">ELSE</span> 要返回的值n或语句n<span class="token punctuation">;</span><span class="token keyword">END</span> <span class="token keyword">CASE</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><ul><li>特点：</li></ul><blockquote><p>①可以作为表达式，嵌套在其他语句中使用，可以放在任何地方，BEGIN END 中或BEGIN END的外面，<br>可以作为独立的语句去使用，只能放在BEGIN END中</p><p>②如果WHEN中的值满足或条件成立，则执行对应的THEN后面的语句，并且结束CASE，<br>如果都不满足，则执行ELSE中的语句或值</p><p>③ELSE可以省略，如果省略了，并且所有WHEN条件都不满足，则返回NULL</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#案例</span><span class="token comment">#创建存储过程，根据传入的成绩，来显示等级，比如传入的成绩：90-100，显示A；80-90，显示B；60-80，显示C；否则，显示D</span><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> test_case<span class="token punctuation">(</span><span class="token operator">IN</span> scare <span class="token keyword">INT</span><span class="token punctuation">)</span><span class="token keyword">BEGIN</span><span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> scare<span class="token operator">>=</span><span class="token number">90</span> <span class="token operator">AND</span> scare<span class="token operator">&lt;=</span><span class="token number">100</span> <span class="token keyword">THEN</span> <span class="token keyword">SELECT</span> <span class="token string">'A'</span><span class="token punctuation">;</span><span class="token keyword">WHEN</span> scare<span class="token operator">>=</span><span class="token number">80</span> <span class="token keyword">THEN</span> <span class="token keyword">SELECT</span> <span class="token string">'B'</span><span class="token punctuation">;</span><span class="token keyword">WHEN</span> scare<span class="token operator">>=</span><span class="token number">60</span> <span class="token keyword">THEN</span> <span class="token keyword">SELECT</span> <span class="token string">'C'</span><span class="token punctuation">;</span><span class="token keyword">ELSE</span> <span class="token keyword">SELECT</span> <span class="token string">'D'</span><span class="token punctuation">;</span><span class="token keyword">END</span> <span class="token keyword">CASE</span><span class="token punctuation">;</span><span class="token keyword">END</span> $<span class="token keyword">CALL</span> test_case<span class="token punctuation">(</span><span class="token number">95</span><span class="token punctuation">)</span>$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="12-1-3-IF结构"><a href="#12-1-3-IF结构" class="headerlink" title="12.1.3 IF结构"></a>12.1.3 IF结构</h4><ul><li><p>功能：实现多重分支</p></li><li><p>语法：</p></li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">IF</span> 条件<span class="token number">1</span> <span class="token keyword">THEN</span> 语句<span class="token number">1</span>；<span class="token keyword">ELSEIF</span> 条件<span class="token number">2</span> <span class="token keyword">THEN</span> 语句<span class="token number">2</span>；<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token keyword">ELSE</span> 语句n<span class="token punctuation">;</span><span class="token punctuation">]</span><span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>应用场合：应用在BEGIN END中</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#案例：创建函数，根据传入的成绩，来返回等级，比如传入的成绩：90-100，返回A；80-90，返回B；60-80，返回C；否则，返回D</span><span class="token keyword">CREATE</span> <span class="token keyword">FUNCTION</span> test_if<span class="token punctuation">(</span>score <span class="token keyword">INT</span><span class="token punctuation">)</span> <span class="token keyword">RETURN</span> <span class="token keyword">CHAR</span><span class="token keyword">BEGIN</span><span class="token keyword">IF</span> score<span class="token operator">>=</span><span class="token number">90</span> <span class="token operator">AND</span> score<span class="token operator">&lt;=</span><span class="token number">100</span> <span class="token keyword">THEN</span> <span class="token keyword">RETURN</span> <span class="token string">'A'</span><span class="token punctuation">;</span><span class="token keyword">ELSEIF</span> score<span class="token operator">>=</span><span class="token number">80</span> <span class="token keyword">THEN</span> <span class="token keyword">RETURN</span> <span class="token string">'B'</span><span class="token punctuation">;</span><span class="token keyword">ELSEIF</span> scare<span class="token operator">>=</span><span class="token number">60</span> <span class="token keyword">THEN</span> <span class="token keyword">RETURN</span> <span class="token string">'C'</span><span class="token punctuation">;</span><span class="token keyword">ELSE</span> <span class="token keyword">RETURN</span> <span class="token string">'D'</span><span class="token punctuation">;</span><span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span><span class="token keyword">END</span> $<span class="token keyword">CALL</span> test_if<span class="token punctuation">(</span><span class="token number">86</span><span class="token punctuation">)</span>$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="12-2-循环结构"><a href="#12-2-循环结构" class="headerlink" title="12.2 循环结构"></a>12.2 循环结构</h3><ul><li>分类：</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">while</span>、<span class="token keyword">loop</span>、<span class="token keyword">repeat</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>循环控制：</li></ul><blockquote><p>iterate 类似于continue，继续，结束本次循环，继续下一次<br>leave 类似于 break，跳出，结束当前所在的循环</p></blockquote><ul><li>使用范围：begin end中</li></ul><h4 id="12-2-1-while"><a href="#12-2-1-while" class="headerlink" title="12.2.1 while"></a>12.2.1 while</h4><ul><li>语法：</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token punctuation">[</span>标签:<span class="token punctuation">]</span><span class="token keyword">while</span> 循环条件 <span class="token keyword">do</span>      循环体<span class="token punctuation">;</span><span class="token keyword">end</span> <span class="token keyword">while</span> <span class="token punctuation">[</span>标签<span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>特点：先判断后执行</li></ul><p><strong>1.没有添加控制条件</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#案例：批量插入，根据次数插入到admin表中多条记录</span><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> pro_while<span class="token punctuation">(</span><span class="token operator">IN</span> insertCount <span class="token keyword">INT</span><span class="token punctuation">)</span><span class="token keyword">BEGIN</span><span class="token keyword">DECLARE</span> i <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">WHILE</span> i<span class="token operator">&lt;=</span>insertCount <span class="token keyword">DO</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> admin<span class="token punctuation">(</span>username<span class="token punctuation">,</span><span class="token string">'password'</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span>CONCAT<span class="token punctuation">(</span><span class="token string">'Rose'</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'666'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SET</span> i<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">END</span> <span class="token keyword">WHILE</span><span class="token punctuation">;</span><span class="token keyword">END</span> $<span class="token keyword">CALL</span> pro_while1<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>2.添加leave语句</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#案例：批量插入，根据次数插入到admin表中多条记录，如果次数>20则停止</span><span class="token keyword">TRUNCATE</span> <span class="token keyword">TABLE</span> admin$<span class="token keyword">DROP</span> <span class="token keyword">PROCEDURE</span> test_while1$<span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> test_while1<span class="token punctuation">(</span><span class="token operator">IN</span> insertCount <span class="token keyword">INT</span><span class="token punctuation">)</span><span class="token keyword">BEGIN</span><span class="token keyword">DECLARE</span> i <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token number">1</span><span class="token punctuation">;</span>a:<span class="token keyword">WHILE</span> i<span class="token operator">&lt;=</span>insertCount <span class="token keyword">DO</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> admin<span class="token punctuation">(</span>username<span class="token punctuation">,</span><span class="token string">'password'</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span>CONCAT<span class="token punctuation">(</span><span class="token string">'xiaohua'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'0000'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">IF</span> i<span class="token operator">>=</span><span class="token number">20</span> <span class="token keyword">THEN</span> <span class="token keyword">LEAVE</span> a<span class="token punctuation">;</span><span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span><span class="token keyword">SET</span> i<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">END</span> <span class="token keyword">WHILE</span> a<span class="token punctuation">;</span><span class="token keyword">END</span> $<span class="token keyword">CALL</span> test_while<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>3.添加iterate语句</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#案例：批量插入，根据次数插入到admin表中多条记录，只插入偶数次</span><span class="token keyword">TRUNCATE</span> <span class="token keyword">TABLE</span> admin$<span class="token keyword">DROP</span> <span class="token keyword">PROCEDURE</span> test_while1$<span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> test_while1<span class="token punctuation">(</span><span class="token operator">IN</span> insertCount <span class="token keyword">INT</span><span class="token punctuation">)</span><span class="token keyword">BEGIN</span><span class="token keyword">DECLARE</span> i <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token number">1</span><span class="token punctuation">;</span>a:<span class="token keyword">WHILE</span> i<span class="token operator">&lt;=</span>insertCount <span class="token keyword">DO</span><span class="token keyword">SET</span> i<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">IF</span> <span class="token function">MOD</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token number">0</span> <span class="token keyword">THEN</span> <span class="token keyword">ITERATE</span> a<span class="token punctuation">;</span><span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> admin<span class="token punctuation">(</span>username<span class="token punctuation">,</span><span class="token string">'password'</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span>CONCAT<span class="token punctuation">(</span><span class="token string">'xiaohua'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'0000'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">END</span> <span class="token keyword">WHILE</span> a<span class="token punctuation">;</span><span class="token keyword">END</span> $<span class="token keyword">CALL</span> test_while<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="12-2-2-loop"><a href="#12-2-2-loop" class="headerlink" title="12.2.2 loop"></a>12.2.2 loop</h4><ul><li>语法：</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token punctuation">[</span>标签:<span class="token punctuation">]</span><span class="token keyword">loop</span>循环体<span class="token punctuation">;</span><span class="token keyword">end</span> <span class="token keyword">loop</span> <span class="token punctuation">[</span>标签<span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>特点：可以用来模拟简单的死循环</li></ul><h4 id="12-2-3-repeat"><a href="#12-2-3-repeat" class="headerlink" title="12.2.3 repeat"></a>12.2.3 repeat</h4><p>语法：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token punctuation">[</span>标签:<span class="token punctuation">]</span> <span class="token keyword">repeat</span>循环体<span class="token punctuation">;</span>until 结束循环的条件<span class="token keyword">end</span> <span class="token keyword">repeat</span> <span class="token punctuation">[</span>标签<span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>特点：先执行后判断</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;12-流程控制结构&quot;&gt;&lt;a href=&quot;#12-流程控制结构&quot; class=&quot;headerlink&quot; title=&quot;12 流程控制结构&quot;&gt;&lt;/a&gt;12 流程控制结构&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;顺序机构：程序从上往下一次&lt;/li&gt;
&lt;li&gt;分支结构：程序从两条或者多</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://hxf233333.gitee.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="MySQL" scheme="https://hxf233333.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习笔记_day9</title>
    <link href="https://hxf233333.gitee.io/2021/03/05/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day9/"/>
    <id>https://hxf233333.gitee.io/2021/03/05/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day9/</id>
    <published>2021-03-05T08:58:54.000Z</published>
    <updated>2021-03-05T10:49:14.655Z</updated>
    
    <content type="html"><![CDATA[<h2 id="10-变量"><a href="#10-变量" class="headerlink" title="10 变量"></a>10 变量</h2><ul><li>系统变量：全局变量、会话变量</li><li>自定义变量：用户变量、局部变量</li></ul><h3 id="10-1-系统变量"><a href="#10-1-系统变量" class="headerlink" title="10.1 系统变量"></a>10.1 系统变量</h3><ul><li>说明：变量由系统提供，不是用户定义，属于服务器层面</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span>、查看所有的系统变量<span class="token keyword">SHOW</span> <span class="token keyword">GLOBAL</span> <span class="token operator">|</span> <span class="token punctuation">[</span><span class="token keyword">SESSION</span><span class="token punctuation">]</span> VARIABLES<span class="token punctuation">;</span><span class="token number">2</span>、查看所有满足条件的部分系统变量<span class="token keyword">SHOW</span> <span class="token keyword">GLOBAL</span> <span class="token operator">|</span> <span class="token punctuation">[</span><span class="token keyword">SESSION</span><span class="token punctuation">]</span> VARIABLES <span class="token operator">LIKE</span> <span class="token string">'%char%'</span><span class="token punctuation">;</span><span class="token number">3</span>、查看指定的某个系统变量的值<span class="token keyword">SELECT</span> @<span class="token variable">@global</span> <span class="token operator">|</span> <span class="token punctuation">[</span><span class="token keyword">SESSION</span><span class="token punctuation">]</span> <span class="token punctuation">.</span>系统变量名<span class="token punctuation">;</span><span class="token number">4</span>、为某个系统变量赋值方式一：<span class="token keyword">SET</span> <span class="token keyword">GLOBAL</span> <span class="token operator">|</span> <span class="token punctuation">[</span><span class="token keyword">SESSION</span><span class="token punctuation">]</span> 系统变量名 <span class="token operator">=</span> 值<span class="token punctuation">;</span>方式二：<span class="token keyword">SET</span> @<span class="token variable">@global</span> <span class="token operator">|</span> <span class="token punctuation">[</span><span class="token keyword">SESSION</span><span class="token punctuation">]</span> <span class="token punctuation">.</span>系统变量名 <span class="token operator">=</span> 值<span class="token punctuation">;</span>注意：如果是全局级别，则需要加<span class="token keyword">GLOBAL</span>，如果是会话级别，则需要加<span class="token keyword">SESSION</span>，如果不写，则默认sesion <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="10-2-自定义变量"><a href="#10-2-自定义变量" class="headerlink" title="10.2 自定义变量"></a>10.2 自定义变量</h3><ul><li>说明：变量是用户自定义的，不是由系统的</li><li>使用步骤：声明、赋值、使用（查看，比较，运算等）</li></ul><h4 id="10-2-1-用户变量"><a href="#10-2-1-用户变量" class="headerlink" title="10.2.1 用户变量"></a>10.2.1 用户变量</h4><ul><li><p>作用域：针对于当前会话（连续）有效，同于会话变量的作用域；应用在任何地方，也就是BEGIN END里面或者外面</p></li><li><p>赋值的操作符： =或:=</p></li></ul><blockquote><p>①声明并初始化</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SET</span> @用户变量名<span class="token operator">=</span>值；或<span class="token keyword">SET</span> @用户变量名:<span class="token operator">=</span>值；或<span class="token keyword">SELECT</span> @用户变量名:<span class="token operator">=</span>值<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>②赋值（更新用户变量的值）<br>方式一；通过SET或SELECT</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SET</span> @用户变量名<span class="token operator">=</span>值<span class="token punctuation">;</span>或<span class="token keyword">SET</span> @用户变量名:<span class="token operator">=</span>值<span class="token punctuation">;</span>或<span class="token keyword">SELECT</span> @用户变量名:<span class="token operator">=</span>值<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>方式二：通过SELECT INTO</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> 字段 <span class="token keyword">INTO</span> 变量名 <span class="token keyword">FROM</span> 表<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>③使用（查看用户变量的值）</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> @用户变量名<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><h4 id="10-2-2-局部变量"><a href="#10-2-2-局部变量" class="headerlink" title="10.2.2 局部变量"></a>10.2.2 局部变量</h4><ul><li>作用域：仅仅在定义它的BEGIN END中有效</li></ul><blockquote><p>①声明</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DECLARE</span> 变量名 类型<span class="token punctuation">;</span><span class="token keyword">DECLARE</span> 变量名 类型 <span class="token keyword">DEFAULT</span> 值<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>②赋值<br>方式一；通过SET或SELECT</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SET</span> 局部变量名<span class="token operator">=</span>值<span class="token punctuation">;</span>或<span class="token keyword">SET</span> 局部变量名:<span class="token operator">=</span>值<span class="token punctuation">;</span>或<span class="token keyword">SELECT</span> @局部变量名:<span class="token operator">=</span>值<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>方式二：通过SELECT INTO</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> 字段 <span class="token keyword">INTO</span> 局部变量名 <span class="token keyword">FROM</span> 表<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>③使用</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> 局部变量名<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><h2 id="11-存储过程和函数"><a href="#11-存储过程和函数" class="headerlink" title="11 存储过程和函数"></a>11 存储过程和函数</h2><ul><li><p>存储过程和函数：类似于面向对象中的方法</p></li><li><p>好处：</p></li></ul><blockquote><p>1、提高代码的重用性</p><p>2、简化操作</p></blockquote><h3 id="11-1-存储过程"><a href="#11-1-存储过程" class="headerlink" title="11.1 存储过程"></a>11.1 存储过程</h3><ul><li>含义：一组预先编译好的SQL语句的集合，理解成批处理语句</li></ul><blockquote><p>1、提高代码的重用性</p><p>2、简化操作</p><p>3、减少了编译次数并且减少了和数据库服务器的连接次数，提高了效率</p></blockquote><h4 id="11-1-1-创建语法"><a href="#11-1-1-创建语法" class="headerlink" title="11.1.1 创建语法"></a>11.1.1 创建语法</h4><blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> 存储过程名（参数列表）<span class="token keyword">BEGIN</span>存储过程体（一组合法的<span class="token keyword">SQL</span>语句）<span class="token keyword">END</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意：</strong></p></blockquote><blockquote><p>1、参数列表包含三部分</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">参数模式 参数名 参数类型举例：<span class="token operator">IN</span> stuname <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>参数模式：<span class="token operator">IN</span>：该参数可以作为输入，也就是改参数需要方传入值<span class="token keyword">OUT</span>：该参数可以作为输出，也就是该参数可以作为返回值<span class="token keyword">INOUT</span>：该参数既可以作为输入又可以作为输出，也就是该参数既需要传入值，又可以返回值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2、如果存储过程体仅仅只有一句话，BEGIN END 可以省略</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">存储过程体中的每条<span class="token keyword">SQL</span>语句的结尾要求必须加分号。存储过程的结尾可以使用<span class="token keyword">DELIMITER</span>重新设置语法：<span class="token keyword">DELIMITER</span> 结束标记案例：<span class="token keyword">DELIMITER</span> $<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><h4 id="11-1-2-调用语法"><a href="#11-1-2-调用语法" class="headerlink" title="11.1.2 调用语法"></a>11.1.2 调用语法</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#1、空参列表</span><span class="token comment">#案例：插入到admin表中3条记录</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> admin<span class="token punctuation">;</span><span class="token keyword">DELIMITER</span> $<span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> myp1<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">BEGIN</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> amdin<span class="token punctuation">(</span>username<span class="token punctuation">,</span><span class="token string">'password'</span><span class="token punctuation">)</span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'john'</span><span class="token punctuation">,</span><span class="token string">'00000'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'lily'</span><span class="token punctuation">,</span><span class="token string">'00000'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'jack'</span><span class="token punctuation">,</span><span class="token string">'00000'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">END</span> $<span class="token comment">#调用</span><span class="token keyword">CALL</span> myp1<span class="token punctuation">(</span><span class="token punctuation">)</span>$<span class="token comment">#2、创建带in模式参数的存储过程</span><span class="token comment">#案列1：创建存储过程实现根据女生名，查询对应的男神信息</span><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> myp2<span class="token punctuation">(</span><span class="token operator">IN</span> beautyName <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">BEGIN</span><span class="token keyword">SELECT</span> bo<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">FROM</span> boys bo<span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> beauty b <span class="token keyword">ON</span> bo<span class="token punctuation">.</span>id <span class="token operator">=</span> b<span class="token punctuation">.</span>boyfriend_id<span class="token keyword">WHERE</span> b<span class="token punctuation">.</span>name <span class="token operator">=</span> beautyName<span class="token punctuation">;</span><span class="token keyword">END</span> $<span class="token comment">#调用</span><span class="token keyword">CALL</span> myp2<span class="token punctuation">(</span><span class="token string">'张飞'</span><span class="token punctuation">)</span>$<span class="token comment">#3、创建带out模式的存储过程</span><span class="token comment">#案例：根据女神名，返回对应的男神名</span><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> myp5<span class="token punctuation">(</span><span class="token operator">IN</span> beautyName <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">OUT</span> boyName <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">BEGIN</span><span class="token keyword">SELECT</span> bo<span class="token punctuation">.</span>boyName <span class="token keyword">INTO</span> boyName<span class="token keyword">FROM</span> boys bo<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> beauty b <span class="token keyword">ON</span> bo<span class="token punctuation">.</span>id <span class="token operator">=</span> b<span class="token punctuation">.</span>boyfriend_id<span class="token keyword">WHERE</span> b<span class="token punctuation">.</span>name <span class="token operator">=</span> beautyName<span class="token punctuation">;</span><span class="token keyword">END</span> $<span class="token comment">#调用</span><span class="token keyword">CALL</span> myp5<span class="token punctuation">(</span><span class="token string">'小昭'</span>，<span class="token variable">@bname</span><span class="token punctuation">)</span>$<span class="token keyword">SELECT</span> <span class="token variable">@bname$</span><span class="token comment">#4、创建带inout模式的存储过程</span><span class="token comment">#案例：传入a和b两个值，最终a和b都翻倍并返回</span><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> myp6<span class="token punctuation">(</span><span class="token keyword">INOUT</span> a <span class="token keyword">INT</span><span class="token punctuation">,</span><span class="token keyword">INOUT</span> b <span class="token keyword">INT</span><span class="token punctuation">)</span><span class="token keyword">BEGIN</span><span class="token keyword">SET</span> a<span class="token operator">=</span>a<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">SET</span> b<span class="token operator">=</span>b<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">END</span><span class="token comment">#调用</span><span class="token keyword">SET</span> <span class="token variable">@m</span><span class="token operator">=</span><span class="token number">10</span>$<span class="token keyword">SET</span> <span class="token variable">@n</span><span class="token operator">=</span><span class="token number">20</span>$<span class="token keyword">CALL</span> myp6<span class="token punctuation">(</span><span class="token variable">@m</span><span class="token punctuation">,</span><span class="token variable">@n</span><span class="token punctuation">)</span>$<span class="token keyword">SELECT</span> <span class="token variable">@m</span><span class="token punctuation">,</span><span class="token variable">@n$</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="11-1-3-删除存储过程"><a href="#11-1-3-删除存储过程" class="headerlink" title="11.1.3 删除存储过程"></a>11.1.3 删除存储过程</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">语法： <span class="token keyword">DROP</span> <span class="token keyword">PROCEDURE</span> 存储过程名<span class="token keyword">DROP</span> <span class="token keyword">PROCEDURE</span> p1<span class="token punctuation">;</span><span class="token keyword">DROP</span> <span class="token keyword">PROCEDURE</span> p2<span class="token punctuation">,</span>p3<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="11-1-4-查看存储过程的信息"><a href="#11-1-4-查看存储过程的信息" class="headerlink" title="11.1.4 查看存储过程的信息"></a>11.1.4 查看存储过程的信息</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DESC</span> myp2<span class="token punctuation">;</span><span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> myp2<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="11-2-函数"><a href="#11-2-函数" class="headerlink" title="11.2 函数"></a>11.2 函数</h3><ul><li>含义：一组预先编译好的SQL语句的集合，理解成批处理语句</li></ul><blockquote><p>1、提高代码的重用性</p><p>2、简化操作</p><p>3、减少了编译次数并且减少了和数据库服务器的连接次数，提高了效率</p></blockquote><ul><li>区别：</li></ul><blockquote><p>存储过程：可以有0个返回，也可以有多个返回，适合做批量插入、批量更新</p><p>函数：有且仅有有个返回，适合做处理数据后返回一个结果</p></blockquote><h4 id="11-2-1-创建语法"><a href="#11-2-1-创建语法" class="headerlink" title="11.2.1 创建语法"></a>11.2.1 创建语法</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">FUNCTION</span> 函数名（参数列表） <span class="token keyword">RETURNS</span> 返回类型<span class="token keyword">BEGIN</span>函数体<span class="token keyword">END</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>注意：</li></ul><blockquote><p>1、参数列表 包含两部分：<br>参数名 参数类型</p><p>2、函数体：肯定会有RETURN语句，如果没有会报错<br>如果RETURN语句没有放在函数体的最后也不会报错，但不建议</p><p>3、函数体中仅有一句话，则可以省略BEGIN END</p><p>4、使用DELIMITER语句设置结束标记</p></blockquote><h4 id="11-2-2-调用语法"><a href="#11-2-2-调用语法" class="headerlink" title="11.2.2 调用语法"></a>11.2.2 调用语法</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> 函数名（参数列表）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#-------------案列演示-----------------</span><span class="token comment">#1、无参数返回</span><span class="token comment">#案例：返回公司的员工个数</span><span class="token keyword">CREATE</span> <span class="token keyword">FUNCTION</span> myf1<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">RETURNS</span> <span class="token keyword">INT</span><span class="token keyword">BEGIN</span><span class="token keyword">DECLARE</span> c <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">#定义变量</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">INTO</span> c<span class="token comment">#赋值</span><span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">RETURN</span> c<span class="token punctuation">;</span><span class="token keyword">END</span> $<span class="token keyword">SELECT</span> myf1<span class="token punctuation">(</span><span class="token punctuation">)</span>$<span class="token comment">#2、有参数返回</span><span class="token comment">#案例：根据部门名，返回该部门的平均工资</span><span class="token keyword">CREATE</span> <span class="token keyword">FUNCTION</span> myf2<span class="token punctuation">(</span>deptName <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">RETURNS</span> <span class="token keyword">DOUBLE</span><span class="token keyword">BEGIN</span><span class="token keyword">DECLARE</span> sal <span class="token keyword">DOUBLE</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">INTO</span> sal<span class="token keyword">FROM</span> employees e<span class="token keyword">JOIN</span> department d <span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id<span class="token keyword">WHERE</span> d<span class="token punctuation">.</span>department_name<span class="token operator">=</span>deptName<span class="token punctuation">;</span><span class="token keyword">RETURN</span> sal<span class="token punctuation">;</span><span class="token keyword">END</span> $<span class="token keyword">SELECT</span> myf2<span class="token punctuation">(</span><span class="token string">'IT'</span><span class="token punctuation">)</span>$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="11-2-3-查看函数"><a href="#11-2-3-查看函数" class="headerlink" title="11.2.3 查看函数"></a>11.2.3 查看函数</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">FUNCTION</span> myf2<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="11-2-4-删除函数"><a href="#11-2-4-删除函数" class="headerlink" title="11.2.4 删除函数"></a>11.2.4 删除函数</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">FUNCTION</span> myf2<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#案例：创建函数，实现传入两个float，返回二者之和</span><span class="token keyword">CREATE</span> <span class="token keyword">FUNCTION</span> test_fun1<span class="token punctuation">(</span>num1 <span class="token keyword">FLOAT</span><span class="token punctuation">,</span>nums <span class="token keyword">FLOAT</span><span class="token punctuation">)</span> <span class="token keyword">RETURN</span> <span class="token keyword">FLOAT</span><span class="token keyword">BEGIN</span><span class="token keyword">DECLARE</span> SUM <span class="token keyword">FLOAT</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">SET</span> SUM <span class="token operator">=</span> num1<span class="token operator">+</span>nums<span class="token punctuation">;</span><span class="token keyword">RETURN</span> SUM<span class="token punctuation">;</span><span class="token keyword">END</span> $<span class="token keyword">SELECT</span> test_funs<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;10-变量&quot;&gt;&lt;a href=&quot;#10-变量&quot; class=&quot;headerlink&quot; title=&quot;10 变量&quot;&gt;&lt;/a&gt;10 变量&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;系统变量：全局变量、会话变量&lt;/li&gt;
&lt;li&gt;自定义变量：用户变量、局部变量&lt;/li&gt;
&lt;/ul&gt;
&lt;</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://hxf233333.gitee.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="MySQL" scheme="https://hxf233333.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习笔记_day8</title>
    <link href="https://hxf233333.gitee.io/2021/03/03/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day8/"/>
    <id>https://hxf233333.gitee.io/2021/03/03/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day8/</id>
    <published>2021-03-03T11:57:55.000Z</published>
    <updated>2021-03-03T11:59:02.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="7-4-标识列"><a href="#7-4-标识列" class="headerlink" title="7.4 标识列"></a>7.4 标识列</h3><ul><li><p>含义：又称为自增长列，可以不用手动的插入值，系统提供默认的序列值</p></li><li><p>特点：</p></li></ul><blockquote><p>1、自增长列要求必须设置在一个键上，比如主键或唯一键<br>2、自增长列要求数据类型为数值型<br>3、一个表至多有一个自增长列</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> gradeinfo<span class="token punctuation">(</span>gradeID <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>gradeName <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> gradeinfo<span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> gradeinfo <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token string">'一年级'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token string">'2年级'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token string">'3年级'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> gradeinfo<span class="token punctuation">(</span>gradename<span class="token punctuation">)</span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'一年级'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'2年级'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'3年级'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="8-TCL-语言"><a href="#8-TCL-语言" class="headerlink" title="8 TCL 语言"></a>8 TCL 语言</h2><ul><li><p>Transcaction Control Language：事务控制语言</p></li><li><p>概念：由一条或多条sql语句组成，要么都成功，要么都失败</p></li><li><p>特性：ACID</p></li></ul><blockquote><p>原子性（Atomicity）：事务中所有操作是不可再分割的原子单位。事务中所有操作要么全部执行成功，要么全部执行失败。</p><p>一致性（Consistency）：事务执行后，数据库状态与其它业务规则保持一致。如转账业务，无论事务执行成功与否，参与转账的两个账号余额之和应该是不变的。</p><p>隔离性（Isolation）：隔离性是指在并发操作中，不同事务之间应该隔离开来，使每个并发中的事务不会相互干扰。</p><p>持久性（Durability）：一旦事务提交成功，事务中所有的数据操作都必须被持久化到数据库中，即使提交事务后，数据库马上崩溃，在数据库重启时，也必须能保证通过某种机制恢复数据。</p></blockquote><ul><li>分类：</li></ul><blockquote><p><strong>隐式事务</strong>：没有明显的开启和结束标记<br>    比如DML语句的insert、update、delete语句本身就是一条事务</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> stuinfo <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'john'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'ert@dd.com'</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>显式事务</strong>：具有明显的开启和结束标记</p><p>一般由多条SQL语句组成，必须具有明显的开启和结束标记</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">步骤：取消隐式事务自动开启的功能<span class="token number">1</span>、开启事务<span class="token number">2</span>、编写事务需要的<span class="token keyword">sql</span>语句（<span class="token number">1</span>条或多条）<span class="token keyword">insert</span> <span class="token keyword">into</span> stuinfovalues<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'john'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'ert@dd.com'</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> stuinfo <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'john'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'ert@dd.com'</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token number">3</span>、结束事务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><ul><li><p><em>savepoint 节点名;设置保存点</em></p></li><li><p>事务的隔离级别:</p></li></ul><table><thead><tr><th>事务的隔离级别</th><th>脏读</th><th>不可重复读</th><th>幻读</th></tr></thead><tbody><tr><td>read uncommitted</td><td>√</td><td>√</td><td>√</td></tr><tr><td>read committed</td><td>×</td><td>√</td><td>√</td></tr><tr><td>repeatable read</td><td>×</td><td>×</td><td>√</td></tr><tr><td>serializable</td><td>×</td><td>×</td><td>×</td></tr></tbody></table><blockquote><p>1.MySQL中默认第三个隔离级别 repeatable read</p><p>2.Oracle中默认第二个隔离级别 read commited</p><p>3.查看隔离级别</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> @<span class="token variable">@tx_isolation</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4.设置隔离级别</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">set</span> <span class="token keyword">session</span><span class="token operator">|</span><span class="token keyword">global</span> trancate <span class="token keyword">isolation</span> <span class="token keyword">level</span> 隔离级别<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>  <strong>#演示事务的使用步骤</strong></p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SHOW</span> VARIABLES <span class="token operator">LIKE</span> <span class="token string">'%auto%'</span><span class="token comment">#1、取消事务自动开启</span><span class="token keyword">SET</span> autocommit<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">#2、开启事务</span><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span><span class="token comment">#3、编写事务的sql语句</span><span class="token comment">#将张三丰的钱-5000</span><span class="token keyword">UPDATE</span> stuinfo <span class="token keyword">SET</span> balance<span class="token operator">=</span>balance<span class="token operator">-</span><span class="token number">5000</span> <span class="token keyword">WHERE</span> stuid <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">#将灭绝的钱+5000</span><span class="token keyword">UPDATE</span> stuinfo <span class="token keyword">SET</span> balance<span class="token operator">=</span>balance<span class="token operator">+</span><span class="token number">5000</span> <span class="token keyword">WHERE</span> stuid <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">#4、结束事务</span><span class="token comment">#回滚</span><span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span><span class="token comment">#提交</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stuinfo<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>#演示事务对于delete和truncate的处理的区别</strong><br><code>DELETE 支持回滚，TRUNCATE不支持回滚</code></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SET</span> autocommit<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> stuinfo<span class="token punctuation">;</span><span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>#演示savepoint的使用</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SET</span> autocommit<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> stuinfo <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">SAVEPOINT</span> a<span class="token punctuation">;</span> <span class="token comment">#设置保存点</span><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> stuinfo <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">ROLLBACK</span> <span class="token keyword">TO</span> a<span class="token punctuation">;</span> <span class="token comment">#回滚到保存点</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stuinfo<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="9-视图"><a href="#9-视图" class="headerlink" title="9 视图"></a>9 视图</h2><ul><li><p>含义：虚拟表，和普通表一样使用，是通过表动态生成的数据</p></li><li><p>创建表与视图的区别</p></li></ul><table><thead><tr><th>类型</th><th>创建语法的关键字</th><th>是否实际占用物理空间</th><th>使用</th></tr></thead><tbody><tr><td>视图</td><td>create view</td><td>只是保存了sql逻辑</td><td>一般不能增删改</td></tr><tr><td>表</td><td>create table</td><td>保存了数据</td><td>增删改查</td></tr></tbody></table><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#一、创建视图</span>语法：<span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> 视图<span class="token keyword">AS</span>查询语句<span class="token punctuation">;</span><span class="token keyword">USE</span> myemployees<span class="token punctuation">;</span><span class="token comment">#1.查询姓名中包含a字符的员工名、部门信息和工种信息</span><span class="token comment">#①创建</span><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> myv1<span class="token keyword">AS</span><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>department_name<span class="token punctuation">,</span>job_title<span class="token keyword">FROM</span> employees e<span class="token keyword">JOIN</span> departments d <span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id<span class="token keyword">JOIN</span> jobs j <span class="token keyword">ON</span> j<span class="token punctuation">.</span>job_id <span class="token operator">=</span> e<span class="token punctuation">.</span>job_id<span class="token punctuation">;</span> <span class="token comment">#②使用</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> myv1 <span class="token keyword">WHERE</span> last_name <span class="token operator">LIKE</span> <span class="token string">'%a%'</span><span class="token punctuation">;</span><span class="token comment">#二、视图的修改</span><span class="token comment">#方式一：</span><span class="token keyword">CREATE</span> <span class="token operator">OR</span> <span class="token keyword">REPLACE</span> <span class="token keyword">VIEW</span> 视图名<span class="token keyword">AS</span>查询语句<span class="token punctuation">;</span><span class="token comment">#方式二：</span><span class="token keyword">ALTER</span> <span class="token keyword">VIEW</span> 视图名<span class="token keyword">AS</span>查询语句<span class="token punctuation">;</span><span class="token comment">#三、删除视图</span>语法：<span class="token keyword">DROP</span> <span class="token keyword">VIEW</span> 视图名<span class="token punctuation">,</span>视图名<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span><span class="token comment">#四、查看视图</span><span class="token keyword">DESC</span> myv3<span class="token punctuation">;</span><span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> myv3<span class="token punctuation">;</span><span class="token comment">#五、视图的更新</span><span class="token keyword">CREATE</span> <span class="token operator">OR</span> <span class="token keyword">REPLACE</span> <span class="token keyword">VIEW</span> myv1<span class="token keyword">AS</span><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>email<span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> myv1<span class="token punctuation">;</span><span class="token comment">#1.插入</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> myv1 <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'张飞'</span>，<span class="token string">'zf@qq.com'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#2.修改</span><span class="token keyword">UPDATE</span> myv1 <span class="token keyword">SET</span> last_name <span class="token operator">=</span> <span class="token string">'张无忌'</span> <span class="token keyword">WHERE</span> last_name <span class="token operator">=</span> <span class="token string">'张飞'</span><span class="token punctuation">;</span><span class="token comment">#3.删除</span><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> myv1 <span class="token keyword">WHERE</span> last_name <span class="token operator">=</span> <span class="token string">'张无忌'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><strong>具备以下特点的视图不允许更新</strong></li></ul><blockquote><p>①包含以下关键字的sql语句：分组函数、distinct、group by、hanving、union或者union all<br>②常量视图<br>③select中包含子查询<br>④含有join<br>⑤from一个不能更新的视图<br>⑥where子句的子查询引用了from子句中的表</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;7-4-标识列&quot;&gt;&lt;a href=&quot;#7-4-标识列&quot; class=&quot;headerlink&quot; title=&quot;7.4 标识列&quot;&gt;&lt;/a&gt;7.4 标识列&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;含义：又称为自增长列，可以不用手动的插入值，系统提供默认的序列值&lt;/p&gt;
&lt;/li</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://hxf233333.gitee.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="MySQL" scheme="https://hxf233333.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习笔记_day7</title>
    <link href="https://hxf233333.gitee.io/2021/03/02/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day7/"/>
    <id>https://hxf233333.gitee.io/2021/03/02/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day7/</id>
    <published>2021-03-02T12:17:49.000Z</published>
    <updated>2021-03-02T12:19:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="7-DDL语言"><a href="#7-DDL语言" class="headerlink" title="7 DDL语言"></a>7 DDL语言</h2><ul><li>Data Define Language数据定义语言 ：用于对数据库和表的管理和操作</li></ul><h3 id="7-1-库和表的管理"><a href="#7-1-库和表的管理" class="headerlink" title="7.1 库和表的管理"></a>7.1 库和表的管理</h3><blockquote><p>1.库的管理<br>创建、修改、删除<br>2、表弟管理<br>创建、修改、删除</p><p>创建：create<br>修改：alter<br>删除：drop</p></blockquote><h4 id="7-1-1-库的管理"><a href="#7-1-1-库的管理" class="headerlink" title="7.1.1 库的管理"></a>7.1.1 库的管理</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#---------------------------库的管理------------------------√</span><span class="token comment">#一、创建数据库</span><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> stuDB<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> stuDB<span class="token punctuation">;</span><span class="token comment">#二、库的修改</span><span class="token keyword">RENAME</span> <span class="token keyword">DATABASE</span> books <span class="token keyword">TO</span> 新库名<span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">DATABASE</span> books <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> gbk<span class="token punctuation">;</span> <span class="token comment">#更改库的字符集</span><span class="token comment">#三、删除数据库</span><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> stuDB<span class="token punctuation">;</span><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> stuDB<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="7-1-2-表的管理"><a href="#7-1-2-表的管理" class="headerlink" title="7.1.2 表的管理"></a>7.1.2 表的管理</h4><p>一、创建表 ★</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">语法：<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">[</span><span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span><span class="token punctuation">]</span> 表名<span class="token punctuation">(</span>字段名  字段类型  【字段约束】<span class="token punctuation">,</span>字段名  字段类型  【字段约束】<span class="token punctuation">,</span>字段名  字段类型  【字段约束】<span class="token punctuation">,</span>字段名  字段类型  【字段约束】<span class="token punctuation">,</span>字段名  字段类型  【字段约束】<span class="token punctuation">)</span><span class="token punctuation">;</span>案例：没有添加约束<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> stuinfo<span class="token punctuation">(</span>stuid <span class="token keyword">INT</span> <span class="token punctuation">,</span>stuname <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>stugender <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>email <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>borndate <span class="token keyword">DATETIME</span><span class="token punctuation">)</span><span class="token punctuation">;</span>案例：添加约束（通用写法）<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> stuinfo<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> stuinfo<span class="token punctuation">(</span>stuid <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span><span class="token comment">#添加了主键约束</span>stuname <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">UNIQUE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token comment">#添加了唯一约束+非空</span>stugender <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">'男'</span><span class="token punctuation">,</span><span class="token comment">#添加了默认约束</span>email <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>age <span class="token keyword">INT</span> <span class="token keyword">CHECK</span><span class="token punctuation">(</span> age <span class="token operator">BETWEEN</span> <span class="token number">0</span> <span class="token operator">AND</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">#添加了检查约束，mysql不支持</span>majorid <span class="token keyword">INT</span><span class="token punctuation">,</span><span class="token keyword">CONSTRAINT</span> fk_stuinfo_major <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>majorid<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> major<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token comment">#添加了外键约束</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>二、修改表[了解]</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">语法：<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ADD</span><span class="token operator">|</span><span class="token keyword">MODIFY</span><span class="token operator">|</span>CHANGE<span class="token operator">|</span><span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> 字段名 字段类型 【字段约束】<span class="token punctuation">;</span><span class="token comment">#1.修改表名</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> stuinfo <span class="token keyword">RENAME</span> <span class="token keyword">TO</span> students<span class="token punctuation">;</span><span class="token comment">#2.添加字段</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> students <span class="token keyword">ADD</span> <span class="token keyword">COLUMN</span> borndate <span class="token keyword">TIMESTAMP</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span><span class="token keyword">DESC</span> students<span class="token punctuation">;</span><span class="token comment">#3.修改字段名</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> students CHANGE <span class="token keyword">COLUMN</span> borndate birthday <span class="token keyword">DATETIME</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span><span class="token comment">#4.修改字段类型</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span>  students <span class="token keyword">MODIFY</span> <span class="token keyword">COLUMN</span> birthday <span class="token keyword">TIMESTAMP</span> <span class="token punctuation">;</span><span class="token comment">#5.删除字段</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> students <span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> birthday<span class="token punctuation">;</span><span class="token keyword">DESC</span> students<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>三、删除表 √</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> students<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>四、复制表√</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#仅仅复制表的结构</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> newTable2 <span class="token operator">LIKE</span> major<span class="token punctuation">;</span><span class="token comment">#复制表的结构+数据</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> newTable3 <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> girls<span class="token punctuation">.</span><span class="token punctuation">`</span>beauty<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token comment">#案例：复制employees表中的last_name,department_id,salary字段到新表 emp表，但不复制数据</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> emp <span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>department_id<span class="token punctuation">,</span>salary <span class="token keyword">FROM</span> myemployees<span class="token punctuation">.</span><span class="token punctuation">`</span>employees<span class="token punctuation">`</span><span class="token keyword">WHERE</span> <span class="token number">1</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-2-数据类型"><a href="#7-2-数据类型" class="headerlink" title="7.2 数据类型"></a>7.2 数据类型</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span>、整型<span class="token keyword">TINYINT</span> <span class="token keyword">SMALLINT</span>  <span class="token keyword">INT</span>  <span class="token keyword">BIGINT</span> <span class="token number">2</span>、浮点型<span class="token keyword">FLOAT</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">DOUBLE</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>n<span class="token punctuation">)</span> <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>n<span class="token punctuation">)</span>m:整数部位长度<span class="token operator">+</span>小数部位长度n:小数部位长度m和n可选<span class="token number">3</span>、字符型<span class="token keyword">CHAR</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>:n可选<span class="token keyword">VARCHAR</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>：n必选 <span class="token keyword">TEXT</span> <span class="token keyword">ENUM</span><span class="token keyword">SET</span>n表示最多字符个数<span class="token number">4</span>、日期型<span class="token keyword">DATE</span> <span class="token keyword">TIME</span>  <span class="token keyword">DATETIME</span> <span class="token keyword">TIMESTAMP</span><span class="token number">5</span>、二进制型<span class="token keyword">BLOB</span> 存储图片数据<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-3-常见约束"><a href="#7-3-常见约束" class="headerlink" title="7.3 常见约束"></a>7.3 常见约束</h3><ul><li>说明：用于限制表中字段的数据的，从而进一步保证数据表的数据是一致的、准确的、可靠的！</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">NOT</span> <span class="token boolean">NULL</span> 非空：用于限制该字段为必填项<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DEFAULT</span> 默认：用于限制该字段没有显式插入值，则直接显式默认值<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">PRIMARY KEY 主键：用于限制该字段值不能重复，设置为主键列的字段默认不能为空一个表只能有一个主键，当然可以是组合主键<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">UNIQUE 唯一：用于限制该字段值不能重复字段是否可以为空   一个表可以有几个主键   ×1个唯一     √n个<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">CHECK检查：用于限制该字段值必须满足指定条件CHECK(age BETWEEN 1 AND 100)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> 外键:用于限制两个表的关系<span class="token punctuation">,</span>要求外键列的值必须来自于主表的关联列要求：①主表的关联列和从表的关联列的类型必须一致，意思一样，名称无要求②主表的关联列要求必须是主键③插入数据时，先插入主表，再插入从表④删除数据时，先删除从表，再删除主表<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;7-DDL语言&quot;&gt;&lt;a href=&quot;#7-DDL语言&quot; class=&quot;headerlink&quot; title=&quot;7 DDL语言&quot;&gt;&lt;/a&gt;7 DDL语言&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Data Define Language数据定义语言 ：用于对数据库和表的管理和操作&lt;/</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://hxf233333.gitee.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="MySQL" scheme="https://hxf233333.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习笔记_day6</title>
    <link href="https://hxf233333.gitee.io/2021/03/01/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day6/"/>
    <id>https://hxf233333.gitee.io/2021/03/01/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day6/</id>
    <published>2021-03-01T11:16:02.000Z</published>
    <updated>2021-03-01T11:19:35.470Z</updated>
    
    <content type="html"><![CDATA[<h2 id="6-DML语言"><a href="#6-DML语言" class="headerlink" title="6 DML语言"></a>6 DML语言</h2><ul><li>DML(Data Manipulation Language) 数据操纵语言：insert update delete</li><li>作用：对表中的数据的增删改</li></ul><h3 id="6-1-数据的插入"><a href="#6-1-数据的插入" class="headerlink" title="6.1 数据的插入"></a>6.1 数据的插入</h3><ul><li>语法：</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">插入单行：<span class="token keyword">insert</span> <span class="token keyword">into</span> 表名<span class="token punctuation">(</span>字段名<span class="token number">1</span><span class="token punctuation">,</span>字段名<span class="token number">2</span> <span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span>值<span class="token number">1</span>，值<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">#支持子查询</span><span class="token keyword">insert</span> <span class="token keyword">into</span> 表名 <span class="token keyword">set</span> 列名<span class="token operator">=</span>值<span class="token punctuation">,</span>列名<span class="token operator">=</span>值<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>  <span class="token comment">#不支持子查询</span>插入多行：<span class="token keyword">insert</span> <span class="token keyword">into</span> 表名<span class="token punctuation">(</span>字段名<span class="token number">1</span><span class="token punctuation">,</span>字段名<span class="token number">2</span> <span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span>值<span class="token number">1</span>，值<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>值<span class="token number">1</span>，值<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>值<span class="token number">1</span>，值<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>特点：</li></ul><blockquote><p>①字段和值列表一一对应<br>包含类型、约束等必须匹配</p><p>②数值型的值，不用单引号<br>非数值型的值，必须使用单引号</p><p>③字段顺序无要求</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stuinfo<span class="token punctuation">;</span><span class="token comment">#案例1：要求字段和值列表一一对应，且遵循类型和约束的限制</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> stuinfo<span class="token punctuation">(</span>stuid<span class="token punctuation">,</span>stuname<span class="token punctuation">,</span>stugender<span class="token punctuation">,</span>email<span class="token punctuation">,</span>age<span class="token punctuation">,</span>majorid<span class="token punctuation">)</span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'吴倩'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'wuqian@qq.com'</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> stuinfo<span class="token punctuation">(</span>stuid<span class="token punctuation">,</span>stuname<span class="token punctuation">,</span>stugender<span class="token punctuation">,</span>email<span class="token punctuation">,</span>age<span class="token punctuation">,</span>majorid<span class="token punctuation">)</span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">'李宗盛2'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">,</span><span class="token string">'wuqian@qq.com'</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">#案例2：可以为空字段如何插入</span><span class="token comment">#方案1：字段名和值都不写</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> stuinfo<span class="token punctuation">(</span>stuid<span class="token punctuation">,</span>stuname<span class="token punctuation">,</span>email<span class="token punctuation">,</span>majorid<span class="token punctuation">)</span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">'齐鱼'</span><span class="token punctuation">,</span><span class="token string">'qiqin@qq.com'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">#方案1：字段名写上，值使用null</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> stuinfo<span class="token punctuation">(</span>stuid<span class="token punctuation">,</span>stuname<span class="token punctuation">,</span>email<span class="token punctuation">,</span>age<span class="token punctuation">,</span>majorid<span class="token punctuation">)</span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">'齐鱼'</span><span class="token punctuation">,</span><span class="token string">'qiqin@qq.com'</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stuinfo<span class="token punctuation">;</span><span class="token comment">#案例3：默认字段如何插入</span><span class="token comment">#方案1：字段名写上，值使用default</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> stuinfo<span class="token punctuation">(</span>stuid<span class="token punctuation">,</span>stuname<span class="token punctuation">,</span>email<span class="token punctuation">,</span>stugender<span class="token punctuation">,</span>majorid<span class="token punctuation">)</span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token string">'齐小鱼'</span><span class="token punctuation">,</span><span class="token string">'qiqin@qq.com'</span><span class="token punctuation">,</span><span class="token keyword">DEFAULT</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">#方案2：字段名和值都不写</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> stuinfo<span class="token punctuation">(</span>stuid<span class="token punctuation">,</span>stuname<span class="token punctuation">,</span>email<span class="token punctuation">,</span>majorid<span class="token punctuation">)</span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token string">'齐小鱼'</span><span class="token punctuation">,</span><span class="token string">'qiqin@qq.com'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">#案例4：可以省略字段列表，默认所有字段</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> stuinfo <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">'林忆莲'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">,</span><span class="token string">'lin@126.com'</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> stuinfo <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token string">'小黄'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'dd@12.com'</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> stuinfo<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-2-数据的修改"><a href="#6-2-数据的修改" class="headerlink" title="6.2 数据的修改"></a>6.2 数据的修改</h3><ul><li>语法：</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">update</span> 表名 <span class="token keyword">set</span> 字段名 <span class="token operator">=</span> 新值<span class="token punctuation">,</span>字段名 <span class="token operator">=</span> 新值<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">where</span> 筛选条件<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#案例1：修改年龄&lt;20的专业编号为3号，且邮箱更改为 xx@qq.com</span><span class="token keyword">UPDATE</span> stuinfo <span class="token keyword">SET</span> majorid <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span>email<span class="token operator">=</span><span class="token string">'xx@qq.com'</span><span class="token keyword">WHERE</span> age<span class="token operator">&lt;</span><span class="token number">20</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="6-3-数据的删除"><a href="#6-3-数据的删除" class="headerlink" title="6.3 数据的删除"></a>6.3 数据的删除</h3><ul><li>语法：</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">方式<span class="token number">1</span>：<span class="token keyword">delete</span>语句语法：<span class="token keyword">delete</span> <span class="token keyword">from</span> 表名 <span class="token keyword">where</span> 筛选条件<span class="token punctuation">;</span>方式<span class="token number">2</span>：<span class="token keyword">truncate</span>语句语法：<span class="token keyword">truncate</span> <span class="token keyword">table</span> 表名<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#案例1：删除姓李所有信息</span><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> stuinfo <span class="token keyword">WHERE</span> stuname <span class="token operator">LIKE</span> <span class="token string">'李%'</span><span class="token punctuation">;</span><span class="token comment">#案例2：删除表中所有数据</span><span class="token keyword">TRUNCATE</span> <span class="token keyword">TABLE</span> stuinfo <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>【面试题】delete和truncate的区别</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1.</span><span class="token keyword">delete</span>可以添加<span class="token keyword">WHERE</span>条件  <span class="token keyword">TRUNCATE</span>不能添加<span class="token keyword">WHERE</span>条件，一次性清除所有数据<span class="token number">2.</span><span class="token keyword">truncate</span>的效率较高<span class="token number">3.</span>如果删除带自增长列的表，  使用<span class="token keyword">DELETE</span>删除后，重新插入数据，记录从断点处开始  使用<span class="token keyword">TRUNCATE</span>删除后，重新插入数据，记录从<span class="token number">1</span>开始  <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> gradeinfo<span class="token punctuation">;</span>  <span class="token keyword">TRUNCATE</span> <span class="token keyword">TABLE</span> gradeinfo<span class="token punctuation">;</span>  <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> gradeinfo<span class="token punctuation">(</span>gradename<span class="token punctuation">)</span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'一年级'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'2年级'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'3年级'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token number">4.</span><span class="token keyword">delete</span> 删除数据，会返回受影响的行数  <span class="token keyword">TRUNCATE</span>删除数据，不返回受影响的行数  <span class="token number">5.</span><span class="token keyword">delete</span>删除数据，可以支持事务回滚  <span class="token keyword">TRUNCATE</span>删除数据，不支持事务回滚<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;6-DML语言&quot;&gt;&lt;a href=&quot;#6-DML语言&quot; class=&quot;headerlink&quot; title=&quot;6 DML语言&quot;&gt;&lt;/a&gt;6 DML语言&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;DML(Data Manipulation Language) 数据操纵语言：inser</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://hxf233333.gitee.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="MySQL" scheme="https://hxf233333.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习笔记_day5</title>
    <link href="https://hxf233333.gitee.io/2021/02/28/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day5/"/>
    <id>https://hxf233333.gitee.io/2021/02/28/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day5/</id>
    <published>2021-02-28T11:01:34.000Z</published>
    <updated>2021-02-28T11:16:45.095Z</updated>
    
    <content type="html"><![CDATA[<h3 id="5-7-子查询"><a href="#5-7-子查询" class="headerlink" title="5.7 子查询"></a>5.7 子查询</h3><ul><li><p>说明：</p><p>当一个查询语句中又嵌套了另一个完整的select语句，则被嵌套的select语句称为子查询或内查询，外面的select语句称为主查询或外查询。</p></li><li><p>分类：</p><p>按子查询出现的位置进行分类：</p></li></ul><blockquote><p>1、select后面<br>    要求：子查询的结果为单行单列（标量子查询）<br>2、from后面<br>    要求：子查询的结果可以为多行多列<br>3、where或having后面 ★<br>    要求：子查询的结果必须为单列<br>        单行子查询<br>        多行子查询<br>4、exists后面<br>    要求：子查询结果必须为单列（相关子查询）</p></blockquote><ul><li>特点：</li></ul><div class="post-note note-danger"><p>1、子查询放在条件中，要求必须放在条件的右侧<br>2、子查询一般放在小括号中<br>3、子查询的执行优先于主查询<br>4、单行子查询对应了 单行操作符：&gt; &lt; &gt;= &lt;= = &lt;&gt;<br>5、多行子查询对应了 多行操作符：any/some  all in </p></div><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#一、放在where或having后面</span><span class="token comment">#一）单行子查询</span><span class="token comment">#案例1：谁的工资比 Abel 高?</span><span class="token comment">#①查询Abel的工资</span><span class="token keyword">SELECT</span> salary<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> last_name  <span class="token operator">=</span> <span class="token string">'Abel'</span><span class="token punctuation">;</span><span class="token comment">#②查询salary>①的员工信息</span><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>salary<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> salary<span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> salary<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> last_name <span class="token operator">=</span> <span class="token string">'Abel'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#案例2：返回job_id与141号员工相同，salary比143号员工多的员工姓名，job_id 和工资</span><span class="token comment">#①查询141号员工的job_id</span><span class="token keyword">SELECT</span> job_id<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> employee_id <span class="token operator">=</span> <span class="token number">141</span><span class="token comment">#②查询143号员工的salary</span><span class="token keyword">SELECT</span> salary<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> employee_id <span class="token operator">=</span> <span class="token number">143</span><span class="token comment">#③查询job_id=① and salary>②的信息</span><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>job_id<span class="token punctuation">,</span>salary<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> job_id <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> job_id<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> employee_id <span class="token operator">=</span> <span class="token number">141</span><span class="token punctuation">)</span> <span class="token operator">AND</span> salary<span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> salary<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> employee_id <span class="token operator">=</span> <span class="token number">143</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#案例3：返回公司工资最少的员工的last_name,job_id和salary</span><span class="token comment">#①查询最低工资</span><span class="token keyword">SELECT</span> <span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token keyword">FROM</span> employees<span class="token comment">#②查询salary=①的员工的last_name,job_id和salary</span><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>job_id<span class="token punctuation">,</span>salary<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> salary<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token keyword">FROM</span> employees<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#案例4：查询最低工资大于50号部门最低工资的部门id和其最低工资</span><span class="token comment">#①查询50号部门的最低工资</span><span class="token keyword">SELECT</span> <span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> department_id <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span><span class="token comment">#②查询各部门的最低工资，筛选看哪个部门的最低工资>①</span><span class="token keyword">SELECT</span> <span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span>department_id<span class="token keyword">FROM</span> employees<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> department_id<span class="token keyword">HAVING</span> <span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> department_id <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#二）多行子查询</span><span class="token comment">/*in:判断某字段是否在指定列表内  x in(10,30,50)any/some:判断某字段的值是否满足其中任意一个x>any(10,30,50)x>min()x=any(10,30,50)x in(10,30,50)all:判断某字段的值是否满足里面所有的x >all(10,30,50)x >max()*/</span><span class="token comment">#案例1：返回location_id是1400或1700的部门中的所有员工姓名</span><span class="token comment">#①查询location_id是1400或1700的部门</span><span class="token keyword">SELECT</span> department_id<span class="token keyword">FROM</span> departments<span class="token keyword">WHERE</span> location_id <span class="token operator">IN</span><span class="token punctuation">(</span><span class="token number">1400</span><span class="token punctuation">,</span><span class="token number">1700</span><span class="token punctuation">)</span><span class="token comment">#②查询department_id = ①的姓名</span><span class="token keyword">SELECT</span> last_name<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> department_id <span class="token operator">IN</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> department_id<span class="token keyword">FROM</span> departments<span class="token keyword">WHERE</span> location_id <span class="token operator">IN</span><span class="token punctuation">(</span><span class="token number">1400</span><span class="token punctuation">,</span><span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#题目：返回其它部门中比job_id为‘IT_PROG’部门任一工资低的员工的员工号、姓名、job_id 以及salary</span><span class="token comment">#①查询job_id为‘IT_PROG’部门的工资</span><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> salary<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> job_id <span class="token operator">=</span> <span class="token string">'IT_PROG'</span><span class="token comment">#②查询其他部门的工资&lt;任意一个①的结果</span><span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>job_id<span class="token punctuation">,</span>salary<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> salary<span class="token operator">&lt;</span><span class="token keyword">ANY</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> salary<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> job_id <span class="token operator">=</span> <span class="token string">'IT_PROG'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>等价于<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>job_id<span class="token punctuation">,</span>salary<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> salary<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> job_id <span class="token operator">=</span> <span class="token string">'IT_PROG'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#案例3：返回其它部门中比job_id为‘IT_PROG’部门所有工资都低的员工 的员工号、姓名、job_id 以及salary</span><span class="token comment">#①查询job_id为‘IT_PROG’部门的工资</span><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> salary<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> job_id <span class="token operator">=</span> <span class="token string">'IT_PROG'</span><span class="token comment">#②查询其他部门的工资&lt;所有①的结果</span><span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>job_id<span class="token punctuation">,</span>salary<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> salary<span class="token operator">&lt;</span><span class="token keyword">ALL</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> salary<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> job_id <span class="token operator">=</span> <span class="token string">'IT_PROG'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>等价于<span class="token keyword">SELECT</span> employee_id<span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>job_id<span class="token punctuation">,</span>salary<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> salary<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> job_id <span class="token operator">=</span> <span class="token string">'IT_PROG'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#二、放在select后面</span><span class="token comment">#案例；查询部门编号是50的员工个数</span><span class="token keyword">SELECT</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> department_id <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">)</span>   个数<span class="token punctuation">;</span><span class="token comment">#三、放在from后面</span><span class="token comment">#案例：查询每个部门的平均工资的工资级别</span><span class="token comment">#①查询每个部门的平均工资</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span>department_id<span class="token keyword">FROM</span> employees<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> department_id<span class="token comment">#②将①和sal_grade两表连接查询</span><span class="token keyword">SELECT</span> dep_ag<span class="token punctuation">.</span>department_id<span class="token punctuation">,</span>dep_ag<span class="token punctuation">.</span>ag<span class="token punctuation">,</span>g<span class="token punctuation">.</span>grade<span class="token keyword">FROM</span> sal_grade g<span class="token keyword">JOIN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> ag<span class="token punctuation">,</span>department_id<span class="token keyword">FROM</span> employees<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> department_id<span class="token punctuation">)</span> dep_ag <span class="token keyword">ON</span> dep_ag<span class="token punctuation">.</span>ag <span class="token operator">BETWEEN</span> g<span class="token punctuation">.</span>min_salary <span class="token operator">AND</span> g<span class="token punctuation">.</span>max_salary<span class="token punctuation">;</span><span class="token comment">#四、放在exists后面</span><span class="token comment">#案例1 ：查询有无名字叫“张三丰”的员工信息</span><span class="token keyword">SELECT</span> <span class="token keyword">EXISTS</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> last_name <span class="token operator">=</span> <span class="token string">'Abel'</span><span class="token punctuation">)</span> 有无Abel<span class="token punctuation">;</span><span class="token comment">#案例2：查询没有女朋友的男神信息</span><span class="token keyword">USE</span> girls<span class="token punctuation">;</span><span class="token keyword">SELECT</span> bo<span class="token punctuation">.</span><span class="token operator">*</span><span class="token keyword">FROM</span> boys bo<span class="token keyword">WHERE</span> bo<span class="token punctuation">.</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token operator">NOT</span> <span class="token operator">IN</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> boyfriend_id<span class="token keyword">FROM</span> beauty b<span class="token punctuation">)</span><span class="token keyword">SELECT</span> bo<span class="token punctuation">.</span><span class="token operator">*</span><span class="token keyword">FROM</span> boys bo<span class="token keyword">WHERE</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> boyfriend_id<span class="token keyword">FROM</span> beauty b<span class="token keyword">WHERE</span> bo<span class="token punctuation">.</span>id <span class="token operator">=</span> b<span class="token punctuation">.</span>boyfriend_id<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-8-分页查询"><a href="#5-8-分页查询" class="headerlink" title="5.8 分页查询"></a>5.8 分页查询</h3><ul><li>应用场景：当页面上的数据，一页显示不全，则需要分页显示</li></ul><p><code>分页查询的sql命令请求数据库服务器——&gt;服务器响应查询到的多条数据——&gt;前台页面</code></p><ul><li>语法：</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> 查询列表<span class="token keyword">from</span> 表<span class="token number">1</span> 别名<span class="token keyword">join</span> 表<span class="token number">2</span> 别名<span class="token keyword">on</span> 连接条件<span class="token keyword">where</span> 筛选条件<span class="token keyword">group</span> <span class="token keyword">by</span> 分组<span class="token keyword">having</span> 分组后筛选<span class="token keyword">order</span> <span class="token keyword">by</span> 排序列表<span class="token keyword">limit</span> 起始条目索引<span class="token punctuation">,</span>显示的条目数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>执行顺序：</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span>、<span class="token keyword">from</span>子句<span class="token number">2</span>、<span class="token keyword">join</span>子句<span class="token number">3</span>、<span class="token keyword">on</span>子句<span class="token number">4</span>、<span class="token keyword">where</span>子句<span class="token number">5</span>、<span class="token keyword">group</span> <span class="token keyword">by</span>子句<span class="token number">6</span>、<span class="token keyword">having</span>子句<span class="token number">7</span>、<span class="token keyword">select</span>子句<span class="token number">8</span>、<span class="token keyword">order</span> <span class="token keyword">by</span>子句<span class="token number">9</span>、<span class="token keyword">limit</span>子句<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>特点：</li></ul><div class="post-note note-danger"><p>①起始条目索引如果不写，默认是0<br>②limit后面支持两个参数<br>参数1：显示的起始条目索引<br>参数2：条目数</p></div><ul><li>公式：</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">假如要显示的页数是page，每页显示的条目数为size<span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> employees<span class="token keyword">limit</span> <span class="token punctuation">(</span>page<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>size<span class="token punctuation">,</span>size<span class="token punctuation">;</span>pagesize<span class="token operator">=</span><span class="token number">10</span><span class="token number">1</span>           <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token number">2</span><span class="token keyword">limit</span> <span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token number">3</span><span class="token keyword">limit</span> <span class="token number">20</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token number">4</span><span class="token keyword">limit</span> <span class="token number">30</span><span class="token punctuation">,</span><span class="token number">10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-9-联合查询"><a href="#5-9-联合查询" class="headerlink" title="5.9 联合查询"></a>5.9 联合查询</h3><ul><li><p>说明：</p><p><code>当查询结果来自于多张表，但多张表之间没有关联，这个时候往往使用联合查询，也称为union查询</code></p></li></ul><ul><li>语法：</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> 查询列表 <span class="token keyword">from</span> 表<span class="token number">1</span>  <span class="token keyword">where</span> 筛选条件  <span class="token keyword">union</span><span class="token keyword">select</span> 查询列表 <span class="token keyword">from</span> 表<span class="token number">2</span>  <span class="token keyword">where</span> 筛选条件  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>特点：<br>1、多条待联合的查询语句的查询列数必须一致，查询类型、字段意义最好一致<br>2、union实现去重查询;union all 实现全部查询，包含重复项</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#案例：查询所有国家的年龄>20岁的用户信息</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> usa <span class="token keyword">WHERE</span> uage <span class="token operator">></span><span class="token number">20</span> <span class="token keyword">UNION</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> chinese <span class="token keyword">WHERE</span> age <span class="token operator">></span><span class="token number">20</span> <span class="token punctuation">;</span><span class="token comment">#案例2：查询所有国家的用户姓名和年龄</span><span class="token keyword">SELECT</span> uname<span class="token punctuation">,</span>uage <span class="token keyword">FROM</span> usa<span class="token keyword">UNION</span><span class="token keyword">SELECT</span> age<span class="token punctuation">,</span><span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token keyword">FROM</span> chinese<span class="token punctuation">;</span><span class="token comment">#案例3：union自动去重/union all 可以支持重复项</span><span class="token keyword">SELECT</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'范冰冰'</span> <span class="token keyword">UNION</span> <span class="token keyword">ALL</span><span class="token keyword">SELECT</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'范冰冰'</span> <span class="token keyword">UNION</span>  <span class="token keyword">ALL</span><span class="token keyword">SELECT</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'范冰冰'</span> <span class="token keyword">UNION</span>  <span class="token keyword">ALL</span><span class="token keyword">SELECT</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'范冰冰'</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;5-7-子查询&quot;&gt;&lt;a href=&quot;#5-7-子查询&quot; class=&quot;headerlink&quot; title=&quot;5.7 子查询&quot;&gt;&lt;/a&gt;5.7 子查询&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;说明：&lt;/p&gt;
&lt;p&gt;当一个查询语句中又嵌套了另一个完整的select语句，则被嵌</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://hxf233333.gitee.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="MySQL" scheme="https://hxf233333.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习笔记_day4</title>
    <link href="https://hxf233333.gitee.io/2021/02/27/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day4/"/>
    <id>https://hxf233333.gitee.io/2021/02/27/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day4/</id>
    <published>2021-02-27T10:44:27.000Z</published>
    <updated>2021-02-28T11:29:50.753Z</updated>
    
    <content type="html"><![CDATA[<h3 id="5-5-分组查询"><a href="#5-5-分组查询" class="headerlink" title="5.5 分组查询"></a>5.5 分组查询</h3><ul><li>语法：</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> 查询列表<span class="token keyword">from</span> 表名<span class="token keyword">where</span> 筛选条件<span class="token keyword">group</span> <span class="token keyword">by</span> 分组列表<span class="token keyword">having</span> 分组后筛选<span class="token keyword">order</span> <span class="token keyword">by</span> 排序列表<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>执行顺序：</li></ul><div class="post-note note-danger"><p>①from子句<br>②where子句<br>③group by 子句<br>④having子句<br>⑤select子句<br>⑥order by子句</p></div><ul><li><p>特点：</p><p>①查询列表往往是分组函数和被分组的字段 ★</p><p>②分组查询中的筛选分为两类</p></li></ul><table><thead><tr><th align="center"></th><th align="center">筛选的基表</th><th align="center">使用的关键词</th><th align="center">位置</th></tr></thead><tbody><tr><td align="center">分组前筛选</td><td align="center">原始表</td><td align="center">where</td><td align="center">group by 的前面</td></tr><tr><td align="center">组后筛选</td><td align="center">分组后的结果集</td><td align="center">having</td><td align="center">group by的后面</td></tr></tbody></table><p><code>where——group by ——having</code></p><ul><li>问题：==分组函数做条件只可能放在having后面==！！！</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#1）简单的分组</span><span class="token comment">#案例1：查询每个工种的员工平均工资</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span>job_id<span class="token keyword">FROM</span> employees<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> job_id<span class="token punctuation">;</span><span class="token comment">#案例2：查询每个领导的手下人数</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span>manager_id<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> manager_id <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> manager_id<span class="token punctuation">;</span><span class="token comment">#2）可以实现分组前的筛选</span><span class="token comment">#案例1：查询邮箱中包含a字符的 每个部门的最高工资</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> 最高工资<span class="token punctuation">,</span>department_id<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> email <span class="token operator">LIKE</span> <span class="token string">'%a%'</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> department_id<span class="token punctuation">;</span><span class="token comment">#案例2：查询每个领导手下有奖金的员工的平均工资</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> 平均工资<span class="token punctuation">,</span>manager_id<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> commission_pct <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> manager_id<span class="token punctuation">;</span><span class="token comment">#3）可以实现分组后的筛选</span><span class="token comment">#案例1：查询哪个部门的员工个数>5</span><span class="token comment">#分析1：查询每个部门的员工个数</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> 员工个数<span class="token punctuation">,</span>department_id<span class="token keyword">FROM</span> employees<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> department_id<span class="token comment">#分析2：在刚才的结果基础上，筛选哪个部门的员工个数>5</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> 员工个数<span class="token punctuation">,</span>department_id<span class="token keyword">FROM</span> employees<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> department_id<span class="token keyword">HAVING</span>  <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">5</span><span class="token punctuation">;</span><span class="token comment">#案例2：每个工种有奖金的员工的最高工资>12000的工种编号和最高工资</span><span class="token keyword">SELECT</span> job_id<span class="token punctuation">,</span><span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> commission_pct  <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> job_id<span class="token keyword">HAVING</span> <span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">12000</span><span class="token punctuation">;</span><span class="token comment">#案例3：领导编号>102的    每个领导手下的最低工资大于5000的最低工资</span><span class="token comment">#分析1：查询每个领导手下员工的最低工资</span><span class="token keyword">SELECT</span> <span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> 最低工资<span class="token punctuation">,</span>manager_id<span class="token keyword">FROM</span> employees<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> manager_id<span class="token punctuation">;</span><span class="token comment">#分析2：筛选刚才1的结果</span><span class="token keyword">SELECT</span> <span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> 最低工资<span class="token punctuation">,</span>manager_id<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> manager_id<span class="token operator">></span><span class="token number">102</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> manager_id<span class="token keyword">HAVING</span> <span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">5000</span> <span class="token punctuation">;</span><span class="token comment">#4）可以实现排序</span><span class="token comment">#案例：查询没有奖金的员工的最高工资>6000的工种编号和最高工资,按最高工资升序</span><span class="token comment">#分析1：按工种分组，查询每个工种有奖金的员工的最高工资</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> 最高工资<span class="token punctuation">,</span>job_id<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> commission_pct <span class="token operator">IS</span>  <span class="token boolean">NULL</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> job_id<span class="token comment">#分析2：筛选刚才的结果，看哪个最高工资>6000</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> 最高工资<span class="token punctuation">,</span>job_id<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> commission_pct <span class="token operator">IS</span>  <span class="token boolean">NULL</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> job_id<span class="token keyword">HAVING</span> <span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">6000</span><span class="token comment">#分析3：按最高工资升序</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> 最高工资<span class="token punctuation">,</span>job_id<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> commission_pct <span class="token operator">IS</span>  <span class="token boolean">NULL</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> job_id<span class="token keyword">HAVING</span> <span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">6000</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">ASC</span><span class="token punctuation">;</span><span class="token comment">#5）按多个字段分组</span><span class="token comment">#案例：查询每个工种每个部门的最低工资,并按最低工资降序</span><span class="token comment">#提示：工种和部门都一样，才是一组</span>工种部门  工资<span class="token number">1</span> <span class="token number">10</span>  <span class="token number">10000</span><span class="token number">1</span>    <span class="token number">20</span>   <span class="token number">2000</span><span class="token number">2</span> <span class="token number">20</span><span class="token number">3</span>    <span class="token number">20</span><span class="token number">1</span>    <span class="token number">10</span><span class="token number">2</span>    <span class="token number">30</span><span class="token number">2</span>    <span class="token number">20</span><span class="token keyword">SELECT</span> <span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> 最低工资<span class="token punctuation">,</span>job_id<span class="token punctuation">,</span>department_id<span class="token keyword">FROM</span> employees<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> job_id<span class="token punctuation">,</span>department_id<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-6-连接查询"><a href="#5-6-连接查询" class="headerlink" title="5.6 连接查询"></a>5.6 连接查询</h3><ul><li>说明：又称多表查询，当查询语句涉及到的字段来自于多个表时，就会用到连接查询</li></ul><ul><li>笛卡尔乘积现象：表1 有m行，表2有n行，结果=m*n行</li></ul><div class="post-note note-danger"><p>发生原因：没有有效的连接条件<br>如何避免：添加有效的连接条件</p></div><ul><li>分类：</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">按年代分类：<span class="token number">1</span>、sql92标准:仅仅支持内连接内连接：等值连接非等值连接自连接<span class="token number">2</span>、sql99标准【推荐】：支持内连接<span class="token operator">+</span>外连接（左外和右外）<span class="token operator">+</span>交叉连接按功能分类：内连接：等值连接非等值连接自连接外连接：左外连接右外连接全外连接交叉连接<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-6-1-SQL-92标准"><a href="#5-6-1-SQL-92标准" class="headerlink" title="5.6.1 SQL 92标准"></a>5.6.1 SQL 92标准</h4><ul><li>语法:</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> 查询列表<span class="token keyword">from</span> 表<span class="token number">1</span> 别名<span class="token punctuation">,</span>表<span class="token number">2</span> 别名<span class="token keyword">where</span> 连接条件<span class="token operator">and</span> 筛选条件<span class="token keyword">group</span> <span class="token keyword">by</span> 分组列表<span class="token keyword">having</span> 分组后筛选<span class="token keyword">order</span> <span class="token keyword">by</span> 排序列表<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>执行顺序：</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span>、<span class="token keyword">from</span>子句<span class="token number">2</span>、<span class="token keyword">where</span>子句<span class="token number">3</span>、<span class="token operator">and</span>子句<span class="token number">4</span>、<span class="token keyword">group</span> <span class="token keyword">by</span>子句<span class="token number">5</span>、<span class="token keyword">having</span>子句<span class="token number">6</span>、<span class="token keyword">select</span>子句<span class="token number">7</span>、<span class="token keyword">order</span> <span class="token keyword">by</span>子句<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#---------------------------------sql92标准------------------</span><span class="token comment">#一、内连接</span><span class="token comment">#一）等值连接</span><span class="token comment">/*①多表等值连接的结果为多表的交集部分②n表连接，至少需要n-1个连接条件③多表的顺序没有要求④一般需要为表起别名⑤可以搭配前面介绍的所有子句使用，比如排序、分组、筛选*/</span><span class="token comment">#案例1：查询女神名和对应的男神名</span><span class="token keyword">SELECT</span> NAME<span class="token punctuation">,</span>boyName <span class="token keyword">FROM</span> boys<span class="token punctuation">,</span>beauty<span class="token keyword">WHERE</span> beauty<span class="token punctuation">.</span>boyfriend_id<span class="token operator">=</span> boys<span class="token punctuation">.</span>id<span class="token punctuation">;</span><span class="token comment">#案例2：查询员工名和对应的部门名</span><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>department_name<span class="token keyword">FROM</span> employees<span class="token punctuation">,</span>departments<span class="token keyword">WHERE</span> employees<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token operator">=</span>departments<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token comment">#2、为表起别名</span><span class="token comment">/*①提高语句的简洁度②区分多个重名的字段注意：如果为表起了别名，则查询的字段就不能使用原来的表名去限定*/</span><span class="token comment">#查询员工名、工种号、工种名</span><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span>e<span class="token punctuation">.</span>job_id<span class="token punctuation">,</span>j<span class="token punctuation">.</span>job_title<span class="token keyword">FROM</span> employees  e<span class="token punctuation">,</span>jobs j<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span><span class="token punctuation">`</span>job_id<span class="token punctuation">`</span><span class="token operator">=</span>j<span class="token punctuation">.</span><span class="token punctuation">`</span>job_id<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token comment">#3、两个表的顺序是否可以调换</span><span class="token comment">#查询员工名、工种号、工种名</span><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span>e<span class="token punctuation">.</span>job_id<span class="token punctuation">,</span>j<span class="token punctuation">.</span>job_title<span class="token keyword">FROM</span> jobs j<span class="token punctuation">,</span>employees e<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span><span class="token punctuation">`</span>job_id<span class="token punctuation">`</span><span class="token operator">=</span>j<span class="token punctuation">.</span><span class="token punctuation">`</span>job_id<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token comment">#4、可以加筛选</span><span class="token comment">#案例：查询有奖金的员工名、部门名</span><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>department_name<span class="token punctuation">,</span>commission_pct<span class="token keyword">FROM</span> employees e<span class="token punctuation">,</span>departments d<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token operator">=</span>d<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token operator">AND</span> e<span class="token punctuation">.</span><span class="token punctuation">`</span>commission_pct<span class="token punctuation">`</span> <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span><span class="token comment">#案例2：查询城市名中第二个字符为o的部门名和城市名</span><span class="token keyword">SELECT</span> department_name<span class="token punctuation">,</span>city<span class="token keyword">FROM</span> departments d<span class="token punctuation">,</span>locations l<span class="token keyword">WHERE</span> d<span class="token punctuation">.</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span> <span class="token operator">=</span> l<span class="token punctuation">.</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span><span class="token operator">AND</span> city <span class="token operator">LIKE</span> <span class="token string">'_o%'</span><span class="token punctuation">;</span><span class="token comment">#5、可以加分组</span><span class="token comment">#案例1：查询每个城市的部门个数</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> 个数<span class="token punctuation">,</span>city<span class="token keyword">FROM</span> departments d<span class="token punctuation">,</span>locations l<span class="token keyword">WHERE</span> d<span class="token punctuation">.</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span><span class="token operator">=</span>l<span class="token punctuation">.</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> city<span class="token punctuation">;</span><span class="token comment">#案例2：查询有奖金的每个部门的部门名和部门的领导编号和该部门的最低工资</span><span class="token keyword">SELECT</span> department_name<span class="token punctuation">,</span>d<span class="token punctuation">.</span><span class="token punctuation">`</span>manager_id<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token keyword">FROM</span> departments d<span class="token punctuation">,</span>employees e<span class="token keyword">WHERE</span> d<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token operator">AND</span> commission_pct <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> department_name<span class="token punctuation">,</span>d<span class="token punctuation">.</span><span class="token punctuation">`</span>manager_id<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token comment">#6、可以加排序</span><span class="token comment">#案例：查询每个工种的工种名和员工的个数，并且按员工个数降序</span><span class="token keyword">SELECT</span> job_title<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token keyword">FROM</span> employees e<span class="token punctuation">,</span>jobs j<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span><span class="token punctuation">`</span>job_id<span class="token punctuation">`</span><span class="token operator">=</span>j<span class="token punctuation">.</span><span class="token punctuation">`</span>job_id<span class="token punctuation">`</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> job_title<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">DESC</span><span class="token punctuation">;</span><span class="token comment">#7、可以实现三表连接？</span><span class="token comment">#案例：查询员工名、部门名和所在的城市</span><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>department_name<span class="token punctuation">,</span>city<span class="token keyword">FROM</span> employees e<span class="token punctuation">,</span>departments d<span class="token punctuation">,</span>locations l<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token operator">=</span>d<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token operator">AND</span> d<span class="token punctuation">.</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span><span class="token operator">=</span>l<span class="token punctuation">.</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span><span class="token operator">AND</span> city <span class="token operator">LIKE</span> <span class="token string">'s%'</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> department_name <span class="token keyword">DESC</span><span class="token punctuation">;</span><span class="token comment">#二）非等值连接</span><span class="token comment">#案例1：查询员工的工资和工资级别</span><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span>grade_level<span class="token keyword">FROM</span> employees e<span class="token punctuation">,</span>job_grades g<span class="token keyword">WHERE</span> salary <span class="token operator">BETWEEN</span> g<span class="token punctuation">.</span><span class="token punctuation">`</span>lowest_sal<span class="token punctuation">`</span> <span class="token operator">AND</span> g<span class="token punctuation">.</span><span class="token punctuation">`</span>highest_sal<span class="token punctuation">`</span><span class="token operator">AND</span> g<span class="token punctuation">.</span><span class="token punctuation">`</span>grade_level<span class="token punctuation">`</span><span class="token operator">=</span><span class="token string">'A'</span><span class="token punctuation">;</span><span class="token comment">#三）自连接</span><span class="token comment">#案例：查询 员工名和上级的名称</span><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>employee_id<span class="token punctuation">,</span>e<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span>m<span class="token punctuation">.</span>employee_id<span class="token punctuation">,</span>m<span class="token punctuation">.</span>last_name<span class="token keyword">FROM</span> employees e<span class="token punctuation">,</span>employees m<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span><span class="token punctuation">`</span>manager_id<span class="token punctuation">`</span><span class="token operator">=</span>m<span class="token punctuation">.</span><span class="token punctuation">`</span>employee_id<span class="token punctuation">`</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-6-2-SQL-99标准"><a href="#5-6-2-SQL-99标准" class="headerlink" title="5.6.2 SQL 99标准"></a>5.6.2 SQL 99标准</h4><ul><li>语法：</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> 查询列表<span class="token keyword">FROM</span> 表名<span class="token number">1</span> 别名【连接类型】 <span class="token keyword">JOIN</span>  表名<span class="token number">2</span> 别名<span class="token keyword">ON</span> 连接条件<span class="token keyword">WHERE</span> 筛选条件<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> 分组列表<span class="token keyword">HAVING</span> 分组后筛选<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> 排序列表<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>连接类型：</li></ul><div class="post-note note-danger"><p>内连接：inner（可省略）</p><p>外连接 </p><p>左外：left 【outer】</p><p>右外：right 【outer】</p><p>全外：full 【outer】</p><p>交叉连接： cross</p></div><ul><li><p>SQL 92和SQL 99的区别：</p><p><code>SQL99，使用JOIN关键字代替了之前的逗号，并且将连接条件和筛选条件进行了分离，提高阅读性！！！</code></p></li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#------------------------SQL99语法----------------------</span><span class="token comment">#一、内连接</span><span class="token comment">/*分类：等值连接非等值连接自连接特点：①添加排序、分组筛选②inner可以省略③筛选条件放在where后面，连接条件放在on，提高分离性，便于阅读④inner join连接和sql92语法中的等值连接效果是一样的。都是查询多表的交集*/</span><span class="token comment">#一）等值连接</span><span class="token comment">#①简单连接</span><span class="token comment">#案例：查询员工名和部门名</span><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>department_name<span class="token keyword">FROM</span> departments d <span class="token keyword">JOIN</span> employees e <span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span>d<span class="token punctuation">.</span>department_id<span class="token punctuation">;</span><span class="token comment">#②添加筛选条件</span><span class="token comment">#案例1：查询部门编号>100的部门名和所在的城市名</span><span class="token keyword">SELECT</span> department_name<span class="token punctuation">,</span>city<span class="token keyword">FROM</span> departments d<span class="token keyword">JOIN</span> locations l<span class="token keyword">ON</span> d<span class="token punctuation">.</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span> <span class="token operator">=</span> l<span class="token punctuation">.</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span><span class="token keyword">WHERE</span> d<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token operator">></span><span class="token number">100</span><span class="token punctuation">;</span><span class="token comment">#③添加分组+筛选</span><span class="token comment">#案例1：查询每个城市的部门个数</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> 部门个数<span class="token punctuation">,</span>l<span class="token punctuation">.</span><span class="token punctuation">`</span>city<span class="token punctuation">`</span><span class="token keyword">FROM</span> departments d<span class="token keyword">JOIN</span> locations l<span class="token keyword">ON</span> d<span class="token punctuation">.</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span><span class="token operator">=</span>l<span class="token punctuation">.</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> l<span class="token punctuation">.</span><span class="token punctuation">`</span>city<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token comment">#④添加分组+筛选+排序</span><span class="token comment">#案例1：查询部门中员工个数>10的部门名，并按员工个数降序</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> 员工个数<span class="token punctuation">,</span>d<span class="token punctuation">.</span>department_name<span class="token keyword">FROM</span> employees e<span class="token keyword">JOIN</span> departments d<span class="token keyword">ON</span> e<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token operator">=</span>d<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> d<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token keyword">HAVING</span> 员工个数<span class="token operator">></span><span class="token number">10</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> 员工个数 <span class="token keyword">DESC</span><span class="token punctuation">;</span><span class="token comment">#二）非等值连接</span><span class="token comment">#案例：查询部门编号在10-90之间的员工的工资级别，并按级别进行分组</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> 个数<span class="token punctuation">,</span>grade<span class="token keyword">FROM</span> employees e<span class="token keyword">JOIN</span> sal_grade g<span class="token keyword">ON</span> e<span class="token punctuation">.</span><span class="token punctuation">`</span>salary<span class="token punctuation">`</span> <span class="token operator">BETWEEN</span> g<span class="token punctuation">.</span><span class="token punctuation">`</span>min_salary<span class="token punctuation">`</span> <span class="token operator">AND</span> g<span class="token punctuation">.</span><span class="token punctuation">`</span>max_salary<span class="token punctuation">`</span><span class="token keyword">WHERE</span> e<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span> <span class="token operator">BETWEEN</span> <span class="token number">10</span> <span class="token operator">AND</span> <span class="token number">90</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> g<span class="token punctuation">.</span>grade<span class="token punctuation">;</span><span class="token comment">#三）自连接</span><span class="token comment">#案例：查询员工名和对应的领导名</span><span class="token keyword">SELECT</span> e<span class="token punctuation">.</span><span class="token punctuation">`</span>last_name<span class="token punctuation">`</span><span class="token punctuation">,</span>m<span class="token punctuation">.</span><span class="token punctuation">`</span>last_name<span class="token punctuation">`</span><span class="token keyword">FROM</span> employees e<span class="token keyword">JOIN</span> employees m<span class="token keyword">ON</span> e<span class="token punctuation">.</span><span class="token punctuation">`</span>manager_id<span class="token punctuation">`</span><span class="token operator">=</span>m<span class="token punctuation">.</span><span class="token punctuation">`</span>employee_id<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token comment">#二、外连接</span><span class="token comment">/*应用场景：用于查询一个表中，另一个表中没有的记录特点：1、外连接的查询结果为主表的所有记录如果从表中有和它匹配的，则显示匹配的值如果从表中没有和它匹配的，则显示为null外连接查询结果=内连接结果+主表中有而从表没有的记录2、左外连接，left join左边的是主表   右外连接，right join右边的是主表3、左外和右外交换两个表的顺序，可以实现同样的效果4、全外连接=内连接的结果+表1中有但表2中没有的+表2中有的但表1中没有的 */</span><span class="token comment">#案例1、查询编号>3 的女神的男朋友信息，如果有则列出详细，如果没有，用 null 填充</span><span class="token keyword">SELECT</span> b<span class="token punctuation">.</span>id<span class="token punctuation">,</span>b<span class="token punctuation">.</span>name<span class="token punctuation">,</span>bo<span class="token punctuation">.</span><span class="token operator">*</span><span class="token keyword">FROM</span> beauty b<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> boys bo <span class="token keyword">ON</span> b<span class="token punctuation">.</span>boyfriend_id <span class="token operator">=</span> bo<span class="token punctuation">.</span>id<span class="token keyword">WHERE</span> b<span class="token punctuation">.</span>id<span class="token operator">></span><span class="token number">3</span><span class="token punctuation">;</span><span class="token comment">#案例2、查询哪个城市没有部门</span><span class="token keyword">SELECT</span> l<span class="token punctuation">.</span>city<span class="token keyword">FROM</span> departments d<span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> locations l <span class="token keyword">ON</span> l<span class="token punctuation">.</span>location_id <span class="token operator">=</span> d<span class="token punctuation">.</span>location_id<span class="token keyword">WHERE</span> d<span class="token punctuation">.</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span> <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;5-5-分组查询&quot;&gt;&lt;a href=&quot;#5-5-分组查询&quot; class=&quot;headerlink&quot; title=&quot;5.5 分组查询&quot;&gt;&lt;/a&gt;5.5 分组查询&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;语法：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers </summary>
      
    
    
    
    <category term="学习笔记" scheme="https://hxf233333.gitee.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="MySQL" scheme="https://hxf233333.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习笔记_day3</title>
    <link href="https://hxf233333.gitee.io/2021/02/26/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day3/"/>
    <id>https://hxf233333.gitee.io/2021/02/26/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day3/</id>
    <published>2021-02-26T11:42:30.000Z</published>
    <updated>2021-02-28T11:36:11.255Z</updated>
    
    <content type="html"><![CDATA[<h3 id="5-4-常见函数"><a href="#5-4-常见函数" class="headerlink" title="5.4 常见函数"></a>5.4 常见函数</h3><ul><li><p>概念：类似于c++的方法，将一组逻辑语句封装在方法体中，对外暴露方法名</p></li><li><p>好处：1.隐藏了实现细节 2.提高代码的重用性</p></li><li><p>调用：<code>select  函数名（实参列表） 【from表】</code>;</p></li><li><p>特点：</p><p>​    ①叫什么（函数名）</p><p>​    ②干什么（函数功能）</p></li><li><p>分类：</p><p>​    1、单行函数</p><p>​    如 <code>concat</code>、<code>length</code>、<code>ifnull</code>等    </p><p>​    2、分组函数</p><p>​    功能：做统计使用，又称为统计函数、聚合函数、组函数</p></li></ul><h4 id="5-4-1-单行函数"><a href="#5-4-1-单行函数" class="headerlink" title="5.4.1 单行函数"></a>5.4.1 单行函数</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#一、字符函数</span><span class="token comment">#1.length 获取参数值的字节个数</span><span class="token keyword">SELECT</span> LENGTH<span class="token punctuation">(</span><span class="token string">'john'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> LENGTH<span class="token punctuation">(</span><span class="token string">'张三丰hahaha'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">#utf8:汉字占3个字节</span><span class="token keyword">SHOW</span> VARIABLES <span class="token operator">LIKE</span> <span class="token string">'%char%'</span><span class="token punctuation">;</span><span class="token comment">#2.concat 拼接字符串</span><span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span>last_name<span class="token punctuation">,</span><span class="token string">'_'</span><span class="token punctuation">,</span>first_name<span class="token punctuation">)</span> 姓名 <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#3.upper、lower</span><span class="token keyword">SELECT</span> UPPER<span class="token punctuation">(</span><span class="token string">'john'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> LOWER<span class="token punctuation">(</span><span class="token string">'joHn'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#示例：将姓变大，名变小写，然后拼接</span><span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span>UPPER<span class="token punctuation">(</span>last_name<span class="token punctuation">)</span><span class="token punctuation">,</span>LOWER<span class="token punctuation">(</span>first_name<span class="token punctuation">)</span><span class="token punctuation">)</span> 姓名 <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#4.substr、substring</span><span class="token comment">/*注意：起始索引从1开始！！！substr(str,起始索引，截取的字符长度)substr(str,起始索引)*/</span><span class="token comment">#截取从指定索引处后面所有字符</span><span class="token keyword">SELECT</span> SUBSTR<span class="token punctuation">(</span><span class="token string">'张三丰爱上了郭襄'</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span> out_put<span class="token punctuation">;</span><span class="token comment">#截取从指定索引处指定字符串长度的字符</span><span class="token keyword">SELECT</span> SUBSTR<span class="token punctuation">(</span><span class="token string">'张三丰爱上了郭襄'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span> out_put<span class="token punctuation">;</span><span class="token comment">#案例：姓名中首字符大写，其他字符小写然后用_拼接，显示出来</span><span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span>UPPER<span class="token punctuation">(</span>SUBSTR<span class="token punctuation">(</span>last_name<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'_'</span><span class="token punctuation">,</span>LOWER<span class="token punctuation">(</span>SUBSTR<span class="token punctuation">(</span>last_name<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">AS</span> out_put<span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#5.instr 返回子串第一次出现的索引，如果找不到返回0</span><span class="token keyword">SELECT</span> INSTR<span class="token punctuation">(</span><span class="token string">'三打白骨精aaa白骨精bb白骨精'</span><span class="token punctuation">,</span><span class="token string">'白骨精'</span><span class="token punctuation">)</span> out_put<span class="token punctuation">;</span><span class="token comment">#6.trim 去前后指定的字符，默认是去空格</span><span class="token keyword">SELECT</span> TRIM<span class="token punctuation">(</span><span class="token string">' 虚  竹    '</span><span class="token punctuation">)</span>  <span class="token keyword">AS</span> a<span class="token punctuation">;</span><span class="token keyword">SELECT</span> TRIM<span class="token punctuation">(</span><span class="token string">'x'</span> <span class="token keyword">FROM</span> <span class="token string">'xxxxxx虚xxx竹xxxxxxxxxxxxxxxxxx'</span><span class="token punctuation">)</span>  <span class="token keyword">AS</span> a<span class="token punctuation">;</span><span class="token comment">#7.lpad/rpad 左填充/右填充</span><span class="token keyword">SELECT</span> LPAD<span class="token punctuation">(</span><span class="token string">'木婉清'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">#左填充10个a</span><span class="token keyword">SELECT</span> RPAD<span class="token punctuation">(</span><span class="token string">'木婉清'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">#右填充10个a</span><span class="token comment">#8.replace(字符,被替换字符,替换字符) 替换</span><span class="token comment">#二、数学函数</span><span class="token comment">#1.abs 绝对值</span><span class="token keyword">SELECT</span> ABS<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2.4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#2.ceil 向上取整  返回>=该参数的最小整数</span><span class="token keyword">SELECT</span> CEIL<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.09</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> CEIL<span class="token punctuation">(</span><span class="token number">0.09</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> CEIL<span class="token punctuation">(</span><span class="token number">1.00</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#3.floor 向下取整，返回&lt;=该参数的最大整数</span><span class="token keyword">SELECT</span> FLOOR<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.09</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> FLOOR<span class="token punctuation">(</span><span class="token number">0.09</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> FLOOR<span class="token punctuation">(</span><span class="token number">1.00</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#4.round 四舍五入</span><span class="token keyword">SELECT</span> <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token number">1.8712345</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token number">1.8712345</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#5.truncate 截断</span><span class="token keyword">SELECT</span> <span class="token keyword">TRUNCATE</span><span class="token punctuation">(</span><span class="token number">1.8712345</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#6.mod 取模</span><span class="token keyword">SELECT</span> <span class="token function">MOD</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#a%b = a-(INT)a/b*b</span><span class="token comment">#-10%3 = -10 - (-10)/3*3   = -1</span><span class="token comment">#三、日期函数</span><span class="token comment">#1.now 返回当前系统日期+时间</span><span class="token keyword">SELECT</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#2.curdate 返回当前系统日期，不包含时间</span><span class="token keyword">SELECT</span> CURDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#3.curtime 返回当前时间，不包含日期</span><span class="token keyword">SELECT</span> CURTIME<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#4.可以获取指定的部分，年、月、日、时、分、秒</span><span class="token keyword">SELECT</span> <span class="token keyword">YEAR</span><span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 年；<span class="token keyword">SELECT</span> <span class="token keyword">YEAR</span><span class="token punctuation">(</span>hiredate<span class="token punctuation">)</span> 年 <span class="token keyword">FROM</span> employees；<span class="token comment">#5.str_to_date 按指定格式解析字符串为日期类型</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> hiredate<span class="token operator">&lt;</span>STR_TO_DATE<span class="token punctuation">(</span><span class="token string">'3/15 1998'</span><span class="token punctuation">,</span><span class="token string">'%m/%d %Y'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#6.date_format 将日期转换成字符</span><span class="token keyword">SELECT</span> DATE_FORMAT<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'%Y年%m月%d日'</span><span class="token punctuation">)</span> 日期<span class="token punctuation">;</span><span class="token comment">#四、其他函数</span><span class="token keyword">SELECT</span> VERSION<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token keyword">USER</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#五、流程控制函数</span><span class="token comment">#1.if函数</span><span class="token keyword">SELECT</span> <span class="token keyword">IF</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token operator">></span><span class="token number">9</span><span class="token punctuation">,</span><span class="token string">'好'</span><span class="token punctuation">,</span><span class="token string">'坏'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#案例：如果有奖金，则显示最终奖金，如果没有，则显示0</span><span class="token keyword">SELECT</span> <span class="token keyword">IF</span><span class="token punctuation">(</span>commission_pct <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>salary<span class="token operator">*</span><span class="token number">12</span><span class="token operator">*</span>commission_pct<span class="token punctuation">)</span> 奖金<span class="token punctuation">,</span>commission_pct<span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#2.case函数</span>①情况<span class="token number">1</span> ：类似于switch语句，可以实现等值判断<span class="token keyword">CASE</span> 表达式<span class="token keyword">WHEN</span> 值<span class="token number">1</span> <span class="token keyword">THEN</span> 结果<span class="token number">1</span><span class="token keyword">WHEN</span> 值<span class="token number">2</span> <span class="token keyword">THEN</span> 结果<span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">ELSE</span> 结果n<span class="token keyword">END</span>案例：部门编号是<span class="token number">30</span>，工资显示为<span class="token number">2</span>倍部门编号是<span class="token number">50</span>，工资显示为<span class="token number">3</span>倍部门编号是<span class="token number">60</span>，工资显示为<span class="token number">4</span>倍否则不变显示 部门编号，旧工资，新工资<span class="token keyword">SELECT</span> department_id<span class="token punctuation">,</span>salary<span class="token punctuation">,</span><span class="token keyword">CASE</span> department_id<span class="token keyword">WHEN</span> <span class="token number">30</span> <span class="token keyword">THEN</span> salary<span class="token operator">*</span><span class="token number">2</span><span class="token keyword">WHEN</span> <span class="token number">50</span> <span class="token keyword">THEN</span> salary<span class="token operator">*</span><span class="token number">3</span><span class="token keyword">WHEN</span> <span class="token number">60</span> <span class="token keyword">THEN</span> salary<span class="token operator">*</span><span class="token number">4</span><span class="token keyword">ELSE</span> salary<span class="token keyword">END</span>  newSalary<span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>②情况<span class="token number">2</span>：类似于多重<span class="token keyword">IF</span>语句，实现区间判断<span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> 条件<span class="token number">1</span> <span class="token keyword">THEN</span> 结果<span class="token number">1</span><span class="token keyword">WHEN</span> 条件<span class="token number">2</span> <span class="token keyword">THEN</span> 结果<span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">ELSE</span> 结果n<span class="token keyword">END</span>案例：如果工资<span class="token operator">></span><span class="token number">20000</span><span class="token punctuation">,</span>显示级别A      工资<span class="token operator">></span><span class="token number">15000</span><span class="token punctuation">,</span>显示级别B      工资<span class="token operator">></span><span class="token number">10000</span><span class="token punctuation">,</span>显示级别C      否则，显示D       <span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> <span class="token keyword">CASE</span>  <span class="token keyword">WHEN</span> salary<span class="token operator">></span><span class="token number">20000</span> <span class="token keyword">THEN</span> <span class="token string">'A'</span> <span class="token keyword">WHEN</span> salary<span class="token operator">></span><span class="token number">15000</span> <span class="token keyword">THEN</span> <span class="token string">'B'</span> <span class="token keyword">WHEN</span> salary<span class="token operator">></span><span class="token number">10000</span> <span class="token keyword">THEN</span> <span class="token string">'C'</span> <span class="token keyword">ELSE</span> <span class="token string">'D'</span> <span class="token keyword">END</span> <span class="token keyword">AS</span>  a <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-4-2-分组函数"><a href="#5-4-2-分组函数" class="headerlink" title="5.4.2 分组函数"></a>5.4.2 分组函数</h4><ul><li><p>说明：分组函数往往用于实现将一组数据进行统计计算，最终得到一个值，又称为聚合函数或统计函数</p></li><li><p>分组函数清单：</p><p>​    <code>sum</code>(字段名)：求和</p><p>​    <code>avg</code>(字段名)：求平均数</p><p>​    <code>max</code>(字段名)：求最大值</p><p>​    <code>min</code>(字段名)：求最小值</p><p>​    <code>count</code>(字段名)：计算非空字段值的个数</p></li><li><p>特点：</p><p>​    1、<code>sum</code>、<code>avg</code>一般用于处理数值型，<code>max</code>、<code>min</code>、<code>count</code>可以处理任何类型</p><p>​    2、以为分组函数都忽略null值</p><p>​    3、可以和<code>distinct</code>搭配实现去重的运算</p><p>​    4、一般使用<code>count(*)</code>用作统计函数</p><p>​    5、和分组函数一同查询的字段要求是<code>group by</code>后的字段    </p></li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#案例1 ：查询员工信息表中，所有员工的工资和、工资平均值、最低工资、最高工资、有工资的个数</span><span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#案例2：添加筛选条件</span><span class="token comment">#①查询emp表中记录数：</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>employee_id<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#②查询emp表中有佣金的人数：</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#③查询emp表中月薪大于2500的人数：</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> salary<span class="token operator">></span><span class="token number">2500</span><span class="token punctuation">;</span><span class="token comment">#④查询有领导的人数：</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>manager_id<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#count的补充介绍★ </span><span class="token comment">#1、统计结果集的行数，推荐使用count(*)</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> department_id <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> department_id <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span><span class="token comment">#2、搭配distinct实现去重的统计</span><span class="token comment">#案例：查询有员工的部门个数</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token keyword">DISTINCT</span> department_id<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#思考：每个部门的总工资、平均工资？</span><span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span>  <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> department_id <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span>  <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> department_id <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token punctuation">,</span>department_id<span class="token keyword">FROM</span> employees<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> department_id<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;5-4-常见函数&quot;&gt;&lt;a href=&quot;#5-4-常见函数&quot; class=&quot;headerlink&quot; title=&quot;5.4 常见函数&quot;&gt;&lt;/a&gt;5.4 常见函数&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;概念：类似于c++的方法，将一组逻辑语句封装在方法体中，对外暴露方法名&lt;/</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://hxf233333.gitee.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="MySQL" scheme="https://hxf233333.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习笔记_day2</title>
    <link href="https://hxf233333.gitee.io/2021/02/25/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day2/"/>
    <id>https://hxf233333.gitee.io/2021/02/25/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day2/</id>
    <published>2021-02-25T08:58:41.000Z</published>
    <updated>2021-02-25T09:01:14.873Z</updated>
    
    <content type="html"><![CDATA[<h3 id="5-2-条件查询"><a href="#5-2-条件查询" class="headerlink" title="5.2 条件查询"></a>5.2 条件查询</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#进阶2：条件查询</span><span class="token comment">/* 语法：select 查询列表from表名where筛选条件分类：一、按条件表达式筛选条件运算符：> &lt; = != &lt;> >= &lt;=二、按逻辑表达式筛选逻辑运算符：&amp;&amp; || ！and or not三、模糊查询likebetween andinis null|is not null*/</span><span class="token comment">#一、按条件表达式筛选</span><span class="token comment">#案例1：查询工资>12000的员工信息</span><span class="token keyword">SELECT</span><span class="token operator">*</span><span class="token keyword">FROM</span>employees<span class="token keyword">WHERE</span>salary<span class="token operator">></span><span class="token number">12000</span><span class="token punctuation">;</span><span class="token comment">#案列2：查询部门编号不等于90号的员工名和部门编号</span><span class="token keyword">SELECT</span>last_name<span class="token punctuation">,</span>department_id<span class="token punctuation">,</span><span class="token keyword">FROM</span>employees<span class="token keyword">WHERE</span>department_id<span class="token operator">&lt;></span><span class="token number">90</span><span class="token punctuation">;</span><span class="token comment">#二、按逻辑表达式筛选</span><span class="token comment">#案例1：查询工资在10000到20000之间的员工名、工资以及奖金</span><span class="token keyword">SELECT</span>last_name<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>commission_pct<span class="token keyword">FROM</span>employees<span class="token keyword">WHERE</span>salary<span class="token operator">>=</span><span class="token number">10000</span> <span class="token operator">AND</span> salary<span class="token operator">&lt;=</span><span class="token number">20000</span><span class="token punctuation">;</span><span class="token comment">#案例2：查询部门编号不是在90到110之间，或者工资高于15000的员工信息</span><span class="token keyword">SELECT</span><span class="token operator">*</span><span class="token keyword">FROM</span>employees<span class="token keyword">WHERE</span><span class="token operator">NOT</span><span class="token punctuation">(</span>department_id<span class="token operator">&lt;</span><span class="token number">90</span> <span class="token operator">AND</span> department_id<span class="token operator">></span><span class="token number">110</span><span class="token punctuation">)</span> <span class="token operator">OR</span> salary<span class="token operator">></span><span class="token number">15000</span><span class="token punctuation">;</span><span class="token comment">#三、模糊查询</span><span class="token comment">/* likebetween andinis null|is not null*/</span><span class="token comment">#1.like</span><span class="token comment">/*特点：①一般和通配符搭配使用通配符：% 任意多个字符，包含0个字符_ 任意单个字符*/</span><span class="token comment">#案例1：查询员工中包含字符a的员工信息</span><span class="token keyword">SELECT</span><span class="token operator">*</span><span class="token keyword">FROM</span>employees<span class="token keyword">WHERE</span>last_name <span class="token operator">LIKE</span> <span class="token string">'%a%'</span><span class="token punctuation">;</span>  <span class="token comment">#abc</span><span class="token comment">#案例2：查询员工名中第三个字符为n，第五个字符为l的员工名和工资</span><span class="token keyword">SELECT</span>last_name<span class="token punctuation">,</span>salary<span class="token keyword">FROM</span>employees<span class="token keyword">WHERE</span>last_name <span class="token operator">LIKE</span> <span class="token string">'__n_l%'</span><span class="token punctuation">;</span><span class="token comment">#案例3：查询姓名中包含第二个字符为_的员工信息</span><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> last_name <span class="token operator">LIKE</span> <span class="token string">'_\_%'</span><span class="token punctuation">;</span> <span class="token comment">#转义\</span><span class="token comment">#--------------------------------------------</span><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> last_name <span class="token operator">LIKE</span> <span class="token string">'_$_%'</span> <span class="token keyword">ESCAPE</span> <span class="token string">'$'</span><span class="token punctuation">;</span> <span class="token comment">#自定义转义escape</span><span class="token comment">#2.between and/not between and</span><span class="token comment">/*①使用between and 可以提高语句的②包含临界值，不要调换顺序*/</span><span class="token comment">#案例：查询员工编号在100到120之间的员工信息</span><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span>employees<span class="token keyword">WHERE</span> employees_id <span class="token operator">BETWEEN</span> <span class="token number">100</span> <span class="token operator">AND</span> <span class="token number">120</span><span class="token punctuation">;</span><span class="token comment">#3.in</span><span class="token comment">/*功能：查询某字段的值是否属于指定的列表之内特点：①使用in提高语句简洁度②in列表的值类型必须统一*/</span><span class="token comment">#案例1：查询部门编号是30/50/90的员工名、部门编号</span><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>department_id<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> department_id <span class="token operator">IN</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#-----------------------------------</span><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>department_id<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> department_id<span class="token operator">=</span><span class="token number">30</span> <span class="token operator">OR</span> department_id<span class="token operator">=</span><span class="token number">50</span> <span class="token operator">OR</span> department_id<span class="token operator">=</span><span class="token number">90</span><span class="token punctuation">;</span><span class="token comment">#案例2：查询工种编号不是SH_CLERK或IT_PROG的员工信息</span><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> job_id <span class="token operator">NOT</span> <span class="token operator">IN</span><span class="token punctuation">(</span><span class="token string">'SH_CLERK'</span><span class="token punctuation">,</span><span class="token string">'IT_PROG'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#--------------------------------------</span><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> <span class="token operator">NOT</span><span class="token punctuation">(</span>job_id <span class="token operator">=</span><span class="token string">'SH_CLERK'</span> <span class="token operator">OR</span> job_id <span class="token operator">=</span> <span class="token string">'IT_PROG'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#4、is null/is not null</span><span class="token comment">#案例1：查询没有奖金的员工信息</span><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> commission_pct <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span><span class="token comment">#案例2：查询有奖金的员工信息</span><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> commission_pct <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span><span class="token comment">#----------------对比------------------------------------</span><span class="token operator">=</span>只能判断普通的内容<span class="token operator">IS</span>  <span class="token boolean">NULL</span>        只能判断<span class="token boolean">NULL</span>值<span class="token operator">&lt;=></span>             安全等于，既能判断普通内容，又能判断<span class="token boolean">NULL</span>值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-3-排序查询"><a href="#5-3-排序查询" class="headerlink" title="5. 3 排序查询"></a>5. 3 排序查询</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#进阶3：排序查询</span><span class="token comment">/*语法：select 查询列表from 表名【where 筛选条件】order by 排序列表【asc|desc】执行顺序：①from 子句②where 子句③select 子句④order by 子句特点：1、asc代表的升序，desc代表的是降序，如果不写默认升序2、order by子句中可以支持单个字段、多个字段、表达式、函数、别名3、order by子句一般是放在查询语句的最后面，limit子句除外*/</span><span class="token comment">#案例1：查询员工信息，要求工资冲高到底排序</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> salary <span class="token keyword">DESC</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> salary<span class="token punctuation">;</span><span class="token comment">#案例2：查询部门编号>=90的员工信息，按入职时间的先后进行排序【添加筛选条件】</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> department_id<span class="token operator">>=</span><span class="token number">90</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> hiredate <span class="token keyword">ASC</span><span class="token punctuation">;</span><span class="token comment">#案例3：按年薪的高低显示员工的信息和年薪【按表达式排序】</span><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token punctuation">,</span>salary<span class="token operator">*</span><span class="token number">12</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>IFNULL<span class="token punctuation">(</span>commission_pct<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 年薪<span class="token keyword">FROM</span> employees<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> salary<span class="token operator">*</span><span class="token number">12</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>IFNULL<span class="token punctuation">(</span>commission_pct<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">DESC</span><span class="token punctuation">;</span><span class="token comment">#案例4：按年薪的高低显示员工的信息和年薪【按别名排序】</span><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token punctuation">,</span>salary<span class="token operator">*</span><span class="token number">12</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>IFNULL<span class="token punctuation">(</span>commission_pct<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 年薪<span class="token keyword">FROM</span> employees<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> 年薪 <span class="token keyword">DESC</span><span class="token punctuation">;</span><span class="token comment">#案例5：按姓名的长度显示员工的姓名和工资【按函数】</span><span class="token keyword">SELECT</span> LENGTH<span class="token punctuation">(</span>last_name<span class="token punctuation">)</span> 字节长度<span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>salary<span class="token keyword">FROM</span> employees<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> LENGTH<span class="token punctuation">(</span>last_name<span class="token punctuation">)</span> <span class="token keyword">DESC</span><span class="token punctuation">;</span><span class="token comment">#案例6：查询员工信息，要求先按工资升序，再按员工编号降序【按多个字段排序】</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> salary <span class="token keyword">ASC</span><span class="token punctuation">,</span>employees_id <span class="token keyword">DESC</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;5-2-条件查询&quot;&gt;&lt;a href=&quot;#5-2-条件查询&quot; class=&quot;headerlink&quot; title=&quot;5.2 条件查询&quot;&gt;&lt;/a&gt;5.2 条件查询&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-sql&quot; data-langu</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://hxf233333.gitee.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="MySQL" scheme="https://hxf233333.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习笔记_day1</title>
    <link href="https://hxf233333.gitee.io/2021/02/24/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day1/"/>
    <id>https://hxf233333.gitee.io/2021/02/24/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_day1/</id>
    <published>2021-02-24T10:06:32.000Z</published>
    <updated>2021-02-28T11:03:55.617Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-数据库的好处"><a href="#1-数据库的好处" class="headerlink" title="1 数据库的好处"></a>1 数据库的好处</h2><div class="post-note note-warning"><p>1、持久化数据到本地<br>2、可以实现结构化查询，方便管理</p></div><h2 id="2-数据库相关概念"><a href="#2-数据库相关概念" class="headerlink" title="2 数据库相关概念"></a>2 数据库相关概念</h2><div class="post-note note-warning"><p>1、DB：数据库，保存一组有组织的数据容器<br>2、DBMS：数据库管理系统，又称为数据库软件（产品），用于管理DB中的数据<br>3、SQL：结构化查询语言，用于和DBMS通信的语言</p></div><h2 id="3-数据库存储数据的特点"><a href="#3-数据库存储数据的特点" class="headerlink" title="3 数据库存储数据的特点"></a>3 数据库存储数据的特点</h2><div class="post-note note-warning"><p>1、将数据放到表中，表再放到库中<br>2、一个数据库中可以有多个表，每个表都有一个名字，用来标识自己，表名具有唯一性<br>3、表具有一些，这些特性定义了数据在表中如何存储，类似“类”的设计<br>4、表由列组成，我们也称为字段，所有表都是由一个或者多个列组成的，每一列类似于“类”中的属性</p></div><h2 id="4-MySQL的安装和介绍"><a href="#4-MySQL的安装和介绍" class="headerlink" title="4 MySQL的安装和介绍"></a>4 MySQL的安装和介绍</h2><h3 id="4-1-MySQL的安装"><a href="#4-1-MySQL的安装" class="headerlink" title="4.1 MySQL的安装"></a>4.1 MySQL的安装</h3><p>原文安装教程：<a href="https://hxf233333.github.io/2021/02/21/%E5%AE%89%E8%A3%85MySQL/">安装MySQL</a></p><h3 id="4-2-MySQL服务的启动和停止"><a href="#4-2-MySQL服务的启动和停止" class="headerlink" title="4.2 MySQL服务的启动和停止"></a>4.2 MySQL服务的启动和停止</h3><div class="post-note note-warning"><p>方式一：计算机-&gt;右击管理-&gt;服务<br>方式二：通过管理员身份运行<br>        <code>net start mysql</code> （启动mysql服务）<br>        <code>net stop mysql</code>（停止mysql服务）</p></div><h3 id="4-3-MySQL服务的登录和退出"><a href="#4-3-MySQL服务的登录和退出" class="headerlink" title="4.3 MySQL服务的登录和退出"></a>4.3 MySQL服务的登录和退出</h3><div class="post-note note-warning"><p>方式一：通过mysql自带的客户端（只限于root用户）</p><p>方式二：通过windows自带的DOS命令<br>        登录：<code>mysql 【-h主机名 -P端口号】 -u用户名 -p密码</code><br>        退出：<code>exit; 或 Ctrl + C</code></p></div><h3 id="4-4-MySQL的常见命令"><a href="#4-4-MySQL的常见命令" class="headerlink" title="4.4 MySQL的常见命令"></a>4.4 MySQL的常见命令</h3><div class="post-note note-warning"><p>1、查看当前所有的数据库</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">show</span> <span class="token keyword">databases</span>；<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2、打开指定的库</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">use</span> 库名；<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3、查看当前库的所有表</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">show</span> <span class="token keyword">tables</span>；<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4、查看其他库的所有表</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">show</span> <span class="token keyword">tables</span> <span class="token keyword">from</span> 库名；<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>5、创建表</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> 表名<span class="token punctuation">(</span>列名 列类型，列名 列类型<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>6、查看表结构</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">desc</span> 表名；<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>7、查看服务器的版本<br>方式一：登录到mysql服务端</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> version<span class="token punctuation">(</span><span class="token punctuation">)</span>；<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>方式二：没有登录到mysql服务端<br><code>mysql  --version 或者 mysql --V</code></p></div><h3 id="4-5-MySQL的语法规范"><a href="#4-5-MySQL的语法规范" class="headerlink" title="4.5 MySQL的语法规范"></a>4.5 MySQL的语法规范</h3><div class="post-note note-warning"><p>1、不区分大小写，但建议关键字大写，表名、列名小写<br>2、每条命令最好用分号结尾<br>3、每条命令根据需要，可以进行缩进或者换行<br>4、注释<br>    单行注释：#注释文字<br>    单行注释：– 注释文字<br>    多行注释：/*  注释文字   */</p></div><h2 id="5-DQL语言"><a href="#5-DQL语言" class="headerlink" title="5 DQL语言"></a>5 DQL语言</h2><p>DQL:Data Query Language  数据查询语言</p><h3 id="5-1-基础查询"><a href="#5-1-基础查询" class="headerlink" title="5.1 基础查询"></a>5.1 基础查询</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#进阶1:基础查询</span><span class="token comment">/*语法：select 查询列表 from 表名；特点：1、查询列表可以是：表中的字段、常量值、表达式、函数2、查询的结果是一个虚拟的表格*/</span><span class="token comment">#选择使用的库</span><span class="token keyword">USE</span> myemployees<span class="token punctuation">;</span><span class="token comment">#1.查询表中的单个字段</span><span class="token keyword">SELECT</span> last_name <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#2.查询表中的多个字段</span><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>email <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#3.查询表中的所有字段</span><span class="token keyword">SELECT</span> <span class="token punctuation">`</span>employee_id<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>first_name<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>last_name<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>email<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>phone_number<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>job_id<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>salary<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>commission_pct<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>manager_id<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>hiredate<span class="token punctuation">`</span><span class="token keyword">FROM</span>employees<span class="token punctuation">;</span> <span class="token comment">#方式一，依次枚举，''为着重号用于区分关键字</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span> <span class="token comment">#方式二，使用通配符</span><span class="token comment">#4.查询常量值</span><span class="token keyword">SELECT</span> <span class="token number">100</span>；<span class="token keyword">SELECT</span> <span class="token string">'john'</span><span class="token punctuation">;</span><span class="token comment">#5.查询表达式</span><span class="token keyword">SELECT</span> <span class="token number">100</span><span class="token operator">%</span><span class="token number">98</span><span class="token punctuation">;</span><span class="token comment">#6.查询函数</span><span class="token keyword">SELECT</span> VERSION<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#7.起别名</span><span class="token comment">/*①便于理解②如果要查询的字段有重名的情况，使用别名区分*/</span><span class="token comment">#方式一：使用AS</span><span class="token keyword">SELECT</span> last_name <span class="token keyword">AS</span> 姓<span class="token punctuation">,</span>first_name <span class="token keyword">AS</span> 名 <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#方式二：使用空格</span><span class="token keyword">SELECT</span> last_name 姓<span class="token punctuation">,</span>first_name 名 <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#案例：查询salary，显示结果为out put</span><span class="token keyword">SELECT</span> salary <span class="token keyword">AS</span> <span class="token string">"out put"</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#8.去重</span><span class="token comment">#案例 ：查询员工表中涉及到的所有部门编号</span><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> department_id <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">#9.+号的作用</span><span class="token comment">/* mysql中的+号只有运算符的功能select 100+100; 两个操作数都为整型，则做加法运算select '123'+90; 只要其中一方为字符型，试图将字符型数值转换成数值型  如果转转成功，则继续做加法运算select 'john'+90; 如果转换失败，则将字符型数值转换成0select null+10；  只要其中一方为null，则结果肯定为null*/</span><span class="token comment">#案例：查询员工名和姓连接成一个字段，并显示为 姓名</span><span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> 结果<span class="token punctuation">;</span><span class="token keyword">SELECT</span>CONCAT<span class="token punctuation">(</span>last_name<span class="token punctuation">,</span><span class="token string">' '</span><span class="token punctuation">,</span>first_name<span class="token punctuation">)</span> <span class="token keyword">AS</span> 姓名<span class="token keyword">FROM</span>employees<span class="token punctuation">;</span><span class="token comment">#10.补充函数</span><span class="token keyword">SElECT</span> IFNULL<span class="token punctuation">(</span>字段名<span class="token punctuation">,</span>表达式<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-数据库的好处&quot;&gt;&lt;a href=&quot;#1-数据库的好处&quot; class=&quot;headerlink&quot; title=&quot;1 数据库的好处&quot;&gt;&lt;/a&gt;1 数据库的好处&lt;/h2&gt;&lt;div class=&quot;post-note note-warning&quot;&gt;&lt;p&gt;1、持久化数据到本地</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://hxf233333.gitee.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="MySQL" scheme="https://hxf233333.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>安装MySQL</title>
    <link href="https://hxf233333.gitee.io/2021/02/21/%E5%AE%89%E8%A3%85MySQL/"/>
    <id>https://hxf233333.gitee.io/2021/02/21/%E5%AE%89%E8%A3%85MySQL/</id>
    <published>2021-02-21T13:56:42.000Z</published>
    <updated>2021-04-13T13:05:54.758Z</updated>
    
    <content type="html"><![CDATA[<h1 id="windows安装MySQL"><a href="#windows安装MySQL" class="headerlink" title="windows安装MySQL"></a>windows安装MySQL</h1><p>安装MySQL普遍采用解压缩包的方式，然后通过命令和配置来安装，这里我在window 10上安装并配置MySQL 5.6。</p><h2 id="1-下载MySQL压缩包"><a href="#1-下载MySQL压缩包" class="headerlink" title="1.下载MySQL压缩包"></a>1.下载MySQL压缩包</h2><p>所有平台的 MySQL 下载地址为：<a href="https://downloads.mysql.com/archives/community/">MySQL 下载</a> 。 挑选你需要的 <code>MySQL Community Server</code> 版本及对应的平台。这里我选择<code>mysql-5.6.26-winx64</code>。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="mysql%E5%AE%89%E8%A3%85%E5%8C%85%E4%B8%8B%E8%BD%BD.png" class="lozad post-image"src="mysql%E5%AE%89%E8%A3%85%E5%8C%85%E4%B8%8B%E8%BD%BD.png"></p><h2 id="2-解压并添加环境变量"><a href="#2-解压并添加环境变量" class="headerlink" title="2.解压并添加环境变量"></a>2.解压并添加环境变量</h2><p>解压下载的压缩包，然后把解压后的文件夹迁到想要安装的目录，如：C:\web 下面，可以重命名为 mysql-5.6.26;</p><p>然后右击 此电脑 -&gt;属性-&gt;高级系统设置-&gt;环境变量，在系统变量里选择PATH，在其后面添加: mysql bin文件夹的路径。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="%E6%B7%BB%E5%8A%A0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png" class="lozad post-image"src="%E6%B7%BB%E5%8A%A0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png"></p><h2 id="3-创建my-ini配置文件"><a href="#3-创建my-ini配置文件" class="headerlink" title="3.创建my.ini配置文件"></a>3.创建my.ini配置文件</h2><p>在C:\web\mysql-5.6.26路径下创建名为my.ini的配置文件，然后编辑该文件修改或添加配置；配置修改说明如下：</p><pre class="line-numbers language-ini" data-language="ini"><code class="language-ini"><span class="token selector">[client]</span><span class="token comment"># 设置mysql客户端默认字符集</span><span class="token constant">default-character-set</span><span class="token attr-value"><span class="token punctuation">=</span>utf8</span> <span class="token selector">[mysqld]</span><span class="token constant">explicit_defaults_for_timestamp</span> <span class="token attr-value"><span class="token punctuation">=</span> true</span><span class="token comment"># 设置3306端口</span><span class="token constant">port</span> <span class="token attr-value"><span class="token punctuation">=</span> 3306</span><span class="token comment"># 设置mysql的安装目录</span><span class="token constant">basedir</span><span class="token attr-value"><span class="token punctuation">=</span>C:\web\mysql-5.6.26</span><span class="token comment"># 设置 mysql数据库的数据的存放目录，MySQL 8+ 不需要以下配置，系统自己生成即可，否则有可能报错</span><span class="token constant">datadir</span><span class="token attr-value"><span class="token punctuation">=</span>C:\web\mysql-5.6.26\data</span><span class="token comment"># 允许最大连接数</span><span class="token constant">max_connections</span><span class="token attr-value"><span class="token punctuation">=</span>20</span><span class="token comment"># 服务端使用的字符集默认为8比特编码的latin1字符集</span><span class="token constant">character-set-server</span><span class="token attr-value"><span class="token punctuation">=</span>utf8</span><span class="token comment"># 创建新表时将使用的默认存储引擎</span><span class="token constant">default-storage-engine</span><span class="token attr-value"><span class="token punctuation">=</span>INNODB</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-安装MySQL"><a href="#4-安装MySQL" class="headerlink" title="4.安装MySQL"></a>4.安装MySQL</h2><p>前面的工作做好后，就可以开始命令行安装了。</p><p>首先以管理员身份运行cmd，通过命令<code>cd c:\web\mysql-5.6.26\bin</code>，进入bin目录；</p><p>然后输入命令<code>mysqld --initialize-insecure --user=mysql</code>初始化；</p><p>最后输入 <code>mysqld instal</code>l 回车开始安装。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="%E5%AE%89%E8%A3%85%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1.png" class="lozad post-image"src="%E5%AE%89%E8%A3%85%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1.png"></p><p>输入 <code>net start mysql</code> 回车，启动mysql服务，</p><p>输入 <code>net stop mysql</code> 回车，停止mysql服务。</p><h2 id="5-本地连接数据库"><a href="#5-本地连接数据库" class="headerlink" title="5.本地连接数据库"></a>5.本地连接数据库</h2><p>在cmd输入 <code>mysql -u root -p</code> ，回车，出现 Enter password:，由于刚安装，没有设置密码，直接回车 Enter 进入；输入 <code>show databases;</code> 命令查看默认安装数据库。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="%E6%9C%AC%E5%9C%B0%E8%BF%9E%E6%8E%A5.png" class="lozad post-image"src="%E6%9C%AC%E5%9C%B0%E8%BF%9E%E6%8E%A5.png"></p><h2 id="6-设置root密码"><a href="#6-设置root密码" class="headerlink" title="6.设置root密码"></a>6.设置root密码</h2><p>依次通过以下命令修改root用户名密码：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">mysql<span class="token operator">></span><span class="token keyword">use</span> mysql<span class="token punctuation">;</span> mysql<span class="token operator">></span><span class="token keyword">update</span> <span class="token keyword">user</span> <span class="token keyword">set</span> password<span class="token operator">=</span>password<span class="token punctuation">(</span><span class="token string">'your password'</span><span class="token punctuation">)</span> <span class="token keyword">where</span> <span class="token keyword">user</span><span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">;</span> mysql<span class="token operator">></span>flush <span class="token keyword">privileges</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>输入 <code>quit</code> 命令退出当前登录，用新的密码重新连接 mysql。</p><h2 id="7-远程连接数据库"><a href="#7-远程连接数据库" class="headerlink" title="7.远程连接数据库"></a>7.远程连接数据库</h2><p>MySQL默认只能本机登录，如果本机使用，就可以不用设置远程登录，使用 localhost 做为主机地址登录；如果想远程登录，通过以下命令，设置允许远程登录：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">mysql<span class="token operator">></span><span class="token keyword">GRANT</span> <span class="token keyword">ALL</span> <span class="token keyword">PRIVILEGES</span> <span class="token keyword">ON</span> <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">TO</span> <span class="token string">'your username'</span><span class="token variable">@'%'</span> IDENTIFIED <span class="token keyword">BY</span> <span class="token string">'your password'</span> <span class="token keyword">WITH</span> <span class="token keyword">GRANT</span> <span class="token keyword">OPTION</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>your username 和 your password 改成 MySQL数据库的用户和密码</p></blockquote><p><code>MySQL 默认3306，确保 3306 端口是可用的，在要远程的电脑上安装一个 MySQL管理工具（如sqlyog），通过 Windows 系统的IP、端口， MySQL的用户名、密码远程连接数据库，管理数据库。</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;windows安装MySQL&quot;&gt;&lt;a href=&quot;#windows安装MySQL&quot; class=&quot;headerlink&quot; title=&quot;windows安装MySQL&quot;&gt;&lt;/a&gt;windows安装MySQL&lt;/h1&gt;&lt;p&gt;安装MySQL普遍采用解压缩包的方式，然后通</summary>
      
    
    
    
    <category term="教程" scheme="https://hxf233333.gitee.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="MySQL" scheme="https://hxf233333.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>linux基本知识图</title>
    <link href="https://hxf233333.gitee.io/2020/12/26/linux%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E5%9B%BE/"/>
    <id>https://hxf233333.gitee.io/2020/12/26/linux%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E5%9B%BE/</id>
    <published>2020-12-26T13:49:51.000Z</published>
    <updated>2021-04-13T13:08:55.918Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux基本知识图谱"><a href="#Linux基本知识图谱" class="headerlink" title="Linux基本知识图谱"></a>Linux基本知识图谱</h1><a id="more"></a><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="Linux-base.png" class="lozad post-image"src="Linux-base.png">]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Linux基本知识图谱&quot;&gt;&lt;a href=&quot;#Linux基本知识图谱&quot; class=&quot;headerlink&quot; title=&quot;Linux基本知识图谱&quot;&gt;&lt;/a&gt;Linux基本知识图谱&lt;/h1&gt;</summary>
    
    
    
    <category term="思维导图" scheme="https://hxf233333.gitee.io/categories/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
    
    
    <category term="Linux" scheme="https://hxf233333.gitee.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>利用Github Page+Hexo搭建个人博客</title>
    <link href="https://hxf233333.gitee.io/2020/12/26/%E5%88%A9%E7%94%A8Github%20Page+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://hxf233333.gitee.io/2020/12/26/%E5%88%A9%E7%94%A8Github%20Page+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-12-26T13:30:57.000Z</published>
    <updated>2021-04-13T13:08:07.259Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、准备工作"><a href="#1、准备工作" class="headerlink" title="1、准备工作"></a>1、准备工作</h1><h2 id="本地环境"><a href="#本地环境" class="headerlink" title="本地环境"></a>本地环境</h2><p>首先在<strong>Ubuntu 20.4 LTS</strong>系统里部署本地环境，需要安装nodejs和git工具，由于<code>Hexo</code>是基于<code>Node.js</code>的一款博客框架，相比<code>Jekyll</code>框架部署更快更简洁。<code>git</code>是一个分布式版本控制系统，用于项目的版本控制管理。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> nodejs <span class="token comment"># 安装nodejs</span><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">git</span> <span class="token comment"># 安装git</span><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">npm</span> <span class="token comment">#安装npm</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>可在命令行输入相应的检验是否安装成功，如果安装成功会有相应的版本号。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nodejs -v<span class="token function">git</span> --version<span class="token function">npm</span> -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><img src="1.png" style="zoom:150%;" srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="1.png" class="lozad post-image"><h2 id="本地安装Hexo"><a href="#本地安装Hexo" class="headerlink" title="本地安装Hexo"></a>本地安装Hexo</h2><p>如果以上环境准备好了就可以使用npm命令开始安装Hexo，也可以查看<a href="https://hexo.io/zh-cn/">Hexo</a>官方文档。</p><p>在命令行输入执行以下命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli  <span class="token comment"># 安装Hexo</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> hexo init myBlog  <span class="token comment"># 会在home目录下新建一个myBlog文件夹</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ~/myBlog<span class="token function">sudo</span> <span class="token function">npm</span> <span class="token function">install</span>  <span class="token comment"># 会在myBlog文件夹下创建所需要的文件</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>新建完成后，使用tree命令查看myBlog文件夹的一级目录如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hxf@hxf-virtual-machine:~/myBlog $ tree -L <span class="token number">1</span><span class="token builtin class-name">.</span>├── _config.landscape.yml├── _config.yml   <span class="token comment"># 网站的配置信息，可以在此配置大部分参数</span>├── db.json        ├── node_modules├── package.json├── package-lock.json├── public├── scaffolds   ├── <span class="token builtin class-name">source</span>      <span class="token comment"># 资源文件夹，包含文章Markdown文件</span>└── themes      <span class="token comment"># 主题文件夹</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果以上过程没有报错，运行<code>hexo s</code>命令，在浏览器中输入<a href="http://localhost:4000/">http://localhost:4000</a> 回车即可预览本地效果。</p><h1 id="2、创建github-page"><a href="#2、创建github-page" class="headerlink" title="2、创建github page"></a>2、创建github page</h1><h2 id="创建一个新仓库"><a href="#创建一个新仓库" class="headerlink" title="创建一个新仓库"></a>创建一个新仓库</h2><p>github给用户提供了与用户相同的静态站点，相当于一个二级域名（http://用户名.github.io)，可将同名仓库映射出去。</p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="2.png" class="lozad post-image"src="2.png"><h2 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h2><p>要使用git工具首先要配置SSH key，为部署本地博客到github做准备。</p><p>首先使用git命令全局配置本地账户：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">git</span> config --global user.name <span class="token string">"hxf233333"</span><span class="token function">sudo</span> <span class="token function">git</span> config --global user.email <span class="token string">"1244792997@qq.com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后开始生成SSH key</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> ssh-keygen -t rsa -C <span class="token string">'1244792997@qq.com'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>按提示回车就行，通过<code>cat ~/.ssh/id_rsa.pub</code>可获取到SSH key。</p><p>然后确认并添加主机到本机ssh可信列表：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">ssh</span> -T git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最后将刚刚获取的SSH key添加到github设置SSH keys里。</p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="3.png" class="lozad post-image"src="3.png"><h1 id="3、部署到github"><a href="#3、部署到github" class="headerlink" title="3、部署到github"></a>3、部署到github</h1><p>首先打开本地 myBlog 文件夹下的  <code>_config.yml</code> 配置参数，在末尾填上以下配置（注意冒号后面有一个空格）：</p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="4.png" class="lozad post-image"src="4.png"><p>然后安装一个部署插件<code>hexo-deployer-git</code>：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最后执行以下命令部署上传：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> hexo g -d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在浏览器访问<code>https://用户名.github.io</code>就可以查看博客。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1、准备工作&quot;&gt;&lt;a href=&quot;#1、准备工作&quot; class=&quot;headerlink&quot; title=&quot;1、准备工作&quot;&gt;&lt;/a&gt;1、准备工作&lt;/h1&gt;&lt;h2 id=&quot;本地环境&quot;&gt;&lt;a href=&quot;#本地环境&quot; class=&quot;headerlink&quot; title=&quot;本</summary>
      
    
    
    
    <category term="搭建环境" scheme="https://hxf233333.gitee.io/categories/%E6%90%AD%E5%BB%BA%E7%8E%AF%E5%A2%83/"/>
    
    
    <category term="教程" scheme="https://hxf233333.gitee.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://hxf233333.gitee.io/2020/12/21/hello-world/"/>
    <id>https://hxf233333.gitee.io/2020/12/21/hello-world/</id>
    <published>2020-12-21T13:03:55.643Z</published>
    <updated>2020-12-21T13:03:55.643Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
